INFO  19:52:00,183 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:52:00,219 - #2 program
INFO  19:52:00,219 - #42 MJProgram
INFO  19:52:00,219 - #3 const
INFO  19:52:00,220 - #42 bool
INFO  19:52:00,220 - #42 b
INFO  19:52:00,221 - #11 =
INFO  19:52:00,221 - #43 true
INFO  19:52:00,221 - #6 ;
INFO  19:52:00,222 - #4 {
INFO  19:52:00,222 - #17 void
INFO  19:52:00,222 - #42 main
INFO  19:52:00,222 - #7 (
INFO  19:52:00,222 - #42 bool
INFO  19:52:00,223 - #42 a
INFO  19:52:00,223 - #8 )
INFO  19:52:00,223 - #42 int
INFO  19:52:00,223 - #42 x
INFO  19:52:00,223 - #6 ;
INFO  19:52:00,223 - #42 bool
INFO  19:52:00,224 - #42 b
INFO  19:52:00,224 - #6 ;
INFO  19:52:00,224 - #4 {
INFO  19:52:00,224 - #26 if
INFO  19:52:00,224 - #7 (
INFO  19:52:00,224 - #42 a
INFO  19:52:00,225 - #31 &&
INFO  19:52:00,227 - #42 b
INFO  19:52:00,227 - #8 )
INFO  19:52:00,227 - #4 {
INFO  19:52:00,227 - #42 x
INFO  19:52:00,227 - #11 =
INFO  19:52:00,227 - #41 1
INFO  19:52:00,227 - #6 ;
INFO  19:52:00,228 - #42 x
INFO  19:52:00,228 - #11 =
INFO  19:52:00,228 - #41 2
INFO  19:52:00,228 - #6 ;
INFO  19:52:00,228 - #5 }
INFO  19:52:00,228 - #5 }
INFO  19:52:00,228 - #5 }
INFO  19:52:00,235 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:52:00,235 - ===================================
INFO  19:52:16,718 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:52:16,755 - #2 program
INFO  19:52:16,755 - #42 MJProgram
INFO  19:52:16,755 - #3 const
INFO  19:52:16,756 - #42 bool
INFO  19:52:16,756 - #42 b
INFO  19:52:16,756 - #11 =
INFO  19:52:16,756 - #43 true
INFO  19:52:16,756 - #6 ;
INFO  19:52:16,757 - #4 {
INFO  19:52:16,758 - #17 void
INFO  19:52:16,758 - #42 main
INFO  19:52:16,758 - #7 (
INFO  19:52:16,758 - #42 bool
INFO  19:52:16,758 - #42 a
INFO  19:52:16,758 - #8 )
INFO  19:52:16,758 - #42 int
INFO  19:52:16,758 - #42 x
INFO  19:52:16,758 - #6 ;
INFO  19:52:16,759 - #42 bool
INFO  19:52:16,759 - #42 b
INFO  19:52:16,759 - #6 ;
INFO  19:52:16,759 - #4 {
INFO  19:52:16,759 - #26 if
INFO  19:52:16,759 - #7 (
INFO  19:52:16,759 - #42 a
INFO  19:52:16,760 - #31 &&
INFO  19:52:16,761 - #42 b
INFO  19:52:16,762 - #8 )
INFO  19:52:16,762 - #4 {
INFO  19:52:16,762 - #42 x
INFO  19:52:16,762 - #11 =
INFO  19:52:16,762 - #41 1
INFO  19:52:16,762 - #6 ;
INFO  19:52:16,763 - #42 x
INFO  19:52:16,763 - #11 =
INFO  19:52:16,763 - #41 2
INFO  19:52:16,763 - #6 ;
INFO  19:52:16,763 - #5 }
INFO  19:52:16,763 - #5 }
INFO  19:52:16,763 - #5 }
INFO  19:52:16,770 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:52:16,771 - ===================================
INFO  19:52:18,033 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:52:18,068 - #2 program
INFO  19:52:18,068 - #42 MJProgram
INFO  19:52:18,068 - #3 const
INFO  19:52:18,069 - #42 bool
INFO  19:52:18,069 - #42 b
INFO  19:52:18,070 - #11 =
INFO  19:52:18,070 - #43 true
INFO  19:52:18,070 - #6 ;
INFO  19:52:18,070 - #4 {
INFO  19:52:18,071 - #17 void
INFO  19:52:18,071 - #42 main
INFO  19:52:18,071 - #7 (
INFO  19:52:18,071 - #42 bool
INFO  19:52:18,071 - #42 a
INFO  19:52:18,071 - #8 )
INFO  19:52:18,072 - #42 int
INFO  19:52:18,072 - #42 x
INFO  19:52:18,072 - #6 ;
INFO  19:52:18,072 - #42 bool
INFO  19:52:18,073 - #42 b
INFO  19:52:18,073 - #6 ;
INFO  19:52:18,073 - #4 {
INFO  19:52:18,073 - #26 if
INFO  19:52:18,073 - #7 (
INFO  19:52:18,073 - #42 a
INFO  19:52:18,073 - #31 &&
INFO  19:52:18,075 - #42 b
INFO  19:52:18,075 - #8 )
INFO  19:52:18,075 - #4 {
INFO  19:52:18,076 - #42 x
INFO  19:52:18,076 - #11 =
INFO  19:52:18,076 - #41 1
INFO  19:52:18,076 - #6 ;
INFO  19:52:18,076 - #42 x
INFO  19:52:18,076 - #11 =
INFO  19:52:18,076 - #41 2
INFO  19:52:18,076 - #6 ;
INFO  19:52:18,076 - #5 }
INFO  19:52:18,077 - #5 }
INFO  19:52:18,077 - #5 }
INFO  19:52:18,083 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:52:18,084 - ===================================
INFO  19:52:19,305 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:52:19,341 - #2 program
INFO  19:52:19,341 - #42 MJProgram
INFO  19:52:19,341 - #3 const
INFO  19:52:19,342 - #42 bool
INFO  19:52:19,343 - #42 b
INFO  19:52:19,343 - #11 =
INFO  19:52:19,343 - #43 true
INFO  19:52:19,343 - #6 ;
INFO  19:52:19,344 - #4 {
INFO  19:52:19,344 - #17 void
INFO  19:52:19,344 - #42 main
INFO  19:52:19,344 - #7 (
INFO  19:52:19,345 - #42 bool
INFO  19:52:19,345 - #42 a
INFO  19:52:19,345 - #8 )
INFO  19:52:19,345 - #42 int
INFO  19:52:19,345 - #42 x
INFO  19:52:19,345 - #6 ;
INFO  19:52:19,345 - #42 bool
INFO  19:52:19,346 - #42 b
INFO  19:52:19,346 - #6 ;
INFO  19:52:19,346 - #4 {
INFO  19:52:19,346 - #26 if
INFO  19:52:19,346 - #7 (
INFO  19:52:19,346 - #42 a
INFO  19:52:19,346 - #31 &&
INFO  19:52:19,348 - #42 b
INFO  19:52:19,348 - #8 )
INFO  19:52:19,348 - #4 {
INFO  19:52:19,349 - #42 x
INFO  19:52:19,349 - #11 =
INFO  19:52:19,349 - #41 1
INFO  19:52:19,349 - #6 ;
INFO  19:52:19,349 - #42 x
INFO  19:52:19,349 - #11 =
INFO  19:52:19,349 - #41 2
INFO  19:52:19,349 - #6 ;
INFO  19:52:19,350 - #5 }
INFO  19:52:19,350 - #5 }
INFO  19:52:19,350 - #5 }
INFO  19:52:19,356 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:52:19,357 - ===================================
INFO  19:52:21,446 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:52:21,482 - #2 program
INFO  19:52:21,482 - #42 MJProgram
INFO  19:52:21,482 - #3 const
INFO  19:52:21,484 - #42 bool
INFO  19:52:21,484 - #42 b
INFO  19:52:21,484 - #11 =
INFO  19:52:21,484 - #43 true
INFO  19:52:21,484 - #6 ;
INFO  19:52:21,485 - #4 {
INFO  19:52:21,486 - #17 void
INFO  19:52:21,486 - #42 main
INFO  19:52:21,486 - #7 (
INFO  19:52:21,486 - #42 bool
INFO  19:52:21,486 - #42 a
INFO  19:52:21,486 - #8 )
INFO  19:52:21,486 - #42 int
INFO  19:52:21,486 - #42 x
INFO  19:52:21,486 - #6 ;
INFO  19:52:21,486 - #42 bool
INFO  19:52:21,487 - #42 b
INFO  19:52:21,487 - #6 ;
INFO  19:52:21,487 - #4 {
INFO  19:52:21,487 - #26 if
INFO  19:52:21,487 - #7 (
INFO  19:52:21,487 - #42 a
INFO  19:52:21,488 - #31 &&
INFO  19:52:21,489 - #42 b
INFO  19:52:21,489 - #8 )
INFO  19:52:21,490 - #4 {
INFO  19:52:21,490 - #42 x
INFO  19:52:21,490 - #11 =
INFO  19:52:21,490 - #41 1
INFO  19:52:21,490 - #6 ;
INFO  19:52:21,490 - #42 x
INFO  19:52:21,491 - #11 =
INFO  19:52:21,491 - #41 2
INFO  19:52:21,491 - #6 ;
INFO  19:52:21,491 - #5 }
INFO  19:52:21,491 - #5 }
INFO  19:52:21,491 - #5 }
INFO  19:52:21,498 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:52:21,499 - ===================================
INFO  19:52:22,576 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:52:22,612 - #2 program
INFO  19:52:22,612 - #42 MJProgram
INFO  19:52:22,612 - #3 const
INFO  19:52:22,613 - #42 bool
INFO  19:52:22,613 - #42 b
INFO  19:52:22,613 - #11 =
INFO  19:52:22,613 - #43 true
INFO  19:52:22,613 - #6 ;
INFO  19:52:22,614 - #4 {
INFO  19:52:22,615 - #17 void
INFO  19:52:22,615 - #42 main
INFO  19:52:22,615 - #7 (
INFO  19:52:22,615 - #42 bool
INFO  19:52:22,615 - #42 a
INFO  19:52:22,615 - #8 )
INFO  19:52:22,615 - #42 int
INFO  19:52:22,615 - #42 x
INFO  19:52:22,615 - #6 ;
INFO  19:52:22,615 - #42 bool
INFO  19:52:22,616 - #42 b
INFO  19:52:22,616 - #6 ;
INFO  19:52:22,616 - #4 {
INFO  19:52:22,616 - #26 if
INFO  19:52:22,616 - #7 (
INFO  19:52:22,616 - #42 a
INFO  19:52:22,617 - #31 &&
INFO  19:52:22,618 - #42 b
INFO  19:52:22,618 - #8 )
INFO  19:52:22,619 - #4 {
INFO  19:52:22,619 - #42 x
INFO  19:52:22,619 - #11 =
INFO  19:52:22,619 - #41 1
INFO  19:52:22,619 - #6 ;
INFO  19:52:22,619 - #42 x
INFO  19:52:22,620 - #11 =
INFO  19:52:22,620 - #41 2
INFO  19:52:22,620 - #6 ;
INFO  19:52:22,620 - #5 }
INFO  19:52:22,620 - #5 }
INFO  19:52:22,620 - #5 }
INFO  19:52:22,627 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:52:22,628 - ===================================
INFO  19:52:23,614 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:52:23,650 - #2 program
INFO  19:52:23,650 - #42 MJProgram
INFO  19:52:23,650 - #3 const
INFO  19:52:23,651 - #42 bool
INFO  19:52:23,651 - #42 b
INFO  19:52:23,651 - #11 =
INFO  19:52:23,651 - #43 true
INFO  19:52:23,651 - #6 ;
INFO  19:52:23,652 - #4 {
INFO  19:52:23,653 - #17 void
INFO  19:52:23,653 - #42 main
INFO  19:52:23,653 - #7 (
INFO  19:52:23,653 - #42 bool
INFO  19:52:23,653 - #42 a
INFO  19:52:23,653 - #8 )
INFO  19:52:23,653 - #42 int
INFO  19:52:23,653 - #42 x
INFO  19:52:23,653 - #6 ;
INFO  19:52:23,653 - #42 bool
INFO  19:52:23,654 - #42 b
INFO  19:52:23,654 - #6 ;
INFO  19:52:23,654 - #4 {
INFO  19:52:23,654 - #26 if
INFO  19:52:23,654 - #7 (
INFO  19:52:23,654 - #42 a
INFO  19:52:23,655 - #31 &&
INFO  19:52:23,656 - #42 b
INFO  19:52:23,656 - #8 )
INFO  19:52:23,657 - #4 {
INFO  19:52:23,657 - #42 x
INFO  19:52:23,657 - #11 =
INFO  19:52:23,657 - #41 1
INFO  19:52:23,657 - #6 ;
INFO  19:52:23,657 - #42 x
INFO  19:52:23,658 - #11 =
INFO  19:52:23,658 - #41 2
INFO  19:52:23,658 - #6 ;
INFO  19:52:23,658 - #5 }
INFO  19:52:23,658 - #5 }
INFO  19:52:23,658 - #5 }
INFO  19:52:23,664 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:52:23,665 - ===================================
INFO  19:52:24,661 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:52:24,696 - #2 program
INFO  19:52:24,696 - #42 MJProgram
INFO  19:52:24,696 - #3 const
INFO  19:52:24,697 - #42 bool
INFO  19:52:24,697 - #42 b
INFO  19:52:24,697 - #11 =
INFO  19:52:24,698 - #43 true
INFO  19:52:24,698 - #6 ;
INFO  19:52:24,698 - #4 {
INFO  19:52:24,699 - #17 void
INFO  19:52:24,699 - #42 main
INFO  19:52:24,699 - #7 (
INFO  19:52:24,699 - #42 bool
INFO  19:52:24,699 - #42 a
INFO  19:52:24,699 - #8 )
INFO  19:52:24,699 - #42 int
INFO  19:52:24,699 - #42 x
INFO  19:52:24,699 - #6 ;
INFO  19:52:24,700 - #42 bool
INFO  19:52:24,700 - #42 b
INFO  19:52:24,700 - #6 ;
INFO  19:52:24,700 - #4 {
INFO  19:52:24,700 - #26 if
INFO  19:52:24,701 - #7 (
INFO  19:52:24,701 - #42 a
INFO  19:52:24,701 - #31 &&
INFO  19:52:24,703 - #42 b
INFO  19:52:24,703 - #8 )
INFO  19:52:24,703 - #4 {
INFO  19:52:24,703 - #42 x
INFO  19:52:24,703 - #11 =
INFO  19:52:24,703 - #41 1
INFO  19:52:24,703 - #6 ;
INFO  19:52:24,704 - #42 x
INFO  19:52:24,704 - #11 =
INFO  19:52:24,704 - #41 2
INFO  19:52:24,704 - #6 ;
INFO  19:52:24,704 - #5 }
INFO  19:52:24,704 - #5 }
INFO  19:52:24,704 - #5 }
INFO  19:52:24,711 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:52:24,712 - ===================================
INFO  19:52:25,753 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:52:25,754 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:52:25,771 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:52:25,798 - #2 program
INFO  19:52:25,798 - #42 MJProgram
INFO  19:52:25,798 - #3 const
INFO  19:52:25,798 - #2 program
INFO  19:52:25,798 - #42 MJProgram
INFO  19:52:25,798 - #3 const
INFO  19:52:25,799 - #42 bool
INFO  19:52:25,799 - #42 bool
INFO  19:52:25,799 - #42 b
INFO  19:52:25,799 - #42 b
INFO  19:52:25,800 - #11 =
INFO  19:52:25,800 - #43 true
INFO  19:52:25,800 - #6 ;
INFO  19:52:25,800 - #11 =
INFO  19:52:25,800 - #43 true
INFO  19:52:25,800 - #6 ;
INFO  19:52:25,801 - #4 {
INFO  19:52:25,801 - #4 {
INFO  19:52:25,801 - #17 void
INFO  19:52:25,801 - #42 main
INFO  19:52:25,801 - #7 (
INFO  19:52:25,802 - #42 bool
INFO  19:52:25,802 - #17 void
INFO  19:52:25,802 - #42 a
INFO  19:52:25,802 - #42 main
INFO  19:52:25,802 - #8 )
INFO  19:52:25,802 - #7 (
INFO  19:52:25,802 - #42 bool
INFO  19:52:25,802 - #42 int
INFO  19:52:25,802 - #42 a
INFO  19:52:25,802 - #42 x
INFO  19:52:25,802 - #8 )
INFO  19:52:25,802 - #6 ;
INFO  19:52:25,802 - #42 bool
INFO  19:52:25,802 - #42 int
INFO  19:52:25,802 - #42 x
INFO  19:52:25,802 - #6 ;
INFO  19:52:25,803 - #42 bool
INFO  19:52:25,803 - #42 b
INFO  19:52:25,803 - #6 ;
INFO  19:52:25,803 - #4 {
INFO  19:52:25,803 - #26 if
INFO  19:52:25,803 - #7 (
INFO  19:52:25,803 - #42 a
INFO  19:52:25,804 - #42 b
INFO  19:52:25,804 - #6 ;
INFO  19:52:25,804 - #4 {
INFO  19:52:25,804 - #26 if
INFO  19:52:25,804 - #7 (
INFO  19:52:25,804 - #42 a
INFO  19:52:25,804 - #31 &&
INFO  19:52:25,805 - #31 &&
INFO  19:52:25,807 - #42 b
INFO  19:52:25,807 - #42 b
INFO  19:52:25,807 - #8 )
INFO  19:52:25,807 - #8 )
INFO  19:52:25,807 - #4 {
INFO  19:52:25,807 - #4 {
INFO  19:52:25,807 - #42 x
INFO  19:52:25,808 - #11 =
INFO  19:52:25,808 - #41 1
INFO  19:52:25,808 - #42 x
INFO  19:52:25,808 - #6 ;
INFO  19:52:25,808 - #11 =
INFO  19:52:25,808 - #41 1
INFO  19:52:25,808 - #6 ;
INFO  19:52:25,808 - #42 x
INFO  19:52:25,808 - #42 x
INFO  19:52:25,808 - #11 =
INFO  19:52:25,808 - #41 2
INFO  19:52:25,808 - #6 ;
INFO  19:52:25,808 - #5 }
INFO  19:52:25,808 - #11 =
INFO  19:52:25,809 - #41 2
INFO  19:52:25,809 - #5 }
INFO  19:52:25,809 - #6 ;
INFO  19:52:25,809 - #5 }
INFO  19:52:25,809 - #5 }
INFO  19:52:25,809 - #5 }
INFO  19:52:25,809 - #5 }
INFO  19:52:25,813 - #2 program
INFO  19:52:25,813 - #42 MJProgram
INFO  19:52:25,813 - #3 const
INFO  19:52:25,814 - #42 bool
INFO  19:52:25,814 - #42 b
INFO  19:52:25,815 - #11 =
INFO  19:52:25,815 - #43 true
INFO  19:52:25,815 - #6 ;
INFO  19:52:25,816 - #4 {
INFO  19:52:25,816 - #17 void
INFO  19:52:25,816 - #42 main
INFO  19:52:25,817 - #7 (
INFO  19:52:25,817 - #42 bool
INFO  19:52:25,817 - #42 a
INFO  19:52:25,817 - #8 )
INFO  19:52:25,817 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:52:25,817 - #42 int
INFO  19:52:25,817 - #42 x
INFO  19:52:25,817 - #6 ;
INFO  19:52:25,817 - ===================================
INFO  19:52:25,818 - #42 bool
INFO  19:52:25,817 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:52:25,818 - ===================================
INFO  19:52:25,818 - #42 b
INFO  19:52:25,819 - #6 ;
INFO  19:52:25,819 - #4 {
INFO  19:52:25,819 - #26 if
INFO  19:52:25,819 - #7 (
INFO  19:52:25,819 - #42 a
INFO  19:52:25,820 - #31 &&
INFO  19:52:25,822 - #42 b
INFO  19:52:25,822 - #8 )
INFO  19:52:25,822 - #4 {
INFO  19:52:25,822 - #42 x
INFO  19:52:25,822 - #11 =
INFO  19:52:25,823 - #41 1
INFO  19:52:25,823 - #6 ;
INFO  19:52:25,823 - #42 x
INFO  19:52:25,823 - #11 =
INFO  19:52:25,823 - #41 2
INFO  19:52:25,823 - #6 ;
INFO  19:52:25,823 - #5 }
INFO  19:52:25,823 - #5 }
INFO  19:52:25,824 - #5 }
INFO  19:52:25,832 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:52:25,832 - ===================================
INFO  19:52:27,100 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:52:27,115 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:52:27,121 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:52:27,134 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:52:27,135 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:52:27,175 - #2 program
INFO  19:52:27,175 - #42 MJProgram
INFO  19:52:27,175 - #3 const
INFO  19:52:27,176 - #42 bool
INFO  19:52:27,176 - #42 b
INFO  19:52:27,177 - #11 =
INFO  19:52:27,177 - #43 true
INFO  19:52:27,177 - #6 ;
INFO  19:52:27,178 - #4 {
INFO  19:52:27,180 - #17 void
INFO  19:52:27,180 - #42 main
INFO  19:52:27,180 - #7 (
INFO  19:52:27,180 - #42 bool
INFO  19:52:27,180 - #42 a
INFO  19:52:27,180 - #8 )
INFO  19:52:27,181 - #42 int
INFO  19:52:27,181 - #42 x
INFO  19:52:27,181 - #6 ;
INFO  19:52:27,181 - #42 bool
INFO  19:52:27,182 - #2 program
INFO  19:52:27,182 - #42 b
INFO  19:52:27,182 - #6 ;
INFO  19:52:27,182 - #4 {
INFO  19:52:27,182 - #26 if
INFO  19:52:27,182 - #42 MJProgram
INFO  19:52:27,182 - #7 (
INFO  19:52:27,183 - #42 a
INFO  19:52:27,183 - #3 const
INFO  19:52:27,183 - #31 &&
INFO  19:52:27,184 - #42 bool
INFO  19:52:27,185 - #42 b
INFO  19:52:27,186 - #11 =
INFO  19:52:27,186 - #43 true
INFO  19:52:27,186 - #6 ;
INFO  19:52:27,187 - #4 {
INFO  19:52:27,187 - #42 b
INFO  19:52:27,187 - #8 )
INFO  19:52:27,188 - #4 {
INFO  19:52:27,188 - #17 void
INFO  19:52:27,188 - #42 main
INFO  19:52:27,188 - #42 x
INFO  19:52:27,189 - #7 (
INFO  19:52:27,189 - #11 =
INFO  19:52:27,189 - #41 1
INFO  19:52:27,189 - #42 bool
INFO  19:52:27,189 - #6 ;
INFO  19:52:27,189 - #42 a
INFO  19:52:27,189 - #8 )
INFO  19:52:27,189 - #42 int
INFO  19:52:27,189 - #42 x
INFO  19:52:27,190 - #6 ;
INFO  19:52:27,189 - #2 program
INFO  19:52:27,190 - #42 x
INFO  19:52:27,190 - #42 MJProgram
INFO  19:52:27,190 - #3 const
INFO  19:52:27,190 - #42 bool
INFO  19:52:27,190 - #11 =
INFO  19:52:27,190 - #41 2
INFO  19:52:27,190 - #6 ;
INFO  19:52:27,190 - #5 }
INFO  19:52:27,190 - #5 }
INFO  19:52:27,191 - #42 b
INFO  19:52:27,191 - #5 }
INFO  19:52:27,191 - #42 bool
INFO  19:52:27,191 - #6 ;
INFO  19:52:27,191 - #42 b
INFO  19:52:27,192 - #4 {
INFO  19:52:27,192 - #26 if
INFO  19:52:27,192 - #7 (
INFO  19:52:27,192 - #42 a
INFO  19:52:27,193 - #31 &&
INFO  19:52:27,193 - #11 =
INFO  19:52:27,193 - #43 true
INFO  19:52:27,193 - #6 ;
INFO  19:52:27,195 - #4 {
INFO  19:52:27,196 - #17 void
INFO  19:52:27,196 - #42 main
INFO  19:52:27,196 - #7 (
INFO  19:52:27,196 - #42 bool
INFO  19:52:27,196 - #42 a
INFO  19:52:27,197 - #8 )
INFO  19:52:27,197 - #42 int
INFO  19:52:27,197 - #42 x
INFO  19:52:27,197 - #6 ;
INFO  19:52:27,197 - #42 b
INFO  19:52:27,198 - #8 )
INFO  19:52:27,198 - #42 bool
INFO  19:52:27,198 - #2 program
INFO  19:52:27,198 - #42 MJProgram
INFO  19:52:27,198 - #4 {
INFO  19:52:27,198 - #3 const
INFO  19:52:27,199 - #42 b
INFO  19:52:27,199 - #6 ;
INFO  19:52:27,199 - #4 {
INFO  19:52:27,199 - #42 x
INFO  19:52:27,199 - #26 if
INFO  19:52:27,199 - #7 (
INFO  19:52:27,199 - #11 =
INFO  19:52:27,199 - #42 a
INFO  19:52:27,199 - #41 1
INFO  19:52:27,199 - #6 ;
INFO  19:52:27,200 - #42 bool
INFO  19:52:27,200 - #42 b
INFO  19:52:27,200 - #42 x
INFO  19:52:27,200 - #31 &&
INFO  19:52:27,200 - #11 =
INFO  19:52:27,200 - #41 2
INFO  19:52:27,200 - #6 ;
INFO  19:52:27,201 - #5 }
INFO  19:52:27,201 - #11 =
INFO  19:52:27,201 - #43 true
INFO  19:52:27,201 - #5 }
INFO  19:52:27,201 - #6 ;
INFO  19:52:27,201 - #5 }
INFO  19:52:27,202 - #4 {
INFO  19:52:27,203 - #42 b
INFO  19:52:27,203 - #8 )
INFO  19:52:27,203 - #4 {
INFO  19:52:27,203 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:52:27,204 - #2 program
INFO  19:52:27,204 - ===================================
INFO  19:52:27,204 - #42 x
INFO  19:52:27,204 - #11 =
INFO  19:52:27,204 - #42 MJProgram
INFO  19:52:27,204 - #41 1
INFO  19:52:27,204 - #6 ;
INFO  19:52:27,204 - #3 const
INFO  19:52:27,205 - #17 void
INFO  19:52:27,205 - #42 main
INFO  19:52:27,205 - #42 x
INFO  19:52:27,205 - #7 (
INFO  19:52:27,205 - #11 =
INFO  19:52:27,205 - #42 bool
INFO  19:52:27,205 - #41 2
INFO  19:52:27,205 - #6 ;
INFO  19:52:27,205 - #5 }
INFO  19:52:27,205 - #42 a
INFO  19:52:27,206 - #8 )
INFO  19:52:27,206 - #5 }
INFO  19:52:27,206 - #42 int
INFO  19:52:27,206 - #5 }
INFO  19:52:27,206 - #42 x
INFO  19:52:27,206 - #6 ;
INFO  19:52:27,206 - #42 bool
INFO  19:52:27,207 - #42 bool
INFO  19:52:27,207 - #42 b
INFO  19:52:27,207 - #42 b
INFO  19:52:27,207 - #11 =
INFO  19:52:27,207 - #6 ;
INFO  19:52:27,207 - #43 true
INFO  19:52:27,208 - #6 ;
INFO  19:52:27,208 - #4 {
INFO  19:52:27,208 - #26 if
INFO  19:52:27,208 - #7 (
INFO  19:52:27,208 - #42 a
INFO  19:52:27,209 - #4 {
INFO  19:52:27,209 - #31 &&
INFO  19:52:27,210 - #17 void
INFO  19:52:27,210 - #42 main
INFO  19:52:27,210 - #7 (
INFO  19:52:27,210 - #42 bool
INFO  19:52:27,210 - #42 a
INFO  19:52:27,210 - #8 )
INFO  19:52:27,211 - #42 int
INFO  19:52:27,211 - #42 x
INFO  19:52:27,211 - #6 ;
INFO  19:52:27,211 - #42 bool
INFO  19:52:27,212 - #42 b
INFO  19:52:27,212 - #6 ;
INFO  19:52:27,212 - #42 b
INFO  19:52:27,212 - #4 {
INFO  19:52:27,212 - #26 if
INFO  19:52:27,212 - #8 )
INFO  19:52:27,212 - #7 (
INFO  19:52:27,213 - #42 a
INFO  19:52:27,214 - #31 &&
INFO  19:52:27,213 - #4 {
INFO  19:52:27,215 - #42 x
INFO  19:52:27,215 - #11 =
INFO  19:52:27,215 - #41 1
INFO  19:52:27,215 - #6 ;
INFO  19:52:27,215 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:52:27,215 - #42 x
INFO  19:52:27,216 - #11 =
INFO  19:52:27,216 - ===================================
INFO  19:52:27,216 - #41 2
INFO  19:52:27,216 - #6 ;
INFO  19:52:27,216 - #5 }
INFO  19:52:27,216 - #5 }
INFO  19:52:27,217 - #5 }
INFO  19:52:27,217 - #42 b
INFO  19:52:27,217 - #8 )
INFO  19:52:27,218 - #4 {
INFO  19:52:27,218 - #42 x
INFO  19:52:27,218 - #11 =
INFO  19:52:27,218 - #41 1
INFO  19:52:27,218 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:52:27,218 - #6 ;
INFO  19:52:27,219 - #42 x
INFO  19:52:27,219 - ===================================
INFO  19:52:27,219 - #11 =
INFO  19:52:27,219 - #41 2
INFO  19:52:27,219 - #6 ;
INFO  19:52:27,220 - #5 }
INFO  19:52:27,220 - #5 }
INFO  19:52:27,220 - #5 }
INFO  19:52:27,227 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:52:27,228 - ===================================
INFO  19:52:27,230 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:52:27,230 - ===================================
INFO  19:52:27,278 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:52:27,315 - #2 program
INFO  19:52:27,315 - #42 MJProgram
INFO  19:52:27,315 - #3 const
INFO  19:52:27,316 - #42 bool
INFO  19:52:27,316 - #42 b
INFO  19:52:27,316 - #11 =
INFO  19:52:27,316 - #43 true
INFO  19:52:27,316 - #6 ;
INFO  19:52:27,317 - #4 {
INFO  19:52:27,318 - #17 void
INFO  19:52:27,318 - #42 main
INFO  19:52:27,318 - #7 (
INFO  19:52:27,318 - #42 bool
INFO  19:52:27,318 - #42 a
INFO  19:52:27,318 - #8 )
INFO  19:52:27,318 - #42 int
INFO  19:52:27,318 - #42 x
INFO  19:52:27,319 - #6 ;
INFO  19:52:27,319 - #42 bool
INFO  19:52:27,319 - #42 b
INFO  19:52:27,319 - #6 ;
INFO  19:52:27,319 - #4 {
INFO  19:52:27,319 - #26 if
INFO  19:52:27,320 - #7 (
INFO  19:52:27,320 - #42 a
INFO  19:52:27,320 - #31 &&
INFO  19:52:27,322 - #42 b
INFO  19:52:27,322 - #8 )
INFO  19:52:27,322 - #4 {
INFO  19:52:27,322 - #42 x
INFO  19:52:27,322 - #11 =
INFO  19:52:27,322 - #41 1
INFO  19:52:27,322 - #6 ;
INFO  19:52:27,323 - #42 x
INFO  19:52:27,323 - #11 =
INFO  19:52:27,323 - #41 2
INFO  19:52:27,323 - #6 ;
INFO  19:52:27,323 - #5 }
INFO  19:52:27,323 - #5 }
INFO  19:52:27,323 - #5 }
INFO  19:52:27,330 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:52:27,330 - ===================================
INFO  19:53:33,116 - Obradjuje se funckijamain na liniji 4
INFO  19:53:40,022 - Hello Var a na liniji 4
INFO  19:54:07,574 - Hello Var x na liniji 5
INFO  19:54:31,323 - Hello Var b na liniji 6
INFO  19:54:39,395 - 5 na liniji 8
INFO  19:54:39,396 - xd1 na liniji 8
INFO  19:54:39,397 - 5 na liniji 8
INFO  19:54:39,399 - 5 na liniji 8
INFO  19:55:25,045 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:55:25,087 - #2 program
INFO  19:55:25,087 - #42 MJProgram
INFO  19:55:25,088 - #3 const
INFO  19:55:25,089 - #42 bool
INFO  19:55:25,089 - #42 b
INFO  19:55:25,089 - #11 =
INFO  19:55:25,089 - #43 true
INFO  19:55:25,089 - #6 ;
INFO  19:55:25,090 - #4 {
INFO  19:55:25,091 - #17 void
INFO  19:55:25,091 - #42 main
INFO  19:55:25,091 - #7 (
INFO  19:55:25,091 - #42 bool
INFO  19:55:25,091 - #42 a
INFO  19:55:25,091 - #8 )
INFO  19:55:25,091 - #42 int
INFO  19:55:25,091 - #42 x
INFO  19:55:25,091 - #6 ;
INFO  19:55:25,092 - #42 bool
INFO  19:55:25,092 - #42 b
INFO  19:55:25,092 - #6 ;
INFO  19:55:25,092 - #4 {
INFO  19:55:25,093 - #26 if
INFO  19:55:25,093 - #7 (
INFO  19:55:25,093 - #42 a
INFO  19:55:25,093 - #31 &&
INFO  19:55:25,095 - #42 b
INFO  19:55:25,095 - #8 )
INFO  19:55:25,095 - #4 {
INFO  19:55:25,096 - #42 x
INFO  19:55:25,096 - #11 =
INFO  19:55:25,096 - #41 1
INFO  19:55:25,096 - #6 ;
INFO  19:55:25,096 - #42 x
INFO  19:55:25,097 - #11 =
INFO  19:55:25,097 - #41 2
INFO  19:55:25,097 - #6 ;
INFO  19:55:25,097 - #5 }
INFO  19:55:25,097 - #5 }
INFO  19:55:25,097 - #5 }
INFO  19:55:25,105 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:55:25,106 - ===================================
INFO  19:55:37,144 - Obradjuje se funckijamain na liniji 4
INFO  19:55:37,146 - Hello Var a na liniji 4
INFO  19:55:37,155 - Hello Var x na liniji 5
INFO  19:55:37,157 - Hello Var b na liniji 6
INFO  19:55:37,158 - 5 na liniji 8
INFO  19:55:37,160 - xd1 na liniji 8
INFO  19:55:37,161 - 5 na liniji 8
INFO  19:55:37,162 - 5 na liniji 8
INFO  19:56:20,778 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:56:20,803 - #2 program
INFO  19:56:20,803 - #42 MJProgram
INFO  19:56:20,803 - #3 const
INFO  19:56:20,804 - #42 bool
INFO  19:56:20,804 - #42 b
INFO  19:56:20,804 - #11 =
INFO  19:56:20,804 - #43 true
INFO  19:56:20,804 - #6 ;
INFO  19:56:20,805 - #4 {
INFO  19:56:20,805 - #17 void
INFO  19:56:20,805 - #42 main
INFO  19:56:20,805 - #7 (
INFO  19:56:20,805 - #42 bool
INFO  19:56:20,805 - #42 a
INFO  19:56:20,805 - #8 )
INFO  19:56:20,806 - #42 int
INFO  19:56:20,806 - #42 x
INFO  19:56:20,806 - #6 ;
INFO  19:56:20,806 - #42 bool
INFO  19:56:20,806 - #42 b
INFO  19:56:20,806 - #6 ;
INFO  19:56:20,806 - #4 {
INFO  19:56:20,806 - #26 if
INFO  19:56:20,807 - #7 (
INFO  19:56:20,807 - #42 a
INFO  19:56:20,807 - #31 &&
INFO  19:56:20,808 - #42 b
INFO  19:56:20,808 - #8 )
INFO  19:56:20,809 - #4 {
INFO  19:56:20,809 - #42 x
INFO  19:56:20,809 - #11 =
INFO  19:56:20,809 - #41 1
INFO  19:56:20,809 - #6 ;
INFO  19:56:20,809 - #42 x
INFO  19:56:20,810 - #11 =
INFO  19:56:20,810 - #41 2
INFO  19:56:20,810 - #6 ;
INFO  19:56:20,810 - #5 }
INFO  19:56:20,810 - #5 }
INFO  19:56:20,810 - #5 }
INFO  19:56:20,815 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:56:20,816 - ===================================
INFO  19:56:20,818 - Obradjuje se funckijamain na liniji 4
INFO  19:56:20,818 - Hello Var a na liniji 4
INFO  19:56:20,819 - Hello Var x na liniji 5
INFO  19:56:20,819 - Hello Var b na liniji 6
INFO  19:56:20,819 - 5 na liniji 8
INFO  19:56:20,819 - xd1 na liniji 8
INFO  19:56:20,819 - 5 na liniji 8
INFO  19:56:20,819 - 5 na liniji 8
INFO  19:56:55,149 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:56:55,173 - #2 program
INFO  19:56:55,173 - #42 MJProgram
INFO  19:56:55,173 - #3 const
INFO  19:56:55,174 - #42 bool
INFO  19:56:55,174 - #42 b
INFO  19:56:55,174 - #11 =
INFO  19:56:55,175 - #43 true
INFO  19:56:55,175 - #6 ;
INFO  19:56:55,175 - #4 {
INFO  19:56:55,176 - #17 void
INFO  19:56:55,176 - #42 main
INFO  19:56:55,176 - #7 (
INFO  19:56:55,176 - #42 bool
INFO  19:56:55,176 - #42 a
INFO  19:56:55,176 - #8 )
INFO  19:56:55,176 - #42 int
INFO  19:56:55,176 - #42 x
INFO  19:56:55,176 - #6 ;
INFO  19:56:55,176 - #42 bool
INFO  19:56:55,177 - #42 b
INFO  19:56:55,177 - #6 ;
INFO  19:56:55,177 - #4 {
INFO  19:56:55,177 - #26 if
INFO  19:56:55,177 - #7 (
INFO  19:56:55,177 - #42 a
INFO  19:56:55,177 - #31 &&
INFO  19:56:55,179 - #42 b
INFO  19:56:55,179 - #8 )
INFO  19:56:55,179 - #4 {
INFO  19:56:55,180 - #42 x
INFO  19:56:55,180 - #11 =
INFO  19:56:55,180 - #41 1
INFO  19:56:55,180 - #6 ;
INFO  19:56:55,180 - #42 x
INFO  19:56:55,180 - #11 =
INFO  19:56:55,180 - #41 2
INFO  19:56:55,180 - #6 ;
INFO  19:56:55,180 - #5 }
INFO  19:56:55,180 - #5 }
INFO  19:56:55,181 - #5 }
INFO  19:56:55,186 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:56:55,187 - ===================================
INFO  19:56:55,189 - Obradjuje se funckijamain na liniji 4
INFO  19:56:55,189 - Hello Var a na liniji 4
INFO  19:56:55,190 - Hello Var x na liniji 5
INFO  19:56:55,190 - Hello Var b na liniji 6
INFO  19:56:55,190 - 5 na liniji 8
INFO  19:56:55,190 - xd1 na liniji 8
INFO  19:56:55,190 - 5 na liniji 8
INFO  19:56:55,190 - 5 na liniji 8
INFO  19:56:55,190 - usao condOne na liniji 8
INFO  19:57:29,352 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:57:29,376 - #2 program
INFO  19:57:29,376 - #42 MJProgram
INFO  19:57:29,376 - #3 const
INFO  19:57:29,376 - #42 bool
INFO  19:57:29,376 - #42 b
INFO  19:57:29,377 - #11 =
INFO  19:57:29,377 - #43 true
INFO  19:57:29,377 - #6 ;
INFO  19:57:29,377 - #4 {
INFO  19:57:29,378 - #17 void
INFO  19:57:29,378 - #42 main
INFO  19:57:29,378 - #7 (
INFO  19:57:29,378 - #42 bool
INFO  19:57:29,378 - #42 a
INFO  19:57:29,378 - #8 )
INFO  19:57:29,378 - #42 int
INFO  19:57:29,378 - #42 x
INFO  19:57:29,378 - #6 ;
INFO  19:57:29,379 - #42 bool
INFO  19:57:29,379 - #42 b
INFO  19:57:29,379 - #6 ;
INFO  19:57:29,379 - #4 {
INFO  19:57:29,379 - #26 if
INFO  19:57:29,379 - #7 (
INFO  19:57:29,379 - #42 a
INFO  19:57:29,380 - #31 &&
INFO  19:57:29,381 - #42 b
INFO  19:57:29,381 - #8 )
INFO  19:57:29,381 - #4 {
INFO  19:57:29,381 - #42 x
INFO  19:57:29,382 - #11 =
INFO  19:57:29,382 - #41 1
INFO  19:57:29,382 - #6 ;
INFO  19:57:29,382 - #42 x
INFO  19:57:29,382 - #11 =
INFO  19:57:29,382 - #41 2
INFO  19:57:29,382 - #6 ;
INFO  19:57:29,382 - #5 }
INFO  19:57:29,382 - #5 }
INFO  19:57:29,383 - #5 }
INFO  19:57:29,388 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:57:29,388 - ===================================
INFO  19:57:29,391 - Obradjuje se funckijamain na liniji 4
INFO  19:57:29,391 - Hello Var a na liniji 4
INFO  19:57:29,391 - Hello Var x na liniji 5
INFO  19:57:29,391 - Hello Var b na liniji 6
INFO  19:57:29,391 - 5 na liniji 8
INFO  19:57:29,392 - usao condTermOne na liniji 8
INFO  19:57:29,392 - 5 na liniji 8
INFO  19:57:29,392 - 5 na liniji 8
INFO  19:57:29,392 - usao condOne na liniji 8
INFO  19:58:15,480 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:58:15,505 - #2 program
INFO  19:58:15,505 - #42 MJProgram
INFO  19:58:15,505 - #3 const
INFO  19:58:15,505 - #42 bool
INFO  19:58:15,505 - #42 b
INFO  19:58:15,506 - #11 =
INFO  19:58:15,506 - #43 true
INFO  19:58:15,506 - #6 ;
INFO  19:58:15,506 - #4 {
INFO  19:58:15,507 - #17 void
INFO  19:58:15,507 - #42 main
INFO  19:58:15,507 - #7 (
INFO  19:58:15,507 - #42 bool
INFO  19:58:15,507 - #42 a
INFO  19:58:15,507 - #8 )
INFO  19:58:15,508 - #42 int
INFO  19:58:15,508 - #42 x
INFO  19:58:15,508 - #6 ;
INFO  19:58:15,508 - #42 bool
INFO  19:58:15,508 - #42 b
INFO  19:58:15,508 - #6 ;
INFO  19:58:15,508 - #4 {
INFO  19:58:15,508 - #26 if
INFO  19:58:15,509 - #7 (
INFO  19:58:15,509 - #42 a
INFO  19:58:15,509 - #31 &&
INFO  19:58:15,510 - #42 b
INFO  19:58:15,511 - #31 &&
INFO  19:58:15,511 - #42 c
INFO  19:58:15,511 - #8 )
INFO  19:58:15,511 - #4 {
INFO  19:58:15,511 - #42 x
INFO  19:58:15,511 - #11 =
INFO  19:58:15,511 - #41 1
INFO  19:58:15,511 - #6 ;
INFO  19:58:15,512 - #42 x
INFO  19:58:15,512 - #11 =
INFO  19:58:15,512 - #41 2
INFO  19:58:15,512 - #6 ;
INFO  19:58:15,512 - #5 }
INFO  19:58:15,512 - #5 }
INFO  19:58:15,512 - #5 }
INFO  19:58:15,518 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermMany(
                CondTermOne(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             a
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                ) [CondTermOne]
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           b
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermMany]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         c
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:58:15,518 - ===================================
INFO  19:58:15,521 - Obradjuje se funckijamain na liniji 4
INFO  19:58:15,521 - Hello Var a na liniji 4
INFO  19:58:15,521 - Hello Var x na liniji 5
INFO  19:58:15,521 - Hello Var b na liniji 6
INFO  19:58:15,521 - 5 na liniji 8
INFO  19:58:15,521 - usao condTermOne na liniji 8
INFO  19:58:15,521 - 5 na liniji 8
INFO  19:58:15,522 - 5 na liniji 8
ERROR 19:58:15,522 - Greska: Nije deklarisana promenljiva!Designator na liniji 8
INFO  19:58:35,974 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  19:58:35,997 - #2 program
INFO  19:58:35,997 - #42 MJProgram
INFO  19:58:35,997 - #3 const
INFO  19:58:35,998 - #42 bool
INFO  19:58:35,998 - #42 b
INFO  19:58:35,998 - #11 =
INFO  19:58:35,998 - #43 true
INFO  19:58:35,999 - #6 ;
INFO  19:58:35,999 - #4 {
INFO  19:58:36,000 - #17 void
INFO  19:58:36,000 - #42 main
INFO  19:58:36,000 - #7 (
INFO  19:58:36,000 - #42 bool
INFO  19:58:36,000 - #42 a
INFO  19:58:36,000 - #8 )
INFO  19:58:36,000 - #42 int
INFO  19:58:36,000 - #42 x
INFO  19:58:36,000 - #6 ;
INFO  19:58:36,000 - #42 bool
INFO  19:58:36,001 - #42 b
INFO  19:58:36,001 - #6 ;
INFO  19:58:36,001 - #42 bool
INFO  19:58:36,001 - #42 c
INFO  19:58:36,001 - #6 ;
INFO  19:58:36,001 - #4 {
INFO  19:58:36,001 - #26 if
INFO  19:58:36,001 - #7 (
INFO  19:58:36,001 - #42 a
INFO  19:58:36,002 - #31 &&
INFO  19:58:36,003 - #42 b
INFO  19:58:36,003 - #31 &&
INFO  19:58:36,003 - #42 c
INFO  19:58:36,003 - #8 )
INFO  19:58:36,003 - #4 {
INFO  19:58:36,004 - #42 x
INFO  19:58:36,004 - #11 =
INFO  19:58:36,004 - #41 1
INFO  19:58:36,004 - #6 ;
INFO  19:58:36,004 - #42 x
INFO  19:58:36,004 - #11 =
INFO  19:58:36,004 - #41 2
INFO  19:58:36,004 - #6 ;
INFO  19:58:36,004 - #5 }
INFO  19:58:36,004 - #5 }
INFO  19:58:36,005 - #5 }
INFO  19:58:36,010 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   x
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 b
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               c
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermMany(
                CondTermOne(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             a
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                ) [CondTermOne]
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           b
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermMany]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         c
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  19:58:36,011 - ===================================
INFO  19:58:36,013 - Obradjuje se funckijamain na liniji 4
INFO  19:58:36,013 - Hello Var a na liniji 4
INFO  19:58:36,014 - Hello Var x na liniji 5
INFO  19:58:36,014 - Hello Var b na liniji 6
INFO  19:58:36,014 - Hello Var c na liniji 7
INFO  19:58:36,014 - 5 na liniji 9
INFO  19:58:36,014 - usao condTermOne na liniji 9
INFO  19:58:36,014 - 5 na liniji 9
INFO  19:58:36,014 - 5 na liniji 9
INFO  19:58:36,014 - 5 na liniji 9
INFO  19:58:36,014 - usao condOne na liniji 9
INFO  20:02:29,522 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:02:29,546 - #2 program
INFO  20:02:29,546 - #42 MJProgram
INFO  20:02:29,546 - #3 const
INFO  20:02:29,547 - #42 bool
INFO  20:02:29,547 - #42 b
INFO  20:02:29,547 - #11 =
INFO  20:02:29,547 - #43 true
INFO  20:02:29,547 - #6 ;
INFO  20:02:29,548 - #4 {
INFO  20:02:29,548 - #17 void
INFO  20:02:29,548 - #42 main
INFO  20:02:29,548 - #7 (
INFO  20:02:29,549 - #42 bool
INFO  20:02:29,549 - #42 a
INFO  20:02:29,549 - #8 )
INFO  20:02:29,549 - #42 int
INFO  20:02:29,549 - #42 x
INFO  20:02:29,549 - #6 ;
INFO  20:02:29,549 - #42 bool
INFO  20:02:29,550 - #42 b
INFO  20:02:29,550 - #6 ;
INFO  20:02:29,550 - #42 bool
INFO  20:02:29,550 - #42 c
INFO  20:02:29,550 - #6 ;
INFO  20:02:29,550 - #4 {
INFO  20:02:29,550 - #26 if
INFO  20:02:29,550 - #7 (
INFO  20:02:29,550 - #42 a
INFO  20:02:29,550 - #31 &&
INFO  20:02:29,552 - #42 b
INFO  20:02:29,552 - #31 &&
INFO  20:02:29,552 - #42 c
INFO  20:02:29,552 - #8 )
INFO  20:02:29,552 - #4 {
INFO  20:02:29,552 - #42 x
INFO  20:02:29,552 - #11 =
INFO  20:02:29,553 - #41 1
INFO  20:02:29,553 - #6 ;
INFO  20:02:29,553 - #42 x
INFO  20:02:29,553 - #11 =
INFO  20:02:29,553 - #41 2
INFO  20:02:29,553 - #6 ;
INFO  20:02:29,553 - #5 }
INFO  20:02:29,554 - #5 }
INFO  20:02:29,554 - #5 }
INFO  20:02:29,559 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   x
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 b
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               c
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermMany(
                CondTermOne(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             a
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                ) [CondTermOne]
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           b
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermMany]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         c
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:02:29,560 - ===================================
INFO  20:02:29,563 - Obradjuje se funckijamain na liniji 4
INFO  20:02:29,563 - Hello Var a na liniji 4
INFO  20:02:29,563 - Hello Var x na liniji 5
INFO  20:02:29,563 - Hello Var b na liniji 6
INFO  20:02:29,563 - Hello Var c na liniji 7
INFO  20:02:29,563 - 5 na liniji 9
INFO  20:02:29,563 - usao condTermOne na liniji 9
INFO  20:02:29,563 - 5 na liniji 9
INFO  20:02:29,563 - 5 na liniji 9
INFO  20:02:29,564 - usaoCondTermMany na liniji 9
INFO  20:02:29,564 - 5 na liniji 9
INFO  20:02:29,564 - 5 na liniji 9
INFO  20:02:29,564 - 5 na liniji 9
INFO  20:02:29,564 - usaoCondTermMany na liniji 9
INFO  20:02:29,564 - 5 na liniji 9
INFO  20:02:29,564 - 5 na liniji 9
INFO  20:02:29,564 - usao condOne na liniji 9
INFO  20:02:29,564 - 5 na liniji 9
INFO  20:03:15,284 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:03:15,307 - #2 program
INFO  20:03:15,307 - #42 MJProgram
INFO  20:03:15,307 - #3 const
INFO  20:03:15,307 - #42 bool
INFO  20:03:15,308 - #42 b
INFO  20:03:15,308 - #11 =
INFO  20:03:15,308 - #43 true
INFO  20:03:15,308 - #6 ;
INFO  20:03:15,308 - #4 {
INFO  20:03:15,309 - #17 void
INFO  20:03:15,309 - #42 main
INFO  20:03:15,309 - #7 (
INFO  20:03:15,309 - #42 bool
INFO  20:03:15,309 - #42 a
INFO  20:03:15,309 - #8 )
INFO  20:03:15,309 - #42 int
INFO  20:03:15,310 - #42 x
INFO  20:03:15,310 - #6 ;
INFO  20:03:15,310 - #42 bool
INFO  20:03:15,310 - #42 b
INFO  20:03:15,310 - #6 ;
INFO  20:03:15,310 - #42 bool
INFO  20:03:15,310 - #42 c
INFO  20:03:15,310 - #6 ;
INFO  20:03:15,311 - #4 {
INFO  20:03:15,311 - #26 if
INFO  20:03:15,311 - #7 (
INFO  20:03:15,311 - #42 a
INFO  20:03:15,311 - #31 &&
INFO  20:03:15,312 - #42 c
INFO  20:03:15,312 - #8 )
INFO  20:03:15,313 - #4 {
INFO  20:03:15,313 - #42 x
INFO  20:03:15,313 - #11 =
INFO  20:03:15,313 - #41 1
INFO  20:03:15,313 - #6 ;
INFO  20:03:15,313 - #42 x
INFO  20:03:15,313 - #11 =
INFO  20:03:15,313 - #41 2
INFO  20:03:15,313 - #6 ;
INFO  20:03:15,314 - #5 }
INFO  20:03:15,314 - #5 }
INFO  20:03:15,314 - #5 }
INFO  20:03:15,319 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   x
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 b
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               c
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         c
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:03:15,320 - ===================================
INFO  20:03:15,322 - Obradjuje se funckijamain na liniji 4
INFO  20:03:15,322 - Hello Var a na liniji 4
INFO  20:03:15,322 - Hello Var x na liniji 5
INFO  20:03:15,322 - Hello Var b na liniji 6
INFO  20:03:15,322 - Hello Var c na liniji 7
INFO  20:03:15,323 - 5 na liniji 9
INFO  20:03:15,323 - usao condTermOne na liniji 9
INFO  20:03:15,323 - 5 na liniji 9
INFO  20:03:15,323 - 5 na liniji 9
INFO  20:03:15,323 - usaoCondTermMany na liniji 9
INFO  20:03:15,323 - 5 na liniji 9
INFO  20:03:15,323 - 5 na liniji 9
INFO  20:03:15,323 - usao condOne na liniji 9
INFO  20:03:15,323 - 5 na liniji 9
INFO  20:03:23,924 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:03:23,948 - #2 program
INFO  20:03:23,948 - #42 MJProgram
INFO  20:03:23,948 - #3 const
INFO  20:03:23,949 - #42 bool
INFO  20:03:23,949 - #42 b
INFO  20:03:23,949 - #11 =
INFO  20:03:23,949 - #43 true
INFO  20:03:23,949 - #6 ;
INFO  20:03:23,949 - #4 {
INFO  20:03:23,950 - #17 void
INFO  20:03:23,950 - #42 main
INFO  20:03:23,950 - #7 (
INFO  20:03:23,950 - #42 bool
INFO  20:03:23,950 - #42 a
INFO  20:03:23,950 - #8 )
INFO  20:03:23,950 - #42 int
INFO  20:03:23,951 - #42 x
INFO  20:03:23,951 - #6 ;
INFO  20:03:23,951 - #42 bool
INFO  20:03:23,951 - #42 b
INFO  20:03:23,951 - #6 ;
INFO  20:03:23,951 - #42 bool
INFO  20:03:23,951 - #42 c
INFO  20:03:23,951 - #6 ;
INFO  20:03:23,951 - #4 {
INFO  20:03:23,952 - #26 if
INFO  20:03:23,952 - #7 (
INFO  20:03:23,952 - #42 a
INFO  20:03:23,952 - #31 &&
INFO  20:03:23,954 - #42 x
INFO  20:03:23,954 - #8 )
INFO  20:03:23,954 - #4 {
INFO  20:03:23,954 - #42 x
INFO  20:03:23,954 - #11 =
INFO  20:03:23,955 - #41 1
INFO  20:03:23,955 - #6 ;
INFO  20:03:23,955 - #42 x
INFO  20:03:23,955 - #11 =
INFO  20:03:23,955 - #41 2
INFO  20:03:23,955 - #6 ;
INFO  20:03:23,955 - #5 }
INFO  20:03:23,955 - #5 }
INFO  20:03:23,956 - #5 }
INFO  20:03:23,961 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   x
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 b
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               c
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:03:23,962 - ===================================
INFO  20:03:23,964 - Obradjuje se funckijamain na liniji 4
INFO  20:03:23,964 - Hello Var a na liniji 4
INFO  20:03:23,964 - Hello Var x na liniji 5
INFO  20:03:23,964 - Hello Var b na liniji 6
INFO  20:03:23,964 - Hello Var c na liniji 7
INFO  20:03:23,965 - 5 na liniji 9
INFO  20:03:23,965 - usao condTermOne na liniji 9
INFO  20:03:23,965 - 5 na liniji 9
INFO  20:03:23,965 - 1 na liniji 9
INFO  20:03:23,965 - usaoCondTermMany na liniji 9
INFO  20:03:23,965 - 5 na liniji 9
INFO  20:03:23,965 - 1 na liniji 9
ERROR 20:03:23,965 - Greska: Tipovi nisu jednaki!CondTermMany na liniji 9
INFO  20:03:23,965 - usao condOne na liniji 9
INFO  20:03:35,972 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:03:35,996 - #2 program
INFO  20:03:35,996 - #42 MJProgram
INFO  20:03:35,996 - #3 const
INFO  20:03:35,997 - #42 bool
INFO  20:03:35,997 - #42 b
INFO  20:03:35,997 - #11 =
INFO  20:03:35,997 - #43 true
INFO  20:03:35,997 - #6 ;
INFO  20:03:35,998 - #4 {
INFO  20:03:35,998 - #17 void
INFO  20:03:35,998 - #42 main
INFO  20:03:35,998 - #7 (
INFO  20:03:35,998 - #42 bool
INFO  20:03:35,998 - #42 a
INFO  20:03:35,999 - #8 )
INFO  20:03:35,999 - #42 int
INFO  20:03:35,999 - #42 x
INFO  20:03:35,999 - #6 ;
INFO  20:03:35,999 - #42 bool
INFO  20:03:35,999 - #42 b
INFO  20:03:36,000 - #6 ;
INFO  20:03:36,000 - #42 bool
INFO  20:03:36,000 - #42 c
INFO  20:03:36,000 - #6 ;
INFO  20:03:36,000 - #4 {
INFO  20:03:36,000 - #26 if
INFO  20:03:36,000 - #7 (
INFO  20:03:36,000 - #42 a
INFO  20:03:36,000 - #31 &&
INFO  20:03:36,002 - #42 b
INFO  20:03:36,002 - #8 )
INFO  20:03:36,002 - #4 {
INFO  20:03:36,002 - #42 x
INFO  20:03:36,002 - #11 =
INFO  20:03:36,002 - #41 1
INFO  20:03:36,002 - #6 ;
INFO  20:03:36,002 - #42 x
INFO  20:03:36,003 - #11 =
INFO  20:03:36,003 - #41 2
INFO  20:03:36,003 - #6 ;
INFO  20:03:36,003 - #5 }
INFO  20:03:36,003 - #5 }
INFO  20:03:36,003 - #5 }
INFO  20:03:36,009 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   x
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 b
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               c
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementIf(
          IfBegin(
          ) [IfBegin]
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          IfEnd(
          ) [IfEnd]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementIf]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:03:36,009 - ===================================
INFO  20:03:36,012 - Obradjuje se funckijamain na liniji 4
INFO  20:03:36,012 - Hello Var a na liniji 4
INFO  20:03:36,012 - Hello Var x na liniji 5
INFO  20:03:36,012 - Hello Var b na liniji 6
INFO  20:03:36,012 - Hello Var c na liniji 7
INFO  20:03:36,012 - 5 na liniji 9
INFO  20:03:36,013 - usao condTermOne na liniji 9
INFO  20:03:36,013 - 5 na liniji 9
INFO  20:03:36,013 - 5 na liniji 9
INFO  20:03:36,013 - usaoCondTermMany na liniji 9
INFO  20:03:36,013 - 5 na liniji 9
INFO  20:03:36,013 - 5 na liniji 9
INFO  20:03:36,013 - usao condOne na liniji 9
INFO  20:03:36,013 - 5 na liniji 9
INFO  20:07:21,956 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:07:21,980 - #2 program
INFO  20:07:21,980 - #42 MJProgram
INFO  20:07:21,980 - #3 const
INFO  20:07:21,981 - #42 bool
INFO  20:07:21,981 - #42 b
INFO  20:07:21,981 - #11 =
INFO  20:07:21,981 - #43 true
INFO  20:07:21,981 - #6 ;
INFO  20:07:21,982 - #4 {
INFO  20:07:21,982 - #17 void
INFO  20:07:21,982 - #42 main
INFO  20:07:21,982 - #7 (
INFO  20:07:21,982 - #42 bool
INFO  20:07:21,982 - #42 a
INFO  20:07:21,983 - #8 )
INFO  20:07:21,983 - #42 int
INFO  20:07:21,983 - #42 x
INFO  20:07:21,983 - #6 ;
INFO  20:07:21,983 - #42 bool
INFO  20:07:21,983 - #42 b
INFO  20:07:21,984 - #6 ;
INFO  20:07:21,984 - #42 bool
INFO  20:07:21,984 - #42 c
INFO  20:07:21,984 - #6 ;
INFO  20:07:21,984 - #4 {
INFO  20:07:21,984 - #33 while
INFO  20:07:21,984 - #7 (
INFO  20:07:21,984 - #42 a
INFO  20:07:21,984 - #31 &&
INFO  20:07:21,985 - #42 b
INFO  20:07:21,985 - #8 )
INFO  20:07:21,986 - #4 {
INFO  20:07:21,986 - #42 x
INFO  20:07:21,986 - #11 =
INFO  20:07:21,986 - #41 1
INFO  20:07:21,986 - #6 ;
INFO  20:07:21,986 - #42 x
INFO  20:07:21,986 - #11 =
INFO  20:07:21,986 - #41 2
INFO  20:07:21,986 - #6 ;
INFO  20:07:21,986 - #5 }
INFO  20:07:21,987 - #5 }
INFO  20:07:21,987 - #5 }
INFO  20:07:21,994 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   x
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 b
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               c
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementWhile(
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementWhile]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:07:21,995 - ===================================
INFO  20:07:21,997 - Obradjuje se funckijamain na liniji 4
INFO  20:07:21,997 - Hello Var a na liniji 4
INFO  20:07:21,997 - Hello Var x na liniji 5
INFO  20:07:21,997 - Hello Var b na liniji 6
INFO  20:07:21,997 - Hello Var c na liniji 7
INFO  20:07:21,998 - 5 na liniji 9
INFO  20:07:21,998 - usao condTermOne na liniji 9
INFO  20:07:21,998 - 5 na liniji 9
INFO  20:07:21,998 - 5 na liniji 9
INFO  20:07:21,998 - usaoCondTermMany na liniji 9
INFO  20:07:21,998 - 5 na liniji 9
INFO  20:07:21,998 - 5 na liniji 9
INFO  20:07:21,998 - usao condOne na liniji 9
INFO  20:07:21,998 - 5 na liniji 9
INFO  20:07:32,434 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:07:32,459 - #2 program
INFO  20:07:32,459 - #42 MJProgram
INFO  20:07:32,459 - #3 const
INFO  20:07:32,460 - #42 bool
INFO  20:07:32,460 - #42 b
INFO  20:07:32,460 - #11 =
INFO  20:07:32,460 - #43 true
INFO  20:07:32,460 - #6 ;
INFO  20:07:32,461 - #4 {
INFO  20:07:32,461 - #17 void
INFO  20:07:32,461 - #42 main
INFO  20:07:32,462 - #7 (
INFO  20:07:32,462 - #42 bool
INFO  20:07:32,462 - #42 a
INFO  20:07:32,462 - #8 )
INFO  20:07:32,462 - #42 int
INFO  20:07:32,462 - #42 x
INFO  20:07:32,462 - #6 ;
INFO  20:07:32,462 - #42 bool
INFO  20:07:32,463 - #42 b
INFO  20:07:32,463 - #6 ;
INFO  20:07:32,463 - #42 bool
INFO  20:07:32,463 - #42 c
INFO  20:07:32,463 - #6 ;
INFO  20:07:32,463 - #4 {
INFO  20:07:32,463 - #33 while
INFO  20:07:32,463 - #7 (
INFO  20:07:32,463 - #42 x
INFO  20:07:32,463 - #31 &&
INFO  20:07:32,465 - #42 b
INFO  20:07:32,465 - #8 )
INFO  20:07:32,465 - #4 {
INFO  20:07:32,465 - #42 x
INFO  20:07:32,465 - #11 =
INFO  20:07:32,465 - #41 1
INFO  20:07:32,465 - #6 ;
INFO  20:07:32,465 - #42 x
INFO  20:07:32,465 - #11 =
INFO  20:07:32,466 - #41 2
INFO  20:07:32,466 - #6 ;
INFO  20:07:32,466 - #5 }
INFO  20:07:32,466 - #5 }
INFO  20:07:32,466 - #5 }
INFO  20:07:32,473 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   x
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 b
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               c
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementWhile(
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           x
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementWhile]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:07:32,474 - ===================================
INFO  20:07:32,476 - Obradjuje se funckijamain na liniji 4
INFO  20:07:32,476 - Hello Var a na liniji 4
INFO  20:07:32,477 - Hello Var x na liniji 5
INFO  20:07:32,477 - Hello Var b na liniji 6
INFO  20:07:32,477 - Hello Var c na liniji 7
INFO  20:07:32,477 - 1 na liniji 9
INFO  20:07:32,477 - usao condTermOne na liniji 9
INFO  20:07:32,477 - 1 na liniji 9
INFO  20:07:32,477 - 5 na liniji 9
INFO  20:07:32,477 - usaoCondTermMany na liniji 9
INFO  20:07:32,477 - 1 na liniji 9
INFO  20:07:32,477 - 5 na liniji 9
ERROR 20:07:32,477 - Greska: Tipovi nisu jednaki!CondTermMany na liniji 9
INFO  20:07:32,477 - usao condOne na liniji 9
INFO  20:07:47,071 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:07:47,095 - #2 program
INFO  20:07:47,095 - #42 MJProgram
INFO  20:07:47,095 - #3 const
INFO  20:07:47,095 - #42 bool
INFO  20:07:47,095 - #42 b
INFO  20:07:47,096 - #11 =
INFO  20:07:47,096 - #43 true
INFO  20:07:47,096 - #6 ;
INFO  20:07:47,096 - #4 {
INFO  20:07:47,097 - #17 void
INFO  20:07:47,097 - #42 main
INFO  20:07:47,097 - #7 (
INFO  20:07:47,097 - #42 bool
INFO  20:07:47,097 - #42 a
INFO  20:07:47,097 - #8 )
INFO  20:07:47,097 - #42 int
INFO  20:07:47,097 - #42 x
INFO  20:07:47,097 - #6 ;
INFO  20:07:47,098 - #42 bool
INFO  20:07:47,098 - #42 b
INFO  20:07:47,098 - #6 ;
INFO  20:07:47,098 - #4 {
INFO  20:07:47,098 - #33 while
INFO  20:07:47,098 - #7 (
INFO  20:07:47,098 - #42 a
INFO  20:07:47,098 - #31 &&
INFO  20:07:47,100 - #42 b
INFO  20:07:47,100 - #8 )
INFO  20:07:47,100 - #4 {
INFO  20:07:47,100 - #42 x
INFO  20:07:47,100 - #11 =
INFO  20:07:47,100 - #41 1
INFO  20:07:47,100 - #6 ;
INFO  20:07:47,100 - #42 x
INFO  20:07:47,100 - #11 =
INFO  20:07:47,100 - #41 2
INFO  20:07:47,101 - #6 ;
INFO  20:07:47,101 - #5 }
INFO  20:07:47,101 - #5 }
INFO  20:07:47,101 - #5 }
INFO  20:07:47,108 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementWhile(
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementWhile]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:07:47,109 - ===================================
INFO  20:07:47,111 - Obradjuje se funckijamain na liniji 4
INFO  20:07:47,112 - Hello Var a na liniji 4
INFO  20:07:47,112 - Hello Var x na liniji 5
INFO  20:07:47,112 - Hello Var b na liniji 6
INFO  20:07:47,112 - 5 na liniji 8
INFO  20:07:47,112 - usao condTermOne na liniji 8
INFO  20:07:47,112 - 5 na liniji 8
INFO  20:07:47,112 - 5 na liniji 8
INFO  20:07:47,112 - usaoCondTermMany na liniji 8
INFO  20:07:47,112 - 5 na liniji 8
INFO  20:07:47,112 - 5 na liniji 8
INFO  20:07:47,112 - usao condOne na liniji 8
INFO  20:07:47,112 - 5 na liniji 8
INFO  20:09:23,392 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:09:23,417 - #2 program
INFO  20:09:23,417 - #42 MJProgram
INFO  20:09:23,417 - #3 const
INFO  20:09:23,418 - #42 bool
INFO  20:09:23,418 - #42 b
INFO  20:09:23,418 - #11 =
INFO  20:09:23,418 - #43 true
INFO  20:09:23,418 - #6 ;
INFO  20:09:23,419 - #4 {
INFO  20:09:23,419 - #17 void
INFO  20:09:23,419 - #42 main
INFO  20:09:23,419 - #7 (
INFO  20:09:23,419 - #42 bool
INFO  20:09:23,419 - #42 a
INFO  20:09:23,419 - #8 )
INFO  20:09:23,420 - #42 int
INFO  20:09:23,420 - #42 x
INFO  20:09:23,420 - #6 ;
INFO  20:09:23,420 - #42 bool
INFO  20:09:23,420 - #42 b
INFO  20:09:23,420 - #6 ;
INFO  20:09:23,420 - #4 {
INFO  20:09:23,421 - #33 while
INFO  20:09:23,421 - #7 (
INFO  20:09:23,421 - #42 a
INFO  20:09:23,421 - #31 &&
INFO  20:09:23,422 - #42 b
INFO  20:09:23,422 - #8 )
INFO  20:09:23,422 - #4 {
INFO  20:09:23,422 - #42 x
INFO  20:09:23,422 - #11 =
INFO  20:09:23,422 - #41 1
INFO  20:09:23,422 - #6 ;
INFO  20:09:23,423 - #42 x
INFO  20:09:23,423 - #11 =
INFO  20:09:23,423 - #41 2
INFO  20:09:23,423 - #6 ;
INFO  20:09:23,423 - #5 }
INFO  20:09:23,423 - #5 }
INFO  20:09:23,423 - #5 }
INFO  20:09:23,431 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementWhile(
          ConditionOne(
            CondTermMany(
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         b
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
            ) [CondTermMany]
          ) [ConditionOne]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementWhile]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:09:23,431 - ===================================
INFO  20:09:23,434 - Obradjuje se funckijamain na liniji 4
INFO  20:09:23,434 - Hello Var a na liniji 4
INFO  20:09:23,434 - Hello Var x na liniji 5
INFO  20:09:23,434 - Hello Var b na liniji 6
INFO  20:09:23,434 - 5 na liniji 8
INFO  20:09:23,434 - usao condTermOne na liniji 8
INFO  20:09:23,435 - 5 na liniji 8
INFO  20:09:23,435 - 5 na liniji 8
INFO  20:09:23,435 - usaoCondTermMany na liniji 8
INFO  20:09:23,435 - 5 na liniji 8
INFO  20:09:23,435 - 5 na liniji 8
INFO  20:09:23,435 - usao condOne na liniji 8
INFO  20:09:23,435 - 5 na liniji 8
INFO  20:09:23,435 - usaoWhile na liniji 8
INFO  20:18:20,783 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:18:20,808 - #2 program
INFO  20:18:20,808 - #42 MJProgram
INFO  20:18:20,808 - #3 const
INFO  20:18:20,809 - #42 bool
INFO  20:18:20,809 - #42 b
INFO  20:18:20,809 - #11 =
INFO  20:18:20,809 - #43 true
INFO  20:18:20,809 - #6 ;
INFO  20:18:20,809 - #4 {
INFO  20:18:20,810 - #17 void
INFO  20:18:20,810 - #42 main
INFO  20:18:20,810 - #7 (
INFO  20:18:20,810 - #42 bool
INFO  20:18:20,810 - #42 a
INFO  20:18:20,810 - #8 )
INFO  20:18:20,811 - #42 int
INFO  20:18:20,811 - #42 x
INFO  20:18:20,811 - #6 ;
INFO  20:18:20,811 - #42 bool
INFO  20:18:20,811 - #42 b
INFO  20:18:20,811 - #6 ;
INFO  20:18:20,811 - #4 {
INFO  20:18:20,811 - #33 while
INFO  20:18:20,811 - #7 (
INFO  20:18:20,811 - #42 a
INFO  20:18:20,812 - #31 &&
INFO  20:18:20,813 - #42 b
INFO  20:18:20,813 - #8 )
INFO  20:18:20,814 - #4 {
INFO  20:18:20,814 - #42 x
INFO  20:18:20,814 - #11 =
INFO  20:18:20,814 - #41 1
INFO  20:18:20,814 - #6 ;
INFO  20:18:20,815 - #42 x
INFO  20:18:20,815 - #11 =
INFO  20:18:20,815 - #41 2
INFO  20:18:20,815 - #6 ;
INFO  20:18:20,815 - #5 }
INFO  20:18:20,815 - #5 }
INFO  20:18:20,816 - #5 }
INFO  20:18:20,826 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementWhile(
          WhileBegin(
          ) [WhileBegin]
          ConditionOne(
            CondTermMany(
              CondFactOne(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         a
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActParsNone(
                        ) [OptActParsNone]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [CondFactOne]
              CondTermOne(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           b
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
              ) [CondTermOne]
            ) [CondTermMany]
          ) [ConditionOne]
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementWhile]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:18:20,827 - ===================================
INFO  20:18:20,829 - Obradjuje se funckijamain na liniji 4
INFO  20:18:20,829 - Hello Var a na liniji 4
INFO  20:18:20,830 - Hello Var x na liniji 5
INFO  20:18:20,830 - Hello Var b na liniji 6
INFO  20:18:20,830 - usaoWhile
INFO  20:18:20,830 - 5 na liniji 8
INFO  20:18:20,830 - 5 na liniji 8
INFO  20:18:20,830 - usao condTermOne na liniji 8
INFO  20:18:20,830 - 5 na liniji 8
INFO  20:18:20,830 - usaoCondTermMany na liniji 8
INFO  20:18:20,830 - 5 na liniji 8
INFO  20:18:20,830 - 5 na liniji 8
INFO  20:18:20,830 - usao condOne na liniji 8
INFO  20:18:20,830 - 5 na liniji 8
INFO  20:18:20,831 - izaasaoWhile na liniji 8
INFO  20:22:30,562 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:22:30,589 - #2 program
INFO  20:22:30,590 - #42 MJProgram
INFO  20:22:30,590 - #3 const
INFO  20:22:30,590 - #42 bool
INFO  20:22:30,590 - #42 b
INFO  20:22:30,591 - #11 =
INFO  20:22:30,591 - #43 true
INFO  20:22:30,591 - #6 ;
INFO  20:22:30,591 - #4 {
INFO  20:22:30,592 - #17 void
INFO  20:22:30,592 - #42 main
INFO  20:22:30,592 - #7 (
INFO  20:22:30,592 - #42 bool
INFO  20:22:30,592 - #42 a
INFO  20:22:30,592 - #8 )
INFO  20:22:30,592 - #42 int
INFO  20:22:30,592 - #42 x
INFO  20:22:30,593 - #6 ;
INFO  20:22:30,593 - #42 bool
INFO  20:22:30,593 - #42 b
INFO  20:22:30,593 - #6 ;
INFO  20:22:30,593 - #4 {
INFO  20:22:30,593 - #33 while
INFO  20:22:30,594 - #7 (
INFO  20:22:30,594 - #42 a
INFO  20:22:30,594 - #31 &&
INFO  20:22:30,595 - #42 b
INFO  20:22:30,595 - #8 )
INFO  20:22:30,596 - #4 {
INFO  20:22:30,596 - #42 x
INFO  20:22:30,596 - #11 =
INFO  20:22:30,596 - #41 1
INFO  20:22:30,596 - #6 ;
INFO  20:22:30,596 - #42 x
INFO  20:22:30,596 - #11 =
INFO  20:22:30,596 - #41 2
INFO  20:22:30,596 - #6 ;
INFO  20:22:30,597 - #5 }
INFO  20:22:30,597 - #42 x
INFO  20:22:30,597 - #18 .
INFO  20:22:30,597 - #29 foreach
INFO  20:22:30,597 - #7 (
INFO  20:22:30,597 - #42 a
INFO  20:22:30,598 - #20 =>
INFO  20:22:30,598 - #42 a
INFO  20:22:30,598 - #11 =
INFO  20:22:30,598 - #41 1
INFO  20:22:30,598 - #6 ;
INFO  20:22:30,598 - #8 )
INFO  20:22:30,598 - #6 ;
INFO  20:22:30,598 - #5 }
INFO  20:22:30,598 - #5 }
INFO  20:22:30,604 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementWhile(
            WhileBegin(
            ) [WhileBegin]
            ConditionOne(
              CondTermMany(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
                CondTermOne(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             b
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondTermMany]
            ) [ConditionOne]
            StatementStatement(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             1
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           2
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
            ) [StatementStatement]
          ) [StatementWhile]
        ) [StatementOne]
        StatementForEach(
          Designator(
           x
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         a
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               a
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:22:30,604 - ===================================
INFO  20:22:30,607 - Obradjuje se funckijamain na liniji 4
INFO  20:22:30,607 - Hello Var a na liniji 4
INFO  20:22:30,608 - Hello Var x na liniji 5
INFO  20:22:30,608 - Hello Var b na liniji 6
INFO  20:22:30,608 - usaoWhile
INFO  20:22:30,608 - 5 na liniji 8
INFO  20:22:30,608 - 5 na liniji 8
INFO  20:22:30,608 - usao condTermOne na liniji 8
INFO  20:22:30,608 - 5 na liniji 8
INFO  20:22:30,608 - usaoCondTermMany na liniji 8
INFO  20:22:30,608 - 5 na liniji 8
INFO  20:22:30,608 - 5 na liniji 8
INFO  20:22:30,608 - usao condOne na liniji 8
INFO  20:22:30,608 - 5 na liniji 8
INFO  20:22:30,608 - izaasaoWhile na liniji 8
INFO  20:22:30,608 - usaoForeach
ERROR 20:22:30,608 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 13
INFO  20:22:30,609 - izaasaoWhile na liniji 13
INFO  20:22:47,573 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:22:47,596 - #2 program
INFO  20:22:47,597 - #42 MJProgram
INFO  20:22:47,597 - #3 const
INFO  20:22:47,597 - #42 bool
INFO  20:22:47,597 - #42 b
INFO  20:22:47,598 - #11 =
INFO  20:22:47,598 - #43 true
INFO  20:22:47,598 - #6 ;
INFO  20:22:47,598 - #4 {
INFO  20:22:47,599 - #17 void
INFO  20:22:47,599 - #42 main
INFO  20:22:47,599 - #7 (
INFO  20:22:47,599 - #42 bool
INFO  20:22:47,599 - #42 a
INFO  20:22:47,599 - #8 )
INFO  20:22:47,599 - #42 int
INFO  20:22:47,599 - #42 x
INFO  20:22:47,599 - #6 ;
INFO  20:22:47,600 - #42 bool
INFO  20:22:47,600 - #42 b
INFO  20:22:47,600 - #6 ;
INFO  20:22:47,600 - #4 {
INFO  20:22:47,600 - #33 while
INFO  20:22:47,600 - #7 (
INFO  20:22:47,600 - #42 a
INFO  20:22:47,601 - #31 &&
INFO  20:22:47,602 - #42 b
INFO  20:22:47,602 - #8 )
INFO  20:22:47,602 - #4 {
INFO  20:22:47,602 - #42 x
INFO  20:22:47,602 - #11 =
INFO  20:22:47,602 - #41 1
INFO  20:22:47,602 - #6 ;
INFO  20:22:47,603 - #42 x
INFO  20:22:47,603 - #11 =
INFO  20:22:47,603 - #41 2
INFO  20:22:47,603 - #6 ;
INFO  20:22:47,603 - #5 }
INFO  20:22:47,603 - #42 b
INFO  20:22:47,603 - #18 .
INFO  20:22:47,603 - #29 foreach
INFO  20:22:47,603 - #7 (
INFO  20:22:47,604 - #42 x
INFO  20:22:47,604 - #20 =>
INFO  20:22:47,604 - #42 x
INFO  20:22:47,604 - #11 =
INFO  20:22:47,604 - #41 1
INFO  20:22:47,604 - #6 ;
INFO  20:22:47,604 - #8 )
INFO  20:22:47,604 - #6 ;
INFO  20:22:47,604 - #5 }
INFO  20:22:47,604 - #5 }
INFO  20:22:47,609 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementWhile(
            WhileBegin(
            ) [WhileBegin]
            ConditionOne(
              CondTermMany(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
                CondTermOne(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             b
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondTermMany]
            ) [ConditionOne]
            StatementStatement(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             1
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           2
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
            ) [StatementStatement]
          ) [StatementWhile]
        ) [StatementOne]
        StatementForEach(
          Designator(
           b
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         x
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:22:47,610 - ===================================
INFO  20:22:47,612 - Obradjuje se funckijamain na liniji 4
INFO  20:22:47,612 - Hello Var a na liniji 4
INFO  20:22:47,613 - Hello Var x na liniji 5
INFO  20:22:47,613 - Hello Var b na liniji 6
INFO  20:22:47,613 - usaoWhile
INFO  20:22:47,613 - 5 na liniji 8
INFO  20:22:47,613 - 5 na liniji 8
INFO  20:22:47,613 - usao condTermOne na liniji 8
INFO  20:22:47,613 - 5 na liniji 8
INFO  20:22:47,613 - usaoCondTermMany na liniji 8
INFO  20:22:47,613 - 5 na liniji 8
INFO  20:22:47,613 - 5 na liniji 8
INFO  20:22:47,613 - usao condOne na liniji 8
INFO  20:22:47,613 - 5 na liniji 8
INFO  20:22:47,614 - izaasaoWhile na liniji 8
INFO  20:22:47,614 - usaoForeach
INFO  20:22:47,614 - izaasaoWhile na liniji 13
INFO  20:23:28,498 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:23:28,522 - #2 program
INFO  20:23:28,522 - #42 MJProgram
INFO  20:23:28,522 - #3 const
INFO  20:23:28,523 - #42 bool
INFO  20:23:28,523 - #42 b
INFO  20:23:28,523 - #11 =
INFO  20:23:28,523 - #43 true
INFO  20:23:28,523 - #6 ;
INFO  20:23:28,524 - #4 {
INFO  20:23:28,524 - #17 void
INFO  20:23:28,524 - #42 main
INFO  20:23:28,524 - #7 (
INFO  20:23:28,524 - #42 bool
INFO  20:23:28,525 - #42 a
INFO  20:23:28,525 - #8 )
INFO  20:23:28,525 - #42 int
INFO  20:23:28,525 - #42 x
INFO  20:23:28,525 - #6 ;
INFO  20:23:28,525 - #42 bool
INFO  20:23:28,526 - #42 b
INFO  20:23:28,526 - #6 ;
INFO  20:23:28,526 - #4 {
INFO  20:23:28,526 - #33 while
INFO  20:23:28,526 - #7 (
INFO  20:23:28,526 - #42 a
INFO  20:23:28,526 - #31 &&
INFO  20:23:28,527 - #42 b
INFO  20:23:28,527 - #8 )
INFO  20:23:28,528 - #4 {
INFO  20:23:28,528 - #42 x
INFO  20:23:28,528 - #11 =
INFO  20:23:28,528 - #41 1
INFO  20:23:28,528 - #6 ;
INFO  20:23:28,528 - #42 x
INFO  20:23:28,528 - #11 =
INFO  20:23:28,528 - #41 2
INFO  20:23:28,528 - #6 ;
INFO  20:23:28,528 - #5 }
INFO  20:23:28,529 - #42 b
INFO  20:23:28,529 - #18 .
INFO  20:23:28,529 - #29 foreach
INFO  20:23:28,529 - #7 (
INFO  20:23:28,530 - #42 x
INFO  20:23:28,530 - #20 =>
INFO  20:23:28,530 - #4 {
INFO  20:23:28,530 - #42 x
INFO  20:23:28,530 - #11 =
INFO  20:23:28,530 - #41 1
INFO  20:23:28,530 - #6 ;
INFO  20:23:28,530 - #42 x
INFO  20:23:28,530 - #11 =
INFO  20:23:28,530 - #41 2
INFO  20:23:28,530 - #6 ;
INFO  20:23:28,530 - #5 }
INFO  20:23:28,530 - #8 )
INFO  20:23:28,531 - #6 ;
INFO  20:23:28,531 - #5 }
INFO  20:23:28,531 - #5 }
INFO  20:23:28,537 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementWhile(
            WhileBegin(
            ) [WhileBegin]
            ConditionOne(
              CondTermMany(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
                CondTermOne(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             b
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondTermMany]
            ) [ConditionOne]
            StatementStatement(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             1
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           2
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
            ) [StatementStatement]
          ) [StatementWhile]
        ) [StatementOne]
        StatementForEach(
          Designator(
           b
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         x
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:23:28,537 - ===================================
INFO  20:23:28,540 - Obradjuje se funckijamain na liniji 4
INFO  20:23:28,540 - Hello Var a na liniji 4
INFO  20:23:28,540 - Hello Var x na liniji 5
INFO  20:23:28,540 - Hello Var b na liniji 6
INFO  20:23:28,540 - usaoWhile
INFO  20:23:28,541 - 5 na liniji 8
INFO  20:23:28,541 - 5 na liniji 8
INFO  20:23:28,541 - usao condTermOne na liniji 8
INFO  20:23:28,542 - 5 na liniji 8
INFO  20:23:28,542 - usaoCondTermMany na liniji 8
INFO  20:23:28,542 - 5 na liniji 8
INFO  20:23:28,542 - 5 na liniji 8
INFO  20:23:28,542 - usao condOne na liniji 8
INFO  20:23:28,542 - 5 na liniji 8
INFO  20:23:28,542 - izaasaoWhile na liniji 8
INFO  20:23:28,542 - usaoForeach
INFO  20:23:28,542 - izasaoForEach na liniji 13
INFO  20:27:55,263 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:27:55,288 - #2 program
INFO  20:27:55,288 - #42 MJProgram
INFO  20:27:55,288 - #3 const
INFO  20:27:55,289 - #42 bool
INFO  20:27:55,289 - #42 b
INFO  20:27:55,289 - #11 =
INFO  20:27:55,289 - #43 true
INFO  20:27:55,289 - #6 ;
INFO  20:27:55,290 - #4 {
INFO  20:27:55,290 - #17 void
INFO  20:27:55,291 - #42 main
INFO  20:27:55,291 - #7 (
INFO  20:27:55,291 - #42 bool
INFO  20:27:55,291 - #42 a
INFO  20:27:55,291 - #8 )
INFO  20:27:55,291 - #42 int
INFO  20:27:55,291 - #42 x
INFO  20:27:55,291 - #6 ;
INFO  20:27:55,291 - #42 bool
INFO  20:27:55,292 - #42 b
INFO  20:27:55,292 - #6 ;
INFO  20:27:55,292 - #4 {
INFO  20:27:55,292 - #33 while
INFO  20:27:55,292 - #7 (
INFO  20:27:55,292 - #42 a
INFO  20:27:55,292 - #31 &&
INFO  20:27:55,294 - #42 b
INFO  20:27:55,294 - #8 )
INFO  20:27:55,294 - #4 {
INFO  20:27:55,294 - #42 x
INFO  20:27:55,294 - #11 =
INFO  20:27:55,294 - #41 1
INFO  20:27:55,294 - #6 ;
INFO  20:27:55,294 - #42 x
INFO  20:27:55,295 - #11 =
INFO  20:27:55,295 - #41 2
INFO  20:27:55,295 - #6 ;
INFO  20:27:55,295 - #5 }
INFO  20:27:55,295 - #42 b
INFO  20:27:55,295 - #18 .
INFO  20:27:55,295 - #29 foreach
INFO  20:27:55,295 - #7 (
INFO  20:27:55,296 - #42 x
INFO  20:27:55,296 - #20 =>
INFO  20:27:55,296 - #4 {
INFO  20:27:55,296 - #42 x
INFO  20:27:55,296 - #11 =
INFO  20:27:55,296 - #41 1
INFO  20:27:55,296 - #6 ;
INFO  20:27:55,296 - #42 x
INFO  20:27:55,296 - #11 =
INFO  20:27:55,296 - #41 2
INFO  20:27:55,297 - #6 ;
INFO  20:27:55,297 - #5 }
INFO  20:27:55,297 - #8 )
INFO  20:27:55,297 - #6 ;
INFO  20:27:55,297 - #5 }
INFO  20:27:55,297 - #5 }
INFO  20:27:55,302 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementWhile(
            WhileBegin(
            ) [WhileBegin]
            ConditionOne(
              CondTermMany(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
                CondTermOne(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             b
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondTermMany]
            ) [ConditionOne]
            StatementStatement(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             1
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           2
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
            ) [StatementStatement]
          ) [StatementWhile]
        ) [StatementOne]
        StatementForEach(
          Designator(
           b
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         x
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:27:55,303 - ===================================
INFO  20:27:55,305 - Obradjuje se funckijamain na liniji 4
INFO  20:27:55,305 - Hello Var a na liniji 4
INFO  20:27:55,305 - Hello Var x na liniji 5
INFO  20:27:55,305 - Hello Var b na liniji 6
INFO  20:27:55,306 - usaoWhile
INFO  20:27:55,306 - 5 na liniji 8
INFO  20:27:55,306 - 5 na liniji 8
INFO  20:27:55,306 - usao condTermOne na liniji 8
INFO  20:27:55,307 - 5 na liniji 8
INFO  20:27:55,307 - usaoCondTermMany na liniji 8
INFO  20:27:55,307 - 5 na liniji 8
INFO  20:27:55,307 - 5 na liniji 8
INFO  20:27:55,307 - usao condOne na liniji 8
INFO  20:27:55,307 - 5 na liniji 8
INFO  20:27:55,307 - izaasaoWhile na liniji 8
INFO  20:27:55,307 - usaoForeach
INFO  20:27:55,307 - izasaoForEach na liniji 13
INFO  20:28:06,458 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:28:06,483 - #2 program
INFO  20:28:06,484 - #42 MJProgram
INFO  20:28:06,484 - #3 const
INFO  20:28:06,484 - #42 bool
INFO  20:28:06,484 - #42 b
INFO  20:28:06,485 - #11 =
INFO  20:28:06,485 - #43 true
INFO  20:28:06,485 - #6 ;
INFO  20:28:06,485 - #4 {
INFO  20:28:06,486 - #17 void
INFO  20:28:06,486 - #42 main
INFO  20:28:06,486 - #7 (
INFO  20:28:06,486 - #42 bool
INFO  20:28:06,486 - #42 a
INFO  20:28:06,486 - #8 )
INFO  20:28:06,486 - #42 int
INFO  20:28:06,486 - #42 x
INFO  20:28:06,487 - #6 ;
INFO  20:28:06,487 - #42 bool
INFO  20:28:06,487 - #42 b
INFO  20:28:06,487 - #6 ;
INFO  20:28:06,488 - #4 {
INFO  20:28:06,488 - #33 while
INFO  20:28:06,488 - #7 (
INFO  20:28:06,488 - #42 a
INFO  20:28:06,488 - #31 &&
INFO  20:28:06,490 - #42 b
INFO  20:28:06,490 - #8 )
INFO  20:28:06,490 - #4 {
INFO  20:28:06,490 - #42 x
INFO  20:28:06,490 - #11 =
INFO  20:28:06,490 - #41 1
INFO  20:28:06,490 - #6 ;
INFO  20:28:06,490 - #42 x
INFO  20:28:06,491 - #11 =
INFO  20:28:06,491 - #41 2
INFO  20:28:06,491 - #6 ;
INFO  20:28:06,491 - #28 continue
INFO  20:28:06,491 - #6 ;
INFO  20:28:06,491 - #5 }
INFO  20:28:06,491 - #42 b
INFO  20:28:06,492 - #18 .
INFO  20:28:06,492 - #29 foreach
INFO  20:28:06,492 - #7 (
INFO  20:28:06,492 - #42 x
INFO  20:28:06,492 - #20 =>
INFO  20:28:06,492 - #4 {
INFO  20:28:06,492 - #42 x
INFO  20:28:06,492 - #11 =
INFO  20:28:06,492 - #41 1
INFO  20:28:06,492 - #6 ;
INFO  20:28:06,492 - #42 x
INFO  20:28:06,492 - #11 =
INFO  20:28:06,492 - #41 2
INFO  20:28:06,493 - #6 ;
INFO  20:28:06,493 - #5 }
INFO  20:28:06,493 - #8 )
INFO  20:28:06,493 - #6 ;
INFO  20:28:06,493 - #5 }
INFO  20:28:06,493 - #5 }
INFO  20:28:06,498 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementWhile(
            WhileBegin(
            ) [WhileBegin]
            ConditionOne(
              CondTermMany(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
                CondTermOne(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             b
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondTermMany]
            ) [ConditionOne]
            StatementStatement(
              StatementsMany(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
                StatementContinue(
                ) [StatementContinue]
              ) [StatementsMany]
            ) [StatementStatement]
          ) [StatementWhile]
        ) [StatementOne]
        StatementForEach(
          Designator(
           b
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         x
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:28:06,498 - ===================================
INFO  20:28:06,501 - Obradjuje se funckijamain na liniji 4
INFO  20:28:06,501 - Hello Var a na liniji 4
INFO  20:28:06,501 - Hello Var x na liniji 5
INFO  20:28:06,501 - Hello Var b na liniji 6
INFO  20:28:06,501 - usaoWhile
INFO  20:28:06,501 - 5 na liniji 8
INFO  20:28:06,502 - 5 na liniji 8
INFO  20:28:06,502 - usao condTermOne na liniji 8
INFO  20:28:06,502 - 5 na liniji 8
INFO  20:28:06,502 - usaoCondTermMany na liniji 8
INFO  20:28:06,502 - 5 na liniji 8
INFO  20:28:06,502 - 5 na liniji 8
INFO  20:28:06,503 - usao condOne na liniji 8
INFO  20:28:06,503 - 5 na liniji 8
ERROR 20:28:06,503 - Greska: Nismo u Foreach ili While!StatementContinue
INFO  20:28:06,503 - izaasaoWhile na liniji 8
INFO  20:28:06,503 - usaoForeach
INFO  20:28:06,503 - izasaoForEach na liniji 14
INFO  20:28:28,786 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:28:28,810 - #2 program
INFO  20:28:28,810 - #42 MJProgram
INFO  20:28:28,810 - #3 const
INFO  20:28:28,811 - #42 bool
INFO  20:28:28,811 - #42 b
INFO  20:28:28,811 - #11 =
INFO  20:28:28,811 - #43 true
INFO  20:28:28,811 - #6 ;
INFO  20:28:28,812 - #4 {
INFO  20:28:28,812 - #17 void
INFO  20:28:28,812 - #42 main
INFO  20:28:28,812 - #7 (
INFO  20:28:28,812 - #42 bool
INFO  20:28:28,813 - #42 a
INFO  20:28:28,813 - #8 )
INFO  20:28:28,813 - #42 int
INFO  20:28:28,813 - #42 x
INFO  20:28:28,813 - #6 ;
INFO  20:28:28,813 - #42 bool
INFO  20:28:28,814 - #42 b
INFO  20:28:28,814 - #6 ;
INFO  20:28:28,814 - #4 {
INFO  20:28:28,814 - #33 while
INFO  20:28:28,814 - #7 (
INFO  20:28:28,814 - #42 a
INFO  20:28:28,814 - #31 &&
INFO  20:28:28,815 - #42 b
INFO  20:28:28,816 - #8 )
INFO  20:28:28,816 - #4 {
INFO  20:28:28,816 - #42 x
INFO  20:28:28,816 - #11 =
INFO  20:28:28,816 - #41 1
INFO  20:28:28,816 - #6 ;
INFO  20:28:28,816 - #42 x
INFO  20:28:28,816 - #11 =
INFO  20:28:28,816 - #41 2
INFO  20:28:28,817 - #6 ;
INFO  20:28:28,817 - #28 continue
INFO  20:28:28,817 - #6 ;
INFO  20:28:28,817 - #5 }
INFO  20:28:28,817 - #42 b
INFO  20:28:28,817 - #18 .
INFO  20:28:28,817 - #29 foreach
INFO  20:28:28,817 - #7 (
INFO  20:28:28,818 - #42 x
INFO  20:28:28,818 - #20 =>
INFO  20:28:28,818 - #4 {
INFO  20:28:28,818 - #42 x
INFO  20:28:28,818 - #11 =
INFO  20:28:28,818 - #41 1
INFO  20:28:28,818 - #6 ;
INFO  20:28:28,818 - #42 x
INFO  20:28:28,818 - #11 =
INFO  20:28:28,818 - #41 2
INFO  20:28:28,818 - #6 ;
INFO  20:28:28,818 - #5 }
INFO  20:28:28,819 - #8 )
INFO  20:28:28,819 - #6 ;
INFO  20:28:28,819 - #5 }
INFO  20:28:28,819 - #5 }
INFO  20:28:28,824 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementWhile(
            WhileBegin(
            ) [WhileBegin]
            ConditionOne(
              CondTermMany(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
                CondTermOne(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             b
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondTermMany]
            ) [ConditionOne]
            StatementStatement(
              StatementsMany(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
                StatementContinue(
                ) [StatementContinue]
              ) [StatementsMany]
            ) [StatementStatement]
          ) [StatementWhile]
        ) [StatementOne]
        StatementForEach(
          Designator(
           b
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         x
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:28:28,824 - ===================================
INFO  20:28:28,827 - Obradjuje se funckijamain na liniji 4
INFO  20:28:28,827 - Hello Var a na liniji 4
INFO  20:28:28,827 - Hello Var x na liniji 5
INFO  20:28:28,827 - Hello Var b na liniji 6
INFO  20:28:28,827 - usaoWhile
INFO  20:28:28,827 - 5 na liniji 8
INFO  20:28:28,828 - 5 na liniji 8
INFO  20:28:28,828 - usao condTermOne na liniji 8
INFO  20:28:28,828 - 5 na liniji 8
INFO  20:28:28,828 - usaoCondTermMany na liniji 8
INFO  20:28:28,828 - 5 na liniji 8
INFO  20:28:28,828 - 5 na liniji 8
INFO  20:28:28,828 - usao condOne na liniji 8
INFO  20:28:28,828 - 5 na liniji 8
INFO  20:28:28,829 - izaasaoWhile na liniji 8
INFO  20:28:28,829 - usaoForeach
INFO  20:28:28,829 - izasaoForEach na liniji 14
INFO  20:28:36,260 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:28:36,284 - #2 program
INFO  20:28:36,284 - #42 MJProgram
INFO  20:28:36,284 - #3 const
INFO  20:28:36,285 - #42 bool
INFO  20:28:36,285 - #42 b
INFO  20:28:36,286 - #11 =
INFO  20:28:36,286 - #43 true
INFO  20:28:36,286 - #6 ;
INFO  20:28:36,286 - #4 {
INFO  20:28:36,287 - #17 void
INFO  20:28:36,287 - #42 main
INFO  20:28:36,287 - #7 (
INFO  20:28:36,287 - #42 bool
INFO  20:28:36,287 - #42 a
INFO  20:28:36,287 - #8 )
INFO  20:28:36,287 - #42 int
INFO  20:28:36,287 - #42 x
INFO  20:28:36,287 - #6 ;
INFO  20:28:36,288 - #42 bool
INFO  20:28:36,288 - #42 b
INFO  20:28:36,288 - #6 ;
INFO  20:28:36,288 - #4 {
INFO  20:28:36,288 - #33 while
INFO  20:28:36,288 - #7 (
INFO  20:28:36,288 - #42 a
INFO  20:28:36,289 - #31 &&
INFO  20:28:36,290 - #42 b
INFO  20:28:36,290 - #8 )
INFO  20:28:36,290 - #4 {
INFO  20:28:36,290 - #42 x
INFO  20:28:36,290 - #11 =
INFO  20:28:36,290 - #41 1
INFO  20:28:36,290 - #6 ;
INFO  20:28:36,291 - #42 x
INFO  20:28:36,291 - #11 =
INFO  20:28:36,291 - #41 2
INFO  20:28:36,291 - #6 ;
INFO  20:28:36,291 - #5 }
INFO  20:28:36,291 - #28 continue
INFO  20:28:36,291 - #6 ;
INFO  20:28:36,291 - #42 b
INFO  20:28:36,292 - #18 .
INFO  20:28:36,292 - #29 foreach
INFO  20:28:36,292 - #7 (
INFO  20:28:36,292 - #42 x
INFO  20:28:36,292 - #20 =>
INFO  20:28:36,292 - #4 {
INFO  20:28:36,292 - #42 x
INFO  20:28:36,292 - #11 =
INFO  20:28:36,292 - #41 1
INFO  20:28:36,293 - #6 ;
INFO  20:28:36,293 - #42 x
INFO  20:28:36,293 - #11 =
INFO  20:28:36,293 - #41 2
INFO  20:28:36,293 - #6 ;
INFO  20:28:36,293 - #5 }
INFO  20:28:36,293 - #8 )
INFO  20:28:36,293 - #6 ;
INFO  20:28:36,293 - #5 }
INFO  20:28:36,293 - #5 }
INFO  20:28:36,298 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementOne(
            StatementWhile(
              WhileBegin(
              ) [WhileBegin]
              ConditionOne(
                CondTermMany(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             a
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                  CondTermOne(
                    CondFactOne(
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorDesActPar(
                              Designator(
                               b
                                NoAddOns(
                                ) [NoAddOns]
                              ) [Designator]
                              OptActParsNone(
                              ) [OptActParsNone]
                            ) [FactorDesActPar]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondTermMany]
              ) [ConditionOne]
              StatementStatement(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
              ) [StatementStatement]
            ) [StatementWhile]
          ) [StatementOne]
          StatementContinue(
          ) [StatementContinue]
        ) [StatementsMany]
        StatementForEach(
          Designator(
           b
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         x
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:28:36,299 - ===================================
INFO  20:28:36,302 - Obradjuje se funckijamain na liniji 4
INFO  20:28:36,302 - Hello Var a na liniji 4
INFO  20:28:36,302 - Hello Var x na liniji 5
INFO  20:28:36,302 - Hello Var b na liniji 6
INFO  20:28:36,302 - usaoWhile
INFO  20:28:36,302 - 5 na liniji 8
INFO  20:28:36,303 - 5 na liniji 8
INFO  20:28:36,303 - usao condTermOne na liniji 8
INFO  20:28:36,304 - 5 na liniji 8
INFO  20:28:36,304 - usaoCondTermMany na liniji 8
INFO  20:28:36,304 - 5 na liniji 8
INFO  20:28:36,304 - 5 na liniji 8
INFO  20:28:36,304 - usao condOne na liniji 8
INFO  20:28:36,304 - 5 na liniji 8
INFO  20:28:36,304 - izaasaoWhile na liniji 8
ERROR 20:28:36,304 - Greska: Nismo u Foreach ili While!StatementContinue
INFO  20:28:36,304 - usaoForeach
INFO  20:28:36,304 - izasaoForEach na liniji 14
INFO  20:28:43,536 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:28:43,560 - #2 program
INFO  20:28:43,560 - #42 MJProgram
INFO  20:28:43,560 - #3 const
INFO  20:28:43,561 - #42 bool
INFO  20:28:43,561 - #42 b
INFO  20:28:43,562 - #11 =
INFO  20:28:43,562 - #43 true
INFO  20:28:43,562 - #6 ;
INFO  20:28:43,562 - #4 {
INFO  20:28:43,563 - #17 void
INFO  20:28:43,563 - #42 main
INFO  20:28:43,563 - #7 (
INFO  20:28:43,563 - #42 bool
INFO  20:28:43,563 - #42 a
INFO  20:28:43,563 - #8 )
INFO  20:28:43,563 - #42 int
INFO  20:28:43,563 - #42 x
INFO  20:28:43,563 - #6 ;
INFO  20:28:43,564 - #42 bool
INFO  20:28:43,564 - #42 b
INFO  20:28:43,564 - #6 ;
INFO  20:28:43,564 - #4 {
INFO  20:28:43,564 - #33 while
INFO  20:28:43,564 - #7 (
INFO  20:28:43,564 - #42 a
INFO  20:28:43,565 - #31 &&
INFO  20:28:43,566 - #42 b
INFO  20:28:43,566 - #8 )
INFO  20:28:43,566 - #4 {
INFO  20:28:43,566 - #42 x
INFO  20:28:43,567 - #11 =
INFO  20:28:43,567 - #41 1
INFO  20:28:43,567 - #6 ;
INFO  20:28:43,567 - #42 x
INFO  20:28:43,567 - #11 =
INFO  20:28:43,567 - #41 2
INFO  20:28:43,567 - #6 ;
INFO  20:28:43,567 - #5 }
INFO  20:28:43,567 - #30 break
INFO  20:28:43,568 - #6 ;
INFO  20:28:43,568 - #42 b
INFO  20:28:43,568 - #18 .
INFO  20:28:43,568 - #29 foreach
INFO  20:28:43,568 - #7 (
INFO  20:28:43,568 - #42 x
INFO  20:28:43,568 - #20 =>
INFO  20:28:43,568 - #4 {
INFO  20:28:43,568 - #42 x
INFO  20:28:43,569 - #11 =
INFO  20:28:43,569 - #41 1
INFO  20:28:43,569 - #6 ;
INFO  20:28:43,569 - #42 x
INFO  20:28:43,569 - #11 =
INFO  20:28:43,569 - #41 2
INFO  20:28:43,569 - #6 ;
INFO  20:28:43,569 - #5 }
INFO  20:28:43,569 - #8 )
INFO  20:28:43,569 - #6 ;
INFO  20:28:43,569 - #5 }
INFO  20:28:43,569 - #5 }
INFO  20:28:43,574 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementOne(
            StatementWhile(
              WhileBegin(
              ) [WhileBegin]
              ConditionOne(
                CondTermMany(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             a
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                  CondTermOne(
                    CondFactOne(
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorDesActPar(
                              Designator(
                               b
                                NoAddOns(
                                ) [NoAddOns]
                              ) [Designator]
                              OptActParsNone(
                              ) [OptActParsNone]
                            ) [FactorDesActPar]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondTermMany]
              ) [ConditionOne]
              StatementStatement(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
              ) [StatementStatement]
            ) [StatementWhile]
          ) [StatementOne]
          StatementBreak(
          ) [StatementBreak]
        ) [StatementsMany]
        StatementForEach(
          Designator(
           b
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         x
          StatementStatement(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         2
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:28:43,575 - ===================================
INFO  20:28:43,578 - Obradjuje se funckijamain na liniji 4
INFO  20:28:43,578 - Hello Var a na liniji 4
INFO  20:28:43,578 - Hello Var x na liniji 5
INFO  20:28:43,579 - Hello Var b na liniji 6
INFO  20:28:43,579 - usaoWhile
INFO  20:28:43,579 - 5 na liniji 8
INFO  20:28:43,580 - 5 na liniji 8
INFO  20:28:43,580 - usao condTermOne na liniji 8
INFO  20:28:43,580 - 5 na liniji 8
INFO  20:28:43,580 - usaoCondTermMany na liniji 8
INFO  20:28:43,580 - 5 na liniji 8
INFO  20:28:43,580 - 5 na liniji 8
INFO  20:28:43,580 - usao condOne na liniji 8
INFO  20:28:43,580 - 5 na liniji 8
INFO  20:28:43,580 - izaasaoWhile na liniji 8
ERROR 20:28:43,580 - Greska: Nismo u Foreach ili While!StatementBreak
INFO  20:28:43,580 - usaoForeach
INFO  20:28:43,580 - izasaoForEach na liniji 14
INFO  20:28:55,298 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:28:55,323 - #2 program
INFO  20:28:55,323 - #42 MJProgram
INFO  20:28:55,323 - #3 const
INFO  20:28:55,324 - #42 bool
INFO  20:28:55,324 - #42 b
INFO  20:28:55,324 - #11 =
INFO  20:28:55,324 - #43 true
INFO  20:28:55,325 - #6 ;
INFO  20:28:55,325 - #4 {
INFO  20:28:55,326 - #17 void
INFO  20:28:55,326 - #42 main
INFO  20:28:55,326 - #7 (
INFO  20:28:55,326 - #42 bool
INFO  20:28:55,326 - #42 a
INFO  20:28:55,326 - #8 )
INFO  20:28:55,326 - #42 int
INFO  20:28:55,326 - #42 x
INFO  20:28:55,326 - #6 ;
INFO  20:28:55,326 - #42 bool
INFO  20:28:55,327 - #42 b
INFO  20:28:55,327 - #6 ;
INFO  20:28:55,327 - #4 {
INFO  20:28:55,327 - #33 while
INFO  20:28:55,327 - #7 (
INFO  20:28:55,327 - #42 a
INFO  20:28:55,327 - #31 &&
INFO  20:28:55,329 - #42 b
INFO  20:28:55,329 - #8 )
INFO  20:28:55,329 - #4 {
INFO  20:28:55,329 - #42 x
INFO  20:28:55,329 - #11 =
INFO  20:28:55,329 - #41 1
INFO  20:28:55,329 - #6 ;
INFO  20:28:55,329 - #42 x
INFO  20:28:55,329 - #11 =
INFO  20:28:55,330 - #41 2
INFO  20:28:55,330 - #6 ;
INFO  20:28:55,330 - #5 }
INFO  20:28:55,330 - #30 break
INFO  20:28:55,330 - #6 ;
INFO  20:28:55,330 - #42 b
INFO  20:28:55,330 - #18 .
INFO  20:28:55,331 - #29 foreach
INFO  20:28:55,331 - #7 (
INFO  20:28:55,331 - #42 x
INFO  20:28:55,331 - #20 =>
INFO  20:28:55,331 - #4 {
INFO  20:28:55,331 - #42 x
INFO  20:28:55,331 - #11 =
INFO  20:28:55,331 - #41 1
INFO  20:28:55,331 - #6 ;
INFO  20:28:55,331 - #42 x
INFO  20:28:55,331 - #11 =
INFO  20:28:55,331 - #41 2
INFO  20:28:55,331 - #6 ;
INFO  20:28:55,332 - #30 break
INFO  20:28:55,332 - #6 ;
INFO  20:28:55,332 - #28 continue
INFO  20:28:55,332 - #6 ;
INFO  20:28:55,332 - #5 }
INFO  20:28:55,332 - #8 )
INFO  20:28:55,332 - #6 ;
INFO  20:28:55,332 - #5 }
INFO  20:28:55,332 - #5 }
INFO  20:28:55,339 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementOne(
            StatementWhile(
              WhileBegin(
              ) [WhileBegin]
              ConditionOne(
                CondTermMany(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             a
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                  CondTermOne(
                    CondFactOne(
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorDesActPar(
                              Designator(
                               b
                                NoAddOns(
                                ) [NoAddOns]
                              ) [Designator]
                              OptActParsNone(
                              ) [OptActParsNone]
                            ) [FactorDesActPar]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondTermMany]
              ) [ConditionOne]
              StatementStatement(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
              ) [StatementStatement]
            ) [StatementWhile]
          ) [StatementOne]
          StatementBreak(
          ) [StatementBreak]
        ) [StatementsMany]
        StatementForEach(
          Designator(
           b
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         x
          StatementStatement(
            StatementsMany(
              StatementsMany(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
                StatementBreak(
                ) [StatementBreak]
              ) [StatementsMany]
              StatementContinue(
              ) [StatementContinue]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:28:55,340 - ===================================
INFO  20:28:55,342 - Obradjuje se funckijamain na liniji 4
INFO  20:28:55,342 - Hello Var a na liniji 4
INFO  20:28:55,343 - Hello Var x na liniji 5
INFO  20:28:55,344 - Hello Var b na liniji 6
INFO  20:28:55,344 - usaoWhile
INFO  20:28:55,344 - 5 na liniji 8
INFO  20:28:55,344 - 5 na liniji 8
INFO  20:28:55,344 - usao condTermOne na liniji 8
INFO  20:28:55,344 - 5 na liniji 8
INFO  20:28:55,344 - usaoCondTermMany na liniji 8
INFO  20:28:55,344 - 5 na liniji 8
INFO  20:28:55,344 - 5 na liniji 8
INFO  20:28:55,344 - usao condOne na liniji 8
INFO  20:28:55,344 - 5 na liniji 8
INFO  20:28:55,344 - izaasaoWhile na liniji 8
ERROR 20:28:55,344 - Greska: Nismo u Foreach ili While!StatementBreak
INFO  20:28:55,344 - usaoForeach
INFO  20:28:55,344 - izasaoForEach na liniji 14
INFO  20:29:13,536 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:29:13,561 - #2 program
INFO  20:29:13,561 - #42 MJProgram
INFO  20:29:13,561 - #3 const
INFO  20:29:13,561 - #42 bool
INFO  20:29:13,561 - #42 b
INFO  20:29:13,562 - #11 =
INFO  20:29:13,562 - #43 true
INFO  20:29:13,562 - #6 ;
INFO  20:29:13,562 - #4 {
INFO  20:29:13,563 - #17 void
INFO  20:29:13,563 - #42 main
INFO  20:29:13,563 - #7 (
INFO  20:29:13,563 - #42 bool
INFO  20:29:13,563 - #42 a
INFO  20:29:13,563 - #8 )
INFO  20:29:13,563 - #42 int
INFO  20:29:13,563 - #42 x
INFO  20:29:13,563 - #6 ;
INFO  20:29:13,564 - #42 bool
INFO  20:29:13,564 - #42 b
INFO  20:29:13,564 - #6 ;
INFO  20:29:13,564 - #4 {
INFO  20:29:13,564 - #33 while
INFO  20:29:13,564 - #7 (
INFO  20:29:13,564 - #42 a
INFO  20:29:13,565 - #31 &&
INFO  20:29:13,566 - #42 b
INFO  20:29:13,566 - #8 )
INFO  20:29:13,566 - #4 {
INFO  20:29:13,566 - #42 x
INFO  20:29:13,566 - #11 =
INFO  20:29:13,566 - #41 1
INFO  20:29:13,567 - #6 ;
INFO  20:29:13,567 - #42 x
INFO  20:29:13,567 - #11 =
INFO  20:29:13,567 - #41 2
INFO  20:29:13,567 - #6 ;
INFO  20:29:13,567 - #5 }
INFO  20:29:13,567 - #42 b
INFO  20:29:13,567 - #18 .
INFO  20:29:13,567 - #29 foreach
INFO  20:29:13,568 - #7 (
INFO  20:29:13,568 - #42 x
INFO  20:29:13,568 - #20 =>
INFO  20:29:13,568 - #4 {
INFO  20:29:13,568 - #42 x
INFO  20:29:13,568 - #11 =
INFO  20:29:13,568 - #41 1
INFO  20:29:13,568 - #6 ;
INFO  20:29:13,568 - #42 x
INFO  20:29:13,568 - #11 =
INFO  20:29:13,568 - #41 2
INFO  20:29:13,568 - #6 ;
INFO  20:29:13,569 - #30 break
INFO  20:29:13,569 - #6 ;
INFO  20:29:13,569 - #28 continue
INFO  20:29:13,569 - #6 ;
INFO  20:29:13,569 - #5 }
INFO  20:29:13,569 - #8 )
INFO  20:29:13,569 - #6 ;
INFO  20:29:13,569 - #5 }
INFO  20:29:13,570 - #5 }
INFO  20:29:13,578 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementWhile(
            WhileBegin(
            ) [WhileBegin]
            ConditionOne(
              CondTermMany(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
                CondTermOne(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             b
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondTermMany]
            ) [ConditionOne]
            StatementStatement(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             1
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           2
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
            ) [StatementStatement]
          ) [StatementWhile]
        ) [StatementOne]
        StatementForEach(
          Designator(
           b
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         x
          StatementStatement(
            StatementsMany(
              StatementsMany(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
                StatementBreak(
                ) [StatementBreak]
              ) [StatementsMany]
              StatementContinue(
              ) [StatementContinue]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:29:13,578 - ===================================
INFO  20:29:13,580 - Obradjuje se funckijamain na liniji 4
INFO  20:29:13,581 - Hello Var a na liniji 4
INFO  20:29:13,581 - Hello Var x na liniji 5
INFO  20:29:13,581 - Hello Var b na liniji 6
INFO  20:29:13,582 - usaoWhile
INFO  20:29:13,582 - 5 na liniji 8
INFO  20:29:13,582 - 5 na liniji 8
INFO  20:29:13,582 - usao condTermOne na liniji 8
INFO  20:29:13,582 - 5 na liniji 8
INFO  20:29:13,582 - usaoCondTermMany na liniji 8
INFO  20:29:13,582 - 5 na liniji 8
INFO  20:29:13,582 - 5 na liniji 8
INFO  20:29:13,582 - usao condOne na liniji 8
INFO  20:29:13,582 - 5 na liniji 8
INFO  20:29:13,582 - izaasaoWhile na liniji 8
INFO  20:29:13,582 - usaoForeach
INFO  20:29:13,582 - izasaoForEach na liniji 14
INFO  20:30:39,603 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:30:39,629 - #2 program
INFO  20:30:39,629 - #42 MJProgram
INFO  20:30:39,629 - #3 const
INFO  20:30:39,630 - #42 bool
INFO  20:30:39,630 - #42 b
INFO  20:30:39,630 - #11 =
INFO  20:30:39,630 - #43 true
INFO  20:30:39,630 - #6 ;
INFO  20:30:39,631 - #4 {
INFO  20:30:39,631 - #17 void
INFO  20:30:39,631 - #42 main
INFO  20:30:39,632 - #7 (
INFO  20:30:39,632 - #42 bool
INFO  20:30:39,632 - #42 a
INFO  20:30:39,632 - #8 )
INFO  20:30:39,632 - #42 int
INFO  20:30:39,632 - #42 x
INFO  20:30:39,632 - #6 ;
INFO  20:30:39,632 - #42 bool
INFO  20:30:39,633 - #42 b
INFO  20:30:39,633 - #6 ;
INFO  20:30:39,633 - #4 {
INFO  20:30:39,633 - #33 while
INFO  20:30:39,633 - #7 (
INFO  20:30:39,633 - #42 a
INFO  20:30:39,634 - #31 &&
INFO  20:30:39,635 - #42 b
INFO  20:30:39,635 - #8 )
INFO  20:30:39,635 - #4 {
INFO  20:30:39,635 - #42 x
INFO  20:30:39,635 - #11 =
INFO  20:30:39,635 - #41 1
INFO  20:30:39,636 - #6 ;
INFO  20:30:39,636 - #42 x
INFO  20:30:39,636 - #11 =
INFO  20:30:39,636 - #41 2
INFO  20:30:39,636 - #6 ;
INFO  20:30:39,636 - #5 }
INFO  20:30:39,636 - #42 b
INFO  20:30:39,637 - #18 .
INFO  20:30:39,637 - #29 foreach
INFO  20:30:39,637 - #7 (
INFO  20:30:39,637 - #42 x
INFO  20:30:39,637 - #20 =>
INFO  20:30:39,637 - #4 {
INFO  20:30:39,638 - #42 x
INFO  20:30:39,638 - #11 =
INFO  20:30:39,638 - #41 1
INFO  20:30:39,638 - #6 ;
INFO  20:30:39,638 - #42 x
INFO  20:30:39,638 - #11 =
INFO  20:30:39,638 - #41 2
INFO  20:30:39,638 - #6 ;
INFO  20:30:39,638 - #30 break
INFO  20:30:39,638 - #6 ;
INFO  20:30:39,638 - #28 continue
INFO  20:30:39,639 - #6 ;
INFO  20:30:39,639 - #5 }
INFO  20:30:39,639 - #8 )
INFO  20:30:39,639 - #6 ;
INFO  20:30:39,640 - #5 }
INFO  20:30:39,640 - #5 }
INFO  20:30:39,650 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               b
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementWhile(
            WhileBegin(
            ) [WhileBegin]
            ConditionOne(
              CondTermMany(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
                CondTermOne(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             b
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondTermMany]
            ) [ConditionOne]
            StatementStatement(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             1
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           2
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
            ) [StatementStatement]
          ) [StatementWhile]
        ) [StatementOne]
        StatementForEach(
          Designator(
           b
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         x
          StatementStatement(
            StatementsMany(
              StatementsMany(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
                StatementBreak(
                ) [StatementBreak]
              ) [StatementsMany]
              StatementContinue(
              ) [StatementContinue]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:30:39,650 - ===================================
INFO  20:30:39,654 - Obradjuje se funckijamain na liniji 4
INFO  20:30:39,654 - Hello Var a na liniji 4
INFO  20:30:39,654 - Hello Var x na liniji 5
INFO  20:30:39,654 - Hello Var b na liniji 6
INFO  20:30:39,656 - usaoWhile
INFO  20:30:39,656 - 5 na liniji 8
INFO  20:30:39,656 - 5 na liniji 8
INFO  20:30:39,656 - usao condTermOne na liniji 8
INFO  20:30:39,656 - 5 na liniji 8
INFO  20:30:39,656 - usaoCondTermMany na liniji 8
INFO  20:30:39,656 - 5 na liniji 8
INFO  20:30:39,656 - 5 na liniji 8
INFO  20:30:39,656 - usao condOne na liniji 8
INFO  20:30:39,656 - 5 na liniji 8
INFO  20:30:39,656 - izaasaoWhile na liniji 8
INFO  20:30:39,656 - usaoForeach
INFO  20:30:39,656 - izasaoForEach na liniji 14
ERROR 20:30:39,657 - Greska: Designator nije array tipa!StatementForEach na liniji 14
INFO  20:31:01,341 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:31:01,366 - #2 program
INFO  20:31:01,367 - #42 MJProgram
INFO  20:31:01,367 - #3 const
INFO  20:31:01,367 - #42 bool
INFO  20:31:01,367 - #42 b
INFO  20:31:01,368 - #11 =
INFO  20:31:01,368 - #43 true
INFO  20:31:01,368 - #6 ;
INFO  20:31:01,368 - #4 {
INFO  20:31:01,369 - #17 void
INFO  20:31:01,369 - #42 main
INFO  20:31:01,369 - #7 (
INFO  20:31:01,369 - #42 bool
INFO  20:31:01,369 - #42 a
INFO  20:31:01,369 - #8 )
INFO  20:31:01,369 - #42 int
INFO  20:31:01,369 - #42 x
INFO  20:31:01,369 - #6 ;
INFO  20:31:01,369 - #42 bool
INFO  20:31:01,370 - #42 b
INFO  20:31:01,370 - #6 ;
INFO  20:31:01,370 - #42 int
INFO  20:31:01,370 - #42 xx
INFO  20:31:01,370 - #10 [
INFO  20:31:01,370 - #9 ]
INFO  20:31:01,370 - #6 ;
INFO  20:31:01,370 - #4 {
INFO  20:31:01,370 - #33 while
INFO  20:31:01,370 - #7 (
INFO  20:31:01,370 - #42 a
INFO  20:31:01,371 - #31 &&
INFO  20:31:01,372 - #42 b
INFO  20:31:01,372 - #8 )
INFO  20:31:01,373 - #4 {
INFO  20:31:01,373 - #42 x
INFO  20:31:01,373 - #11 =
INFO  20:31:01,373 - #41 1
INFO  20:31:01,373 - #6 ;
INFO  20:31:01,373 - #42 x
INFO  20:31:01,373 - #11 =
INFO  20:31:01,373 - #41 2
INFO  20:31:01,373 - #6 ;
INFO  20:31:01,373 - #5 }
INFO  20:31:01,373 - #42 xx
INFO  20:31:01,374 - #18 .
INFO  20:31:01,374 - #29 foreach
INFO  20:31:01,374 - #7 (
INFO  20:31:01,374 - #42 x
INFO  20:31:01,374 - #20 =>
INFO  20:31:01,374 - #4 {
INFO  20:31:01,374 - #42 x
INFO  20:31:01,374 - #11 =
INFO  20:31:01,374 - #41 1
INFO  20:31:01,375 - #6 ;
INFO  20:31:01,375 - #42 x
INFO  20:31:01,375 - #11 =
INFO  20:31:01,375 - #41 2
INFO  20:31:01,375 - #6 ;
INFO  20:31:01,375 - #30 break
INFO  20:31:01,375 - #6 ;
INFO  20:31:01,375 - #28 continue
INFO  20:31:01,375 - #6 ;
INFO  20:31:01,375 - #5 }
INFO  20:31:01,376 - #8 )
INFO  20:31:01,376 - #6 ;
INFO  20:31:01,376 - #5 }
INFO  20:31:01,376 - #5 }
INFO  20:31:01,384 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   x
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 b
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               xx
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementWhile(
            WhileBegin(
            ) [WhileBegin]
            ConditionOne(
              CondTermMany(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
                CondTermOne(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             b
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondTermMany]
            ) [ConditionOne]
            StatementStatement(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             1
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           2
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
            ) [StatementStatement]
          ) [StatementWhile]
        ) [StatementOne]
        StatementForEach(
          Designator(
           xx
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         x
          StatementStatement(
            StatementsMany(
              StatementsMany(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
                StatementBreak(
                ) [StatementBreak]
              ) [StatementsMany]
              StatementContinue(
              ) [StatementContinue]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:31:01,386 - ===================================
INFO  20:31:01,388 - Obradjuje se funckijamain na liniji 4
INFO  20:31:01,388 - Hello Var a na liniji 4
INFO  20:31:01,388 - Hello Var x na liniji 5
INFO  20:31:01,388 - Hello Var b na liniji 6
INFO  20:31:01,388 - Hello Var xx na liniji 7
INFO  20:31:01,389 - usaoWhile
INFO  20:31:01,389 - 5 na liniji 9
INFO  20:31:01,389 - 5 na liniji 9
INFO  20:31:01,389 - usao condTermOne na liniji 9
INFO  20:31:01,389 - 5 na liniji 9
INFO  20:31:01,389 - usaoCondTermMany na liniji 9
INFO  20:31:01,389 - 5 na liniji 9
INFO  20:31:01,389 - 5 na liniji 9
INFO  20:31:01,389 - usao condOne na liniji 9
INFO  20:31:01,389 - 5 na liniji 9
INFO  20:31:01,389 - izaasaoWhile na liniji 9
INFO  20:31:01,389 - usaoForeach
INFO  20:31:01,389 - izasaoForEach na liniji 15
INFO  20:34:41,438 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:34:41,462 - #2 program
INFO  20:34:41,462 - #42 MJProgram
INFO  20:34:41,462 - #3 const
INFO  20:34:41,463 - #42 bool
INFO  20:34:41,463 - #42 b
INFO  20:34:41,463 - #11 =
INFO  20:34:41,463 - #43 true
INFO  20:34:41,463 - #6 ;
INFO  20:34:41,464 - #4 {
INFO  20:34:41,464 - #17 void
INFO  20:34:41,464 - #42 main
INFO  20:34:41,465 - #7 (
INFO  20:34:41,465 - #42 bool
INFO  20:34:41,465 - #42 a
INFO  20:34:41,465 - #8 )
INFO  20:34:41,465 - #42 int
INFO  20:34:41,465 - #42 x
INFO  20:34:41,465 - #6 ;
INFO  20:34:41,465 - #42 bool
INFO  20:34:41,466 - #42 b
INFO  20:34:41,466 - #6 ;
INFO  20:34:41,466 - #42 int
INFO  20:34:41,466 - #42 xx
INFO  20:34:41,466 - #10 [
INFO  20:34:41,466 - #9 ]
INFO  20:34:41,466 - #6 ;
INFO  20:34:41,466 - #4 {
INFO  20:34:41,466 - #33 while
INFO  20:34:41,466 - #7 (
INFO  20:34:41,466 - #42 a
INFO  20:34:41,467 - #31 &&
INFO  20:34:41,468 - #42 b
INFO  20:34:41,468 - #8 )
INFO  20:34:41,469 - #4 {
INFO  20:34:41,469 - #42 x
INFO  20:34:41,469 - #11 =
INFO  20:34:41,469 - #41 1
INFO  20:34:41,469 - #6 ;
INFO  20:34:41,469 - #42 x
INFO  20:34:41,469 - #11 =
INFO  20:34:41,469 - #41 2
INFO  20:34:41,469 - #6 ;
INFO  20:34:41,469 - #5 }
INFO  20:34:41,469 - #42 xx
INFO  20:34:41,470 - #18 .
INFO  20:34:41,470 - #29 foreach
INFO  20:34:41,470 - #7 (
INFO  20:34:41,470 - #42 x
INFO  20:34:41,470 - #20 =>
INFO  20:34:41,470 - #4 {
INFO  20:34:41,470 - #42 x
INFO  20:34:41,470 - #11 =
INFO  20:34:41,470 - #41 1
INFO  20:34:41,470 - #6 ;
INFO  20:34:41,470 - #42 x
INFO  20:34:41,470 - #11 =
INFO  20:34:41,471 - #41 2
INFO  20:34:41,471 - #6 ;
INFO  20:34:41,471 - #30 break
INFO  20:34:41,471 - #6 ;
INFO  20:34:41,471 - #28 continue
INFO  20:34:41,471 - #6 ;
INFO  20:34:41,471 - #5 }
INFO  20:34:41,472 - #8 )
INFO  20:34:41,472 - #6 ;
INFO  20:34:41,472 - #5 }
INFO  20:34:41,472 - #5 }
INFO  20:34:41,479 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   x
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 b
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               xx
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementWhile(
            WhileBegin(
            ) [WhileBegin]
            ConditionOne(
              CondTermMany(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
                CondTermOne(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             b
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondTermMany]
            ) [ConditionOne]
            StatementStatement(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             1
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           2
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
            ) [StatementStatement]
          ) [StatementWhile]
        ) [StatementOne]
        StatementForEach(
          Designator(
           xx
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         x
          StatementStatement(
            StatementsMany(
              StatementsMany(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
                StatementBreak(
                ) [StatementBreak]
              ) [StatementsMany]
              StatementContinue(
              ) [StatementContinue]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:34:41,480 - ===================================
INFO  20:34:41,483 - Obradjuje se funckijamain na liniji 4
INFO  20:34:41,483 - Hello Var a na liniji 4
INFO  20:34:41,483 - Hello Var x na liniji 5
INFO  20:34:41,483 - Hello Var b na liniji 6
INFO  20:34:41,483 - Hello Var xx na liniji 7
INFO  20:34:41,483 - usaoWhile
INFO  20:34:41,483 - 5 na liniji 9
INFO  20:34:41,483 - 5 na liniji 9
INFO  20:34:41,483 - usao condTermOne na liniji 9
INFO  20:34:41,483 - 5 na liniji 9
INFO  20:34:41,484 - usaoCondTermMany na liniji 9
INFO  20:34:41,484 - 5 na liniji 9
INFO  20:34:41,484 - 5 na liniji 9
INFO  20:34:41,484 - usao condOne na liniji 9
INFO  20:34:41,484 - 5 na liniji 9
INFO  20:34:41,484 - izaasaoWhile na liniji 9
INFO  20:34:41,484 - usaoForeach
INFO  20:34:41,484 - izasaoForEach na liniji 15
INFO  20:34:49,607 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:34:49,631 - #2 program
INFO  20:34:49,632 - #42 MJProgram
INFO  20:34:49,632 - #3 const
INFO  20:34:49,632 - #42 bool
INFO  20:34:49,632 - #42 b
INFO  20:34:49,633 - #11 =
INFO  20:34:49,633 - #43 true
INFO  20:34:49,633 - #6 ;
INFO  20:34:49,633 - #4 {
INFO  20:34:49,634 - #17 void
INFO  20:34:49,634 - #42 main
INFO  20:34:49,634 - #7 (
INFO  20:34:49,634 - #42 bool
INFO  20:34:49,634 - #42 a
INFO  20:34:49,634 - #8 )
INFO  20:34:49,634 - #42 bool
INFO  20:34:49,634 - #42 b
INFO  20:34:49,634 - #6 ;
INFO  20:34:49,635 - #42 int
INFO  20:34:49,635 - #42 xx
INFO  20:34:49,635 - #10 [
INFO  20:34:49,635 - #9 ]
INFO  20:34:49,635 - #6 ;
INFO  20:34:49,635 - #4 {
INFO  20:34:49,635 - #33 while
INFO  20:34:49,635 - #7 (
INFO  20:34:49,635 - #42 a
INFO  20:34:49,636 - #31 &&
INFO  20:34:49,637 - #42 b
INFO  20:34:49,637 - #8 )
INFO  20:34:49,637 - #4 {
INFO  20:34:49,637 - #42 x
INFO  20:34:49,637 - #11 =
INFO  20:34:49,637 - #41 1
INFO  20:34:49,638 - #6 ;
INFO  20:34:49,638 - #42 x
INFO  20:34:49,638 - #11 =
INFO  20:34:49,638 - #41 2
INFO  20:34:49,638 - #6 ;
INFO  20:34:49,638 - #5 }
INFO  20:34:49,638 - #42 xx
INFO  20:34:49,638 - #18 .
INFO  20:34:49,639 - #29 foreach
INFO  20:34:49,639 - #7 (
INFO  20:34:49,639 - #42 x
INFO  20:34:49,639 - #20 =>
INFO  20:34:49,639 - #4 {
INFO  20:34:49,639 - #42 x
INFO  20:34:49,639 - #11 =
INFO  20:34:49,639 - #41 1
INFO  20:34:49,639 - #6 ;
INFO  20:34:49,639 - #42 x
INFO  20:34:49,639 - #11 =
INFO  20:34:49,640 - #41 2
INFO  20:34:49,640 - #6 ;
INFO  20:34:49,640 - #30 break
INFO  20:34:49,640 - #6 ;
INFO  20:34:49,640 - #28 continue
INFO  20:34:49,640 - #6 ;
INFO  20:34:49,640 - #5 }
INFO  20:34:49,640 - #8 )
INFO  20:34:49,640 - #6 ;
INFO  20:34:49,640 - #5 }
INFO  20:34:49,641 - #5 }
INFO  20:34:49,648 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 b
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               xx
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementWhile(
            WhileBegin(
            ) [WhileBegin]
            ConditionOne(
              CondTermMany(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
                CondTermOne(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             b
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondTermMany]
            ) [ConditionOne]
            StatementStatement(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             1
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           2
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
            ) [StatementStatement]
          ) [StatementWhile]
        ) [StatementOne]
        StatementForEach(
          Designator(
           xx
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         x
          StatementStatement(
            StatementsMany(
              StatementsMany(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
                StatementBreak(
                ) [StatementBreak]
              ) [StatementsMany]
              StatementContinue(
              ) [StatementContinue]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:34:49,648 - ===================================
INFO  20:34:49,650 - Obradjuje se funckijamain na liniji 4
INFO  20:34:49,650 - Hello Var a na liniji 4
INFO  20:34:49,652 - Hello Var b na liniji 6
INFO  20:34:49,652 - Hello Var xx na liniji 7
INFO  20:34:49,652 - usaoWhile
INFO  20:34:49,652 - 5 na liniji 9
INFO  20:34:49,652 - 5 na liniji 9
INFO  20:34:49,652 - usao condTermOne na liniji 9
INFO  20:34:49,652 - 5 na liniji 9
INFO  20:34:49,652 - usaoCondTermMany na liniji 9
INFO  20:34:49,652 - 5 na liniji 9
INFO  20:34:49,652 - 5 na liniji 9
INFO  20:34:49,652 - usao condOne na liniji 9
INFO  20:34:49,652 - 5 na liniji 9
ERROR 20:34:49,652 - Greska: Nije deklarisana promenljiva!Designator na liniji 10
INFO  20:35:09,551 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:35:09,575 - #2 program
INFO  20:35:09,576 - #42 MJProgram
INFO  20:35:09,576 - #3 const
INFO  20:35:09,576 - #42 bool
INFO  20:35:09,576 - #42 b
INFO  20:35:09,577 - #11 =
INFO  20:35:09,577 - #43 true
INFO  20:35:09,577 - #6 ;
INFO  20:35:09,577 - #4 {
INFO  20:35:09,578 - #17 void
INFO  20:35:09,578 - #42 main
INFO  20:35:09,578 - #7 (
INFO  20:35:09,578 - #42 bool
INFO  20:35:09,578 - #42 a
INFO  20:35:09,578 - #8 )
INFO  20:35:09,578 - #42 int
INFO  20:35:09,578 - #42 x
INFO  20:35:09,578 - #6 ;
INFO  20:35:09,578 - #42 bool
INFO  20:35:09,579 - #42 b
INFO  20:35:09,579 - #6 ;
INFO  20:35:09,579 - #42 int
INFO  20:35:09,579 - #42 xx
INFO  20:35:09,579 - #10 [
INFO  20:35:09,579 - #9 ]
INFO  20:35:09,579 - #6 ;
INFO  20:35:09,579 - #4 {
INFO  20:35:09,579 - #33 while
INFO  20:35:09,579 - #7 (
INFO  20:35:09,579 - #42 a
INFO  20:35:09,580 - #31 &&
INFO  20:35:09,581 - #42 b
INFO  20:35:09,581 - #8 )
INFO  20:35:09,581 - #4 {
INFO  20:35:09,581 - #42 x
INFO  20:35:09,581 - #11 =
INFO  20:35:09,581 - #41 1
INFO  20:35:09,582 - #6 ;
INFO  20:35:09,582 - #42 x
INFO  20:35:09,582 - #11 =
INFO  20:35:09,582 - #41 2
INFO  20:35:09,582 - #6 ;
INFO  20:35:09,582 - #5 }
INFO  20:35:09,582 - #42 xx
INFO  20:35:09,583 - #18 .
INFO  20:35:09,583 - #29 foreach
INFO  20:35:09,583 - #7 (
INFO  20:35:09,583 - #42 xy
INFO  20:35:09,583 - #20 =>
INFO  20:35:09,583 - #4 {
INFO  20:35:09,583 - #42 xy
INFO  20:35:09,583 - #11 =
INFO  20:35:09,584 - #41 1
INFO  20:35:09,584 - #6 ;
INFO  20:35:09,584 - #42 xy
INFO  20:35:09,584 - #11 =
INFO  20:35:09,584 - #41 2
INFO  20:35:09,584 - #6 ;
INFO  20:35:09,584 - #30 break
INFO  20:35:09,584 - #6 ;
INFO  20:35:09,584 - #28 continue
INFO  20:35:09,584 - #6 ;
INFO  20:35:09,585 - #5 }
INFO  20:35:09,585 - #8 )
INFO  20:35:09,585 - #6 ;
INFO  20:35:09,585 - #5 }
INFO  20:35:09,585 - #5 }
INFO  20:35:09,593 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   x
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 b
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               xx
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementWhile(
            WhileBegin(
            ) [WhileBegin]
            ConditionOne(
              CondTermMany(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
                CondTermOne(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             b
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondTermMany]
            ) [ConditionOne]
            StatementStatement(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             1
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           2
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
            ) [StatementStatement]
          ) [StatementWhile]
        ) [StatementOne]
        StatementForEach(
          Designator(
           xx
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         xy
          StatementStatement(
            StatementsMany(
              StatementsMany(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         xy
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       xy
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
                StatementBreak(
                ) [StatementBreak]
              ) [StatementsMany]
              StatementContinue(
              ) [StatementContinue]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:35:09,594 - ===================================
INFO  20:35:09,596 - Obradjuje se funckijamain na liniji 4
INFO  20:35:09,596 - Hello Var a na liniji 4
INFO  20:35:09,597 - Hello Var x na liniji 5
INFO  20:35:09,597 - Hello Var b na liniji 6
INFO  20:35:09,597 - Hello Var xx na liniji 7
INFO  20:35:09,597 - usaoWhile
INFO  20:35:09,597 - 5 na liniji 9
INFO  20:35:09,597 - 5 na liniji 9
INFO  20:35:09,597 - usao condTermOne na liniji 9
INFO  20:35:09,597 - 5 na liniji 9
INFO  20:35:09,597 - usaoCondTermMany na liniji 9
INFO  20:35:09,597 - 5 na liniji 9
INFO  20:35:09,597 - 5 na liniji 9
INFO  20:35:09,597 - usao condOne na liniji 9
INFO  20:35:09,597 - 5 na liniji 9
INFO  20:35:09,597 - izaasaoWhile na liniji 9
INFO  20:35:09,597 - usaoForeach
ERROR 20:35:09,597 - Greska: Nije deklarisana promenljiva!Designator na liniji 16
INFO  20:35:21,329 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:35:21,353 - #2 program
INFO  20:35:21,353 - #42 MJProgram
INFO  20:35:21,353 - #3 const
INFO  20:35:21,353 - #42 bool
INFO  20:35:21,353 - #42 b
INFO  20:35:21,354 - #11 =
INFO  20:35:21,354 - #43 true
INFO  20:35:21,354 - #6 ;
INFO  20:35:21,354 - #4 {
INFO  20:35:21,355 - #17 void
INFO  20:35:21,355 - #42 main
INFO  20:35:21,355 - #7 (
INFO  20:35:21,355 - #42 bool
INFO  20:35:21,355 - #42 a
INFO  20:35:21,355 - #8 )
INFO  20:35:21,355 - #42 int
INFO  20:35:21,355 - #42 x
INFO  20:35:21,355 - #6 ;
INFO  20:35:21,356 - #42 bool
INFO  20:35:21,356 - #42 b
INFO  20:35:21,356 - #6 ;
INFO  20:35:21,356 - #42 int
INFO  20:35:21,356 - #42 xx
INFO  20:35:21,356 - #10 [
INFO  20:35:21,356 - #9 ]
INFO  20:35:21,356 - #6 ;
INFO  20:35:21,356 - #4 {
INFO  20:35:21,356 - #33 while
INFO  20:35:21,357 - #7 (
INFO  20:35:21,357 - #42 a
INFO  20:35:21,357 - #31 &&
INFO  20:35:21,358 - #42 b
INFO  20:35:21,358 - #8 )
INFO  20:35:21,358 - #4 {
INFO  20:35:21,358 - #42 x
INFO  20:35:21,358 - #11 =
INFO  20:35:21,359 - #41 1
INFO  20:35:21,359 - #6 ;
INFO  20:35:21,359 - #42 x
INFO  20:35:21,359 - #11 =
INFO  20:35:21,359 - #41 2
INFO  20:35:21,359 - #6 ;
INFO  20:35:21,359 - #5 }
INFO  20:35:21,359 - #42 xx
INFO  20:35:21,360 - #18 .
INFO  20:35:21,360 - #29 foreach
INFO  20:35:21,360 - #7 (
INFO  20:35:21,360 - #42 xy
INFO  20:35:21,360 - #20 =>
INFO  20:35:21,360 - #4 {
INFO  20:35:21,360 - #42 x
INFO  20:35:21,360 - #11 =
INFO  20:35:21,360 - #41 1
INFO  20:35:21,360 - #6 ;
INFO  20:35:21,361 - #42 x
INFO  20:35:21,361 - #11 =
INFO  20:35:21,361 - #41 2
INFO  20:35:21,361 - #6 ;
INFO  20:35:21,361 - #30 break
INFO  20:35:21,361 - #6 ;
INFO  20:35:21,361 - #28 continue
INFO  20:35:21,361 - #6 ;
INFO  20:35:21,361 - #5 }
INFO  20:35:21,362 - #8 )
INFO  20:35:21,362 - #6 ;
INFO  20:35:21,362 - #5 }
INFO  20:35:21,362 - #5 }
INFO  20:35:21,369 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   x
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 b
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               xx
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementWhile(
            WhileBegin(
            ) [WhileBegin]
            ConditionOne(
              CondTermMany(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
                CondTermOne(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             b
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondTermMany]
            ) [ConditionOne]
            StatementStatement(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             1
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           2
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
            ) [StatementStatement]
          ) [StatementWhile]
        ) [StatementOne]
        StatementForEach(
          Designator(
           xx
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         xy
          StatementStatement(
            StatementsMany(
              StatementsMany(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
                StatementBreak(
                ) [StatementBreak]
              ) [StatementsMany]
              StatementContinue(
              ) [StatementContinue]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:35:21,370 - ===================================
INFO  20:35:21,372 - Obradjuje se funckijamain na liniji 4
INFO  20:35:21,372 - Hello Var a na liniji 4
INFO  20:35:21,373 - Hello Var x na liniji 5
INFO  20:35:21,373 - Hello Var b na liniji 6
INFO  20:35:21,373 - Hello Var xx na liniji 7
INFO  20:35:21,373 - usaoWhile
INFO  20:35:21,373 - 5 na liniji 9
INFO  20:35:21,373 - 5 na liniji 9
INFO  20:35:21,373 - usao condTermOne na liniji 9
INFO  20:35:21,373 - 5 na liniji 9
INFO  20:35:21,373 - usaoCondTermMany na liniji 9
INFO  20:35:21,373 - 5 na liniji 9
INFO  20:35:21,373 - 5 na liniji 9
INFO  20:35:21,373 - usao condOne na liniji 9
INFO  20:35:21,373 - 5 na liniji 9
INFO  20:35:21,373 - izaasaoWhile na liniji 9
INFO  20:35:21,373 - usaoForeach
INFO  20:35:21,373 - izasaoForEach na liniji 15
ERROR 20:35:21,374 - Greska: Ident nije deklarisan!StatementForEach na liniji 15
ERROR 20:35:21,374 - Greska: Ident se ne poklapa se elementima niza!StatementForEach na liniji 15
INFO  20:35:34,260 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:35:34,286 - #2 program
INFO  20:35:34,286 - #42 MJProgram
INFO  20:35:34,286 - #3 const
INFO  20:35:34,287 - #42 bool
INFO  20:35:34,287 - #42 b
INFO  20:35:34,287 - #11 =
INFO  20:35:34,287 - #43 true
INFO  20:35:34,287 - #6 ;
INFO  20:35:34,287 - #4 {
INFO  20:35:34,288 - #17 void
INFO  20:35:34,288 - #42 main
INFO  20:35:34,288 - #7 (
INFO  20:35:34,288 - #42 bool
INFO  20:35:34,288 - #42 a
INFO  20:35:34,288 - #8 )
INFO  20:35:34,289 - #42 int
INFO  20:35:34,289 - #42 x
INFO  20:35:34,289 - #6 ;
INFO  20:35:34,289 - #42 bool
INFO  20:35:34,289 - #42 b
INFO  20:35:34,289 - #6 ;
INFO  20:35:34,289 - #42 int
INFO  20:35:34,289 - #42 xx
INFO  20:35:34,289 - #10 [
INFO  20:35:34,290 - #9 ]
INFO  20:35:34,290 - #6 ;
INFO  20:35:34,290 - #4 {
INFO  20:35:34,290 - #33 while
INFO  20:35:34,290 - #7 (
INFO  20:35:34,290 - #42 a
INFO  20:35:34,290 - #31 &&
INFO  20:35:34,291 - #42 b
INFO  20:35:34,291 - #8 )
INFO  20:35:34,292 - #4 {
INFO  20:35:34,292 - #42 x
INFO  20:35:34,292 - #11 =
INFO  20:35:34,292 - #41 1
INFO  20:35:34,292 - #6 ;
INFO  20:35:34,292 - #42 x
INFO  20:35:34,292 - #11 =
INFO  20:35:34,292 - #41 2
INFO  20:35:34,292 - #6 ;
INFO  20:35:34,293 - #5 }
INFO  20:35:34,293 - #42 xx
INFO  20:35:34,293 - #18 .
INFO  20:35:34,293 - #29 foreach
INFO  20:35:34,293 - #7 (
INFO  20:35:34,293 - #42 b
INFO  20:35:34,293 - #20 =>
INFO  20:35:34,293 - #4 {
INFO  20:35:34,293 - #42 x
INFO  20:35:34,294 - #11 =
INFO  20:35:34,294 - #41 1
INFO  20:35:34,294 - #6 ;
INFO  20:35:34,294 - #42 x
INFO  20:35:34,294 - #11 =
INFO  20:35:34,294 - #41 2
INFO  20:35:34,294 - #6 ;
INFO  20:35:34,294 - #30 break
INFO  20:35:34,294 - #6 ;
INFO  20:35:34,294 - #28 continue
INFO  20:35:34,294 - #6 ;
INFO  20:35:34,294 - #5 }
INFO  20:35:34,295 - #8 )
INFO  20:35:34,295 - #6 ;
INFO  20:35:34,295 - #5 }
INFO  20:35:34,295 - #5 }
INFO  20:35:34,302 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   x
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 b
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               xx
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementWhile(
            WhileBegin(
            ) [WhileBegin]
            ConditionOne(
              CondTermMany(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
                CondTermOne(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             b
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondTermMany]
            ) [ConditionOne]
            StatementStatement(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             1
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           2
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
            ) [StatementStatement]
          ) [StatementWhile]
        ) [StatementOne]
        StatementForEach(
          Designator(
           xx
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         b
          StatementStatement(
            StatementsMany(
              StatementsMany(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
                StatementBreak(
                ) [StatementBreak]
              ) [StatementsMany]
              StatementContinue(
              ) [StatementContinue]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:35:34,304 - ===================================
INFO  20:35:34,306 - Obradjuje se funckijamain na liniji 4
INFO  20:35:34,306 - Hello Var a na liniji 4
INFO  20:35:34,306 - Hello Var x na liniji 5
INFO  20:35:34,306 - Hello Var b na liniji 6
INFO  20:35:34,306 - Hello Var xx na liniji 7
INFO  20:35:34,307 - usaoWhile
INFO  20:35:34,307 - 5 na liniji 9
INFO  20:35:34,307 - 5 na liniji 9
INFO  20:35:34,307 - usao condTermOne na liniji 9
INFO  20:35:34,307 - 5 na liniji 9
INFO  20:35:34,307 - usaoCondTermMany na liniji 9
INFO  20:35:34,307 - 5 na liniji 9
INFO  20:35:34,307 - 5 na liniji 9
INFO  20:35:34,307 - usao condOne na liniji 9
INFO  20:35:34,307 - 5 na liniji 9
INFO  20:35:34,307 - izaasaoWhile na liniji 9
INFO  20:35:34,307 - usaoForeach
INFO  20:35:34,307 - izasaoForEach na liniji 15
ERROR 20:35:34,307 - Greska: Ident se ne poklapa se elementima niza!StatementForEach na liniji 15
INFO  20:45:35,915 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:45:35,939 - #2 program
INFO  20:45:35,939 - #42 MJProgram
INFO  20:45:35,939 - #3 const
INFO  20:45:35,940 - #42 bool
INFO  20:45:35,940 - #42 b
INFO  20:45:35,940 - #11 =
INFO  20:45:35,940 - #43 true
INFO  20:45:35,940 - #6 ;
INFO  20:45:35,941 - #4 {
INFO  20:45:35,941 - #17 void
INFO  20:45:35,941 - #42 main
INFO  20:45:35,941 - #7 (
INFO  20:45:35,942 - #42 bool
INFO  20:45:35,942 - #42 a
INFO  20:45:35,942 - #8 )
INFO  20:45:35,942 - #42 int
INFO  20:45:35,942 - #42 x
INFO  20:45:35,942 - #6 ;
INFO  20:45:35,942 - #42 bool
INFO  20:45:35,943 - #42 b
INFO  20:45:35,943 - #6 ;
INFO  20:45:35,943 - #42 int
INFO  20:45:35,943 - #42 xx
INFO  20:45:35,943 - #10 [
INFO  20:45:35,943 - #9 ]
INFO  20:45:35,943 - #6 ;
INFO  20:45:35,943 - #4 {
INFO  20:45:35,943 - #33 while
INFO  20:45:35,943 - #7 (
INFO  20:45:35,943 - #42 a
INFO  20:45:35,944 - #31 &&
INFO  20:45:35,945 - #42 b
INFO  20:45:35,945 - #8 )
INFO  20:45:35,945 - #4 {
INFO  20:45:35,945 - #42 x
INFO  20:45:35,945 - #11 =
INFO  20:45:35,945 - #41 1
INFO  20:45:35,945 - #6 ;
INFO  20:45:35,946 - #42 x
INFO  20:45:35,946 - #11 =
INFO  20:45:35,946 - #41 2
INFO  20:45:35,946 - #6 ;
INFO  20:45:35,946 - #5 }
INFO  20:45:35,946 - #42 xx
INFO  20:45:35,946 - #18 .
INFO  20:45:35,946 - #29 foreach
INFO  20:45:35,947 - #7 (
INFO  20:45:35,947 - #42 b
INFO  20:45:35,947 - #20 =>
INFO  20:45:35,947 - #4 {
INFO  20:45:35,947 - #42 x
INFO  20:45:35,947 - #11 =
INFO  20:45:35,948 - #41 1
INFO  20:45:35,948 - #6 ;
INFO  20:45:35,948 - #42 x
INFO  20:45:35,948 - #11 =
INFO  20:45:35,948 - #41 2
INFO  20:45:35,948 - #6 ;
INFO  20:45:35,948 - #30 break
INFO  20:45:35,948 - #6 ;
INFO  20:45:35,948 - #28 continue
INFO  20:45:35,949 - #6 ;
INFO  20:45:35,949 - #5 }
INFO  20:45:35,949 - #8 )
INFO  20:45:35,949 - #6 ;
INFO  20:45:35,949 - #5 }
INFO  20:45:35,949 - #5 }
INFO  20:45:35,956 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   x
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 b
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               xx
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementWhile(
            WhileBegin(
            ) [WhileBegin]
            ConditionOne(
              CondTermMany(
                CondFactOne(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           a
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActParsNone(
                          ) [OptActParsNone]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [CondFactOne]
                CondTermOne(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             b
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondTermMany]
            ) [ConditionOne]
            StatementStatement(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             1
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           2
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
            ) [StatementStatement]
          ) [StatementWhile]
        ) [StatementOne]
        StatementForEach(
          Designator(
           xx
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         b
          StatementStatement(
            StatementsMany(
              StatementsMany(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
                StatementBreak(
                ) [StatementBreak]
              ) [StatementsMany]
              StatementContinue(
              ) [StatementContinue]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:45:35,957 - ===================================
INFO  20:45:35,960 - Obradjuje se funckijamain na liniji 4
INFO  20:45:35,960 - Hello Var a na liniji 4
INFO  20:45:35,960 - Hello Var x na liniji 5
INFO  20:45:35,960 - Hello Var b na liniji 6
INFO  20:45:35,960 - Hello Var xx na liniji 7
INFO  20:45:35,960 - usaoWhile
INFO  20:45:35,960 - 5 na liniji 9
INFO  20:45:35,960 - 5 na liniji 9
INFO  20:45:35,960 - usao condTermOne na liniji 9
INFO  20:45:35,961 - 5 na liniji 9
INFO  20:45:35,961 - usaoCondTermMany na liniji 9
INFO  20:45:35,961 - 5 na liniji 9
INFO  20:45:35,961 - 5 na liniji 9
INFO  20:45:35,961 - usao condOne na liniji 9
INFO  20:45:35,961 - 5 na liniji 9
INFO  20:45:35,961 - izaasaoWhile na liniji 9
INFO  20:45:35,961 - usaoForeach
INFO  20:45:35,961 - izasaoForEach na liniji 15
ERROR 20:45:35,961 - Greska: Ident se ne poklapa se elementima niza!StatementForEach na liniji 15
INFO  20:49:39,270 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:49:39,294 - #2 program
INFO  20:49:39,294 - #42 MJProgram
INFO  20:49:39,294 - #3 const
INFO  20:49:39,294 - #42 bool
INFO  20:49:39,295 - #42 b
INFO  20:49:39,295 - #11 =
INFO  20:49:39,295 - #43 true
INFO  20:49:39,295 - #6 ;
INFO  20:49:39,295 - #4 {
INFO  20:49:39,296 - #17 void
INFO  20:49:39,296 - #42 main
INFO  20:49:39,296 - #7 (
INFO  20:49:39,296 - #42 bool
INFO  20:49:39,297 - #42 a
INFO  20:49:39,297 - #8 )
INFO  20:49:39,297 - #42 int
INFO  20:49:39,297 - #42 x
INFO  20:49:39,297 - #6 ;
INFO  20:49:39,297 - #42 bool
INFO  20:49:39,298 - #42 b
INFO  20:49:39,298 - #6 ;
INFO  20:49:39,298 - #42 int
INFO  20:49:39,298 - #42 xx
INFO  20:49:39,298 - #10 [
INFO  20:49:39,298 - #9 ]
INFO  20:49:39,298 - #6 ;
INFO  20:49:39,298 - #4 {
INFO  20:49:39,298 - #33 while
INFO  20:49:39,298 - #7 (
INFO  20:49:39,298 - #42 a
INFO  20:49:39,298 - #31 &&
INFO  20:49:39,300 - #42 b
INFO  20:49:39,300 - #8 )
INFO  20:49:39,300 - #4 {
INFO  20:49:39,300 - #42 x
INFO  20:49:39,300 - #11 =
INFO  20:49:39,300 - #41 1
INFO  20:49:39,300 - #6 ;
INFO  20:49:39,300 - #42 x
INFO  20:49:39,301 - #11 =
INFO  20:49:39,301 - #41 2
INFO  20:49:39,301 - #6 ;
INFO  20:49:39,301 - #5 }
INFO  20:49:39,301 - #42 xx
INFO  20:49:39,301 - #11 =
INFO  20:49:39,301 - #19 new
INFO  20:49:39,301 - #42 int
INFO  20:49:39,301 - #10 [
INFO  20:49:39,301 - #41 3
INFO  20:49:39,301 - #9 ]
INFO  20:49:39,301 - #6 ;
INFO  20:49:39,302 - #42 xx
INFO  20:49:39,302 - #18 .
INFO  20:49:39,302 - #29 foreach
INFO  20:49:39,302 - #7 (
INFO  20:49:39,302 - #42 b
INFO  20:49:39,302 - #20 =>
INFO  20:49:39,302 - #4 {
INFO  20:49:39,303 - #42 x
INFO  20:49:39,303 - #11 =
INFO  20:49:39,303 - #41 1
INFO  20:49:39,303 - #6 ;
INFO  20:49:39,303 - #42 x
INFO  20:49:39,303 - #11 =
INFO  20:49:39,303 - #41 2
INFO  20:49:39,303 - #6 ;
INFO  20:49:39,303 - #30 break
INFO  20:49:39,303 - #6 ;
INFO  20:49:39,303 - #28 continue
INFO  20:49:39,304 - #6 ;
INFO  20:49:39,304 - #5 }
INFO  20:49:39,305 - #8 )
INFO  20:49:39,305 - #6 ;
INFO  20:49:39,305 - #5 }
INFO  20:49:39,305 - #5 }
INFO  20:49:39,310 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   x
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 b
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               xx
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementOne(
            StatementWhile(
              WhileBegin(
              ) [WhileBegin]
              ConditionOne(
                CondTermMany(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             a
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                  CondTermOne(
                    CondFactOne(
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorDesActPar(
                              Designator(
                               b
                                NoAddOns(
                                ) [NoAddOns]
                              ) [Designator]
                              OptActParsNone(
                              ) [OptActParsNone]
                            ) [FactorDesActPar]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondTermMany]
              ) [ConditionOne]
              StatementStatement(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
              ) [StatementStatement]
            ) [StatementWhile]
          ) [StatementOne]
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               xx
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNewExpr(
                      Type(
                       int
                      ) [Type]
                      FactorNew(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               3
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [FactorNew]
                    ) [FactorNewExpr]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementForEach(
          Designator(
           xx
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         b
          StatementStatement(
            StatementsMany(
              StatementsMany(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
                StatementBreak(
                ) [StatementBreak]
              ) [StatementsMany]
              StatementContinue(
              ) [StatementContinue]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:49:39,310 - ===================================
INFO  20:49:39,313 - Obradjuje se funckijamain na liniji 4
INFO  20:49:39,313 - Hello Var a na liniji 4
INFO  20:49:39,313 - Hello Var x na liniji 5
INFO  20:49:39,313 - Hello Var b na liniji 6
INFO  20:49:39,313 - Hello Var xx na liniji 7
INFO  20:49:39,313 - usaoWhile
INFO  20:49:39,314 - 5 na liniji 9
INFO  20:49:39,314 - 5 na liniji 9
INFO  20:49:39,314 - usao condTermOne na liniji 9
INFO  20:49:39,314 - 5 na liniji 9
INFO  20:49:39,314 - usaoCondTermMany na liniji 9
INFO  20:49:39,314 - 5 na liniji 9
INFO  20:49:39,314 - 5 na liniji 9
INFO  20:49:39,314 - usao condOne na liniji 9
INFO  20:49:39,314 - 5 na liniji 9
INFO  20:49:39,314 - izaasaoWhile na liniji 9
INFO  20:49:39,314 - usaoForeach
INFO  20:49:39,314 - izasaoForEach na liniji 17
ERROR 20:49:39,314 - Greska: Ident se ne poklapa se elementima niza!StatementForEach na liniji 17
INFO  20:49:49,470 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:49:49,494 - #2 program
INFO  20:49:49,495 - #42 MJProgram
INFO  20:49:49,495 - #3 const
INFO  20:49:49,495 - #42 bool
INFO  20:49:49,495 - #42 b
INFO  20:49:49,496 - #11 =
INFO  20:49:49,496 - #43 true
INFO  20:49:49,496 - #6 ;
INFO  20:49:49,496 - #4 {
INFO  20:49:49,497 - #17 void
INFO  20:49:49,497 - #42 main
INFO  20:49:49,497 - #7 (
INFO  20:49:49,497 - #42 bool
INFO  20:49:49,497 - #42 a
INFO  20:49:49,497 - #8 )
INFO  20:49:49,497 - #42 int
INFO  20:49:49,497 - #42 x
INFO  20:49:49,497 - #6 ;
INFO  20:49:49,498 - #42 bool
INFO  20:49:49,498 - #42 b
INFO  20:49:49,498 - #6 ;
INFO  20:49:49,498 - #42 int
INFO  20:49:49,498 - #42 xx
INFO  20:49:49,498 - #10 [
INFO  20:49:49,498 - #9 ]
INFO  20:49:49,498 - #6 ;
INFO  20:49:49,498 - #4 {
INFO  20:49:49,499 - #33 while
INFO  20:49:49,499 - #7 (
INFO  20:49:49,499 - #42 a
INFO  20:49:49,499 - #31 &&
INFO  20:49:49,500 - #42 b
INFO  20:49:49,500 - #8 )
INFO  20:49:49,500 - #4 {
INFO  20:49:49,501 - #42 x
INFO  20:49:49,501 - #11 =
INFO  20:49:49,501 - #41 1
INFO  20:49:49,501 - #6 ;
INFO  20:49:49,501 - #42 x
INFO  20:49:49,501 - #11 =
INFO  20:49:49,501 - #41 2
INFO  20:49:49,501 - #6 ;
INFO  20:49:49,501 - #5 }
INFO  20:49:49,501 - #42 xx
INFO  20:49:49,502 - #11 =
INFO  20:49:49,502 - #19 new
INFO  20:49:49,502 - #42 int
INFO  20:49:49,502 - #10 [
INFO  20:49:49,502 - #41 3
INFO  20:49:49,502 - #9 ]
INFO  20:49:49,502 - #6 ;
INFO  20:49:49,502 - #42 xx
INFO  20:49:49,502 - #18 .
INFO  20:49:49,503 - #29 foreach
INFO  20:49:49,503 - #7 (
INFO  20:49:49,503 - #42 x
INFO  20:49:49,503 - #20 =>
INFO  20:49:49,503 - #4 {
INFO  20:49:49,503 - #42 x
INFO  20:49:49,503 - #11 =
INFO  20:49:49,503 - #41 1
INFO  20:49:49,503 - #6 ;
INFO  20:49:49,503 - #42 x
INFO  20:49:49,503 - #11 =
INFO  20:49:49,503 - #41 2
INFO  20:49:49,503 - #6 ;
INFO  20:49:49,503 - #30 break
INFO  20:49:49,504 - #6 ;
INFO  20:49:49,504 - #28 continue
INFO  20:49:49,505 - #6 ;
INFO  20:49:49,505 - #5 }
INFO  20:49:49,505 - #8 )
INFO  20:49:49,505 - #6 ;
INFO  20:49:49,505 - #5 }
INFO  20:49:49,505 - #5 }
INFO  20:49:49,511 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   x
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 b
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               xx
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementOne(
            StatementWhile(
              WhileBegin(
              ) [WhileBegin]
              ConditionOne(
                CondTermMany(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             a
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                  CondTermOne(
                    CondFactOne(
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorDesActPar(
                              Designator(
                               b
                                NoAddOns(
                                ) [NoAddOns]
                              ) [Designator]
                              OptActParsNone(
                              ) [OptActParsNone]
                            ) [FactorDesActPar]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondTermMany]
              ) [ConditionOne]
              StatementStatement(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
              ) [StatementStatement]
            ) [StatementWhile]
          ) [StatementOne]
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               xx
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNewExpr(
                      Type(
                       int
                      ) [Type]
                      FactorNew(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               3
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [FactorNew]
                    ) [FactorNewExpr]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementForEach(
          Designator(
           xx
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         x
          StatementStatement(
            StatementsMany(
              StatementsMany(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
                StatementBreak(
                ) [StatementBreak]
              ) [StatementsMany]
              StatementContinue(
              ) [StatementContinue]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:49:49,511 - ===================================
INFO  20:49:49,513 - Obradjuje se funckijamain na liniji 4
INFO  20:49:49,513 - Hello Var a na liniji 4
INFO  20:49:49,514 - Hello Var x na liniji 5
INFO  20:49:49,514 - Hello Var b na liniji 6
INFO  20:49:49,514 - Hello Var xx na liniji 7
INFO  20:49:49,514 - usaoWhile
INFO  20:49:49,514 - 5 na liniji 9
INFO  20:49:49,514 - 5 na liniji 9
INFO  20:49:49,514 - usao condTermOne na liniji 9
INFO  20:49:49,514 - 5 na liniji 9
INFO  20:49:49,514 - usaoCondTermMany na liniji 9
INFO  20:49:49,514 - 5 na liniji 9
INFO  20:49:49,514 - 5 na liniji 9
INFO  20:49:49,514 - usao condOne na liniji 9
INFO  20:49:49,514 - 5 na liniji 9
INFO  20:49:49,515 - izaasaoWhile na liniji 9
INFO  20:49:49,515 - usaoForeach
INFO  20:49:49,515 - izasaoForEach na liniji 17
INFO  20:50:01,376 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:50:01,400 - #2 program
INFO  20:50:01,400 - #42 MJProgram
INFO  20:50:01,400 - #3 const
INFO  20:50:01,401 - #42 bool
INFO  20:50:01,401 - #42 b
INFO  20:50:01,401 - #11 =
INFO  20:50:01,401 - #43 true
INFO  20:50:01,401 - #6 ;
INFO  20:50:01,402 - #4 {
INFO  20:50:01,402 - #17 void
INFO  20:50:01,402 - #42 main
INFO  20:50:01,402 - #7 (
INFO  20:50:01,402 - #42 bool
INFO  20:50:01,402 - #42 a
INFO  20:50:01,402 - #8 )
INFO  20:50:01,403 - #42 int
INFO  20:50:01,403 - #42 x
INFO  20:50:01,403 - #6 ;
INFO  20:50:01,403 - #42 bool
INFO  20:50:01,403 - #42 b
INFO  20:50:01,403 - #6 ;
INFO  20:50:01,403 - #42 int
INFO  20:50:01,404 - #42 xx
INFO  20:50:01,404 - #10 [
INFO  20:50:01,404 - #9 ]
INFO  20:50:01,404 - #6 ;
INFO  20:50:01,404 - #4 {
INFO  20:50:01,404 - #33 while
INFO  20:50:01,404 - #7 (
INFO  20:50:01,404 - #42 a
INFO  20:50:01,404 - #31 &&
INFO  20:50:01,405 - #42 b
INFO  20:50:01,405 - #8 )
INFO  20:50:01,406 - #4 {
INFO  20:50:01,406 - #42 x
INFO  20:50:01,406 - #11 =
INFO  20:50:01,406 - #41 1
INFO  20:50:01,406 - #6 ;
INFO  20:50:01,406 - #42 x
INFO  20:50:01,406 - #11 =
INFO  20:50:01,406 - #41 2
INFO  20:50:01,406 - #6 ;
INFO  20:50:01,407 - #5 }
INFO  20:50:01,407 - #42 xx
INFO  20:50:01,407 - #11 =
INFO  20:50:01,407 - #19 new
INFO  20:50:01,407 - #42 bool
INFO  20:50:01,407 - #10 [
INFO  20:50:01,407 - #41 3
INFO  20:50:01,407 - #9 ]
INFO  20:50:01,407 - #6 ;
INFO  20:50:01,408 - #42 xx
INFO  20:50:01,408 - #18 .
INFO  20:50:01,408 - #29 foreach
INFO  20:50:01,408 - #7 (
INFO  20:50:01,408 - #42 x
INFO  20:50:01,408 - #20 =>
INFO  20:50:01,408 - #4 {
INFO  20:50:01,409 - #42 x
INFO  20:50:01,409 - #11 =
INFO  20:50:01,409 - #41 1
INFO  20:50:01,409 - #6 ;
INFO  20:50:01,409 - #42 x
INFO  20:50:01,409 - #11 =
INFO  20:50:01,409 - #41 2
INFO  20:50:01,409 - #6 ;
INFO  20:50:01,409 - #30 break
INFO  20:50:01,409 - #6 ;
INFO  20:50:01,409 - #28 continue
INFO  20:50:01,410 - #6 ;
INFO  20:50:01,410 - #5 }
INFO  20:50:01,411 - #8 )
INFO  20:50:01,411 - #6 ;
INFO  20:50:01,411 - #5 }
INFO  20:50:01,411 - #5 }
INFO  20:50:01,417 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   x
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 b
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               xx
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementOne(
            StatementWhile(
              WhileBegin(
              ) [WhileBegin]
              ConditionOne(
                CondTermMany(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             a
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                  CondTermOne(
                    CondFactOne(
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorDesActPar(
                              Designator(
                               b
                                NoAddOns(
                                ) [NoAddOns]
                              ) [Designator]
                              OptActParsNone(
                              ) [OptActParsNone]
                            ) [FactorDesActPar]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondTermMany]
              ) [ConditionOne]
              StatementStatement(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
              ) [StatementStatement]
            ) [StatementWhile]
          ) [StatementOne]
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               xx
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNewExpr(
                      Type(
                       bool
                      ) [Type]
                      FactorNew(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               3
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [FactorNew]
                    ) [FactorNewExpr]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementForEach(
          Designator(
           xx
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         x
          StatementStatement(
            StatementsMany(
              StatementsMany(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
                StatementBreak(
                ) [StatementBreak]
              ) [StatementsMany]
              StatementContinue(
              ) [StatementContinue]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:50:01,418 - ===================================
INFO  20:50:01,420 - Obradjuje se funckijamain na liniji 4
INFO  20:50:01,420 - Hello Var a na liniji 4
INFO  20:50:01,421 - Hello Var x na liniji 5
INFO  20:50:01,421 - Hello Var b na liniji 6
INFO  20:50:01,421 - Hello Var xx na liniji 7
INFO  20:50:01,421 - usaoWhile
INFO  20:50:01,421 - 5 na liniji 9
INFO  20:50:01,421 - 5 na liniji 9
INFO  20:50:01,421 - usao condTermOne na liniji 9
INFO  20:50:01,421 - 5 na liniji 9
INFO  20:50:01,421 - usaoCondTermMany na liniji 9
INFO  20:50:01,421 - 5 na liniji 9
INFO  20:50:01,421 - 5 na liniji 9
INFO  20:50:01,421 - usao condOne na liniji 9
INFO  20:50:01,421 - 5 na liniji 9
INFO  20:50:01,421 - izaasaoWhile na liniji 9
ERROR 20:50:01,421 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 15
INFO  20:50:01,421 - usaoForeach
INFO  20:50:01,422 - izasaoForEach na liniji 17
INFO  20:50:15,536 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:50:15,559 - #2 program
INFO  20:50:15,559 - #42 MJProgram
INFO  20:50:15,559 - #3 const
INFO  20:50:15,560 - #42 bool
INFO  20:50:15,560 - #42 b
INFO  20:50:15,560 - #11 =
INFO  20:50:15,560 - #43 true
INFO  20:50:15,560 - #6 ;
INFO  20:50:15,561 - #4 {
INFO  20:50:15,561 - #17 void
INFO  20:50:15,561 - #42 main
INFO  20:50:15,561 - #7 (
INFO  20:50:15,562 - #42 bool
INFO  20:50:15,562 - #42 a
INFO  20:50:15,562 - #8 )
INFO  20:50:15,562 - #42 int
INFO  20:50:15,562 - #42 x
INFO  20:50:15,562 - #6 ;
INFO  20:50:15,562 - #42 bool
INFO  20:50:15,563 - #42 b
INFO  20:50:15,563 - #6 ;
INFO  20:50:15,563 - #42 int
INFO  20:50:15,563 - #42 xx
INFO  20:50:15,563 - #10 [
INFO  20:50:15,563 - #9 ]
INFO  20:50:15,563 - #6 ;
INFO  20:50:15,563 - #4 {
INFO  20:50:15,563 - #33 while
INFO  20:50:15,563 - #7 (
INFO  20:50:15,563 - #42 a
INFO  20:50:15,563 - #31 &&
INFO  20:50:15,565 - #42 b
INFO  20:50:15,565 - #8 )
INFO  20:50:15,565 - #4 {
INFO  20:50:15,565 - #42 x
INFO  20:50:15,565 - #11 =
INFO  20:50:15,565 - #41 1
INFO  20:50:15,565 - #6 ;
INFO  20:50:15,565 - #42 x
INFO  20:50:15,566 - #11 =
INFO  20:50:15,566 - #41 2
INFO  20:50:15,566 - #6 ;
INFO  20:50:15,566 - #5 }
INFO  20:50:15,566 - #42 xx
INFO  20:50:15,566 - #11 =
INFO  20:50:15,566 - #19 new
INFO  20:50:15,566 - #42 int
INFO  20:50:15,566 - #10 [
INFO  20:50:15,566 - #41 3
INFO  20:50:15,566 - #38 *
INFO  20:50:15,566 - #41 3
INFO  20:50:15,567 - #9 ]
INFO  20:50:15,567 - #6 ;
INFO  20:50:15,568 - #42 xx
INFO  20:50:15,568 - #18 .
INFO  20:50:15,568 - #29 foreach
INFO  20:50:15,568 - #7 (
INFO  20:50:15,568 - #42 x
INFO  20:50:15,568 - #20 =>
INFO  20:50:15,568 - #4 {
INFO  20:50:15,568 - #42 x
INFO  20:50:15,568 - #11 =
INFO  20:50:15,568 - #41 1
INFO  20:50:15,569 - #6 ;
INFO  20:50:15,569 - #42 x
INFO  20:50:15,569 - #11 =
INFO  20:50:15,569 - #41 2
INFO  20:50:15,569 - #6 ;
INFO  20:50:15,569 - #30 break
INFO  20:50:15,569 - #6 ;
INFO  20:50:15,569 - #28 continue
INFO  20:50:15,569 - #6 ;
INFO  20:50:15,569 - #5 }
INFO  20:50:15,570 - #8 )
INFO  20:50:15,570 - #6 ;
INFO  20:50:15,570 - #5 }
INFO  20:50:15,570 - #5 }
INFO  20:50:15,577 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsOne(
        FormParElem(
          Type(
           bool
          ) [Type]
         a
        ) [FormParElem]
      ) [FormParamsOne]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   x
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 b
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               xx
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementOne(
            StatementWhile(
              WhileBegin(
              ) [WhileBegin]
              ConditionOne(
                CondTermMany(
                  CondFactOne(
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             a
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActParsNone(
                            ) [OptActParsNone]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [CondFactOne]
                  CondTermOne(
                    CondFactOne(
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorDesActPar(
                              Designator(
                               b
                                NoAddOns(
                                ) [NoAddOns]
                              ) [Designator]
                              OptActParsNone(
                              ) [OptActParsNone]
                            ) [FactorDesActPar]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondTermMany]
              ) [ConditionOne]
              StatementStatement(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
              ) [StatementStatement]
            ) [StatementWhile]
          ) [StatementOne]
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               xx
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNewExpr(
                      Type(
                       int
                      ) [Type]
                      FactorNew(
                        ExprNormal(
                          ExprOne(
                            TermMany(
                              TermOne(
                                FactorNumber(
                                 3
                                ) [FactorNumber]
                              ) [TermOne]
                              MulopM(
                              ) [MulopM]
                              FactorNumber(
                               3
                              ) [FactorNumber]
                            ) [TermMany]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [FactorNew]
                    ) [FactorNewExpr]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementForEach(
          Designator(
           xx
            NoAddOns(
            ) [NoAddOns]
          ) [Designator]
          ForEachBegin(
          ) [ForEachBegin]
         x
          StatementStatement(
            StatementsMany(
              StatementsMany(
                StatementsMany(
                  StatementOne(
                    StatementDesignator(
                      DesignatorStatementIs(
                        Designator(
                         x
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorStatementIs]
                    ) [StatementDesignator]
                  ) [StatementOne]
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       x
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementsMany]
                StatementBreak(
                ) [StatementBreak]
              ) [StatementsMany]
              StatementContinue(
              ) [StatementContinue]
            ) [StatementsMany]
          ) [StatementStatement]
        ) [StatementForEach]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:50:15,577 - ===================================
INFO  20:50:15,580 - Obradjuje se funckijamain na liniji 4
INFO  20:50:15,580 - Hello Var a na liniji 4
INFO  20:50:15,580 - Hello Var x na liniji 5
INFO  20:50:15,580 - Hello Var b na liniji 6
INFO  20:50:15,580 - Hello Var xx na liniji 7
INFO  20:50:15,580 - usaoWhile
INFO  20:50:15,580 - 5 na liniji 9
INFO  20:50:15,581 - 5 na liniji 9
INFO  20:50:15,581 - usao condTermOne na liniji 9
INFO  20:50:15,581 - 5 na liniji 9
INFO  20:50:15,581 - usaoCondTermMany na liniji 9
INFO  20:50:15,581 - 5 na liniji 9
INFO  20:50:15,581 - 5 na liniji 9
INFO  20:50:15,581 - usao condOne na liniji 9
INFO  20:50:15,581 - 5 na liniji 9
INFO  20:50:15,581 - izaasaoWhile na liniji 9
INFO  20:50:15,581 - usaoForeach
INFO  20:50:15,581 - izasaoForEach na liniji 17
INFO  20:55:46,147 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:55:46,152 - #2 program
INFO  20:55:46,152 - #42 MJProgram
INFO  20:55:46,152 - #3 const
INFO  20:56:04,325 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:56:04,347 - #2 program
INFO  20:56:04,347 - #42 MJProgram
INFO  20:56:04,347 - #3 const
INFO  20:56:04,348 - #42 bool
INFO  20:56:04,348 - #42 b
INFO  20:56:04,348 - #11 =
INFO  20:56:04,348 - #43 true
INFO  20:56:04,348 - #6 ;
INFO  20:56:04,349 - #4 {
INFO  20:56:04,349 - #42 int
INFO  20:56:04,349 - #42 main
INFO  20:56:04,349 - #7 (
INFO  20:56:04,350 - #42 int
INFO  20:56:04,350 - #42 a
INFO  20:56:04,350 - #15 ,
INFO  20:56:04,350 - #42 char
INFO  20:56:04,350 - #42 b
INFO  20:56:04,350 - #15 ,
INFO  20:56:04,350 - #42 bool
INFO  20:56:04,350 - #42 c
INFO  20:56:04,350 - #8 )
INFO  20:56:04,350 - #42 int
INFO  20:56:04,350 - #42 x
INFO  20:56:04,350 - #6 ;
INFO  20:56:04,351 - #4 {
INFO  20:56:04,351 - #12 return
INFO  20:56:04,351 - #41 1
INFO  20:56:04,351 - #6 ;
INFO  20:56:04,352 - #5 }
INFO  20:56:04,352 - #5 }
INFO  20:56:04,356 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListOne(
    MethodDecl(
      MethodTypeNameType(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeNameType]
      FormParamsMany(
        FormParamsMany(
          FormParamsOne(
            FormParElem(
              Type(
               int
              ) [Type]
             a
            ) [FormParElem]
          ) [FormParamsOne]
          FormParElem(
            Type(
             char
            ) [Type]
           b
          ) [FormParElem]
        ) [FormParamsMany]
        FormParElem(
          Type(
           bool
          ) [Type]
         c
        ) [FormParElem]
      ) [FormParamsMany]
      DeclarationList(
        NoDeclarationList(
        ) [NoDeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementReturnExpr(
          ExprNormal(
            ExprOne(
              TermOne(
                FactorNumber(
                 1
                ) [FactorNumber]
              ) [TermOne]
            ) [ExprOne]
          ) [ExprNormal]
        ) [StatementReturnExpr]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListOne]
) [Program]
INFO  20:56:04,357 - ===================================
INFO  20:56:04,359 - Obradjuje se funckijamain na liniji 4
INFO  20:56:04,359 - Hello Var a na liniji 4
INFO  20:56:04,359 - Hello Var b na liniji 4
INFO  20:56:04,359 - Hello Var c na liniji 4
INFO  20:56:04,359 - Hello Var x na liniji 5
INFO  20:57:17,307 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:57:17,329 - #2 program
INFO  20:57:17,329 - #42 MJProgram
INFO  20:57:17,329 - #3 const
INFO  20:57:17,330 - #42 bool
INFO  20:57:17,330 - #42 b
INFO  20:57:17,330 - #11 =
INFO  20:57:17,330 - #43 true
INFO  20:57:17,331 - #6 ;
INFO  20:57:17,331 - #4 {
INFO  20:57:17,332 - #17 void
INFO  20:57:17,332 - #42 func
INFO  20:57:17,332 - #7 (
INFO  20:57:17,332 - #8 )
INFO  20:57:17,332 - #42 int
INFO  20:57:17,332 - #42 y
INFO  20:57:17,332 - #6 ;
INFO  20:57:17,332 - #4 {
INFO  20:57:17,333 - #42 y
INFO  20:57:17,333 - #11 =
INFO  20:57:17,333 - #42 main
INFO  20:57:17,334 - #7 (
INFO  20:57:17,334 - #42 a
INFO  20:57:17,334 - #15 ,
ERROR 20:57:17,334 - 
Sintaksna greska na liniji 9
ERROR 20:57:17,334 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 9
INFO  20:57:47,901 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  20:57:47,924 - #2 program
INFO  20:57:47,924 - #42 MJProgram
INFO  20:57:47,924 - #3 const
INFO  20:57:47,925 - #42 bool
INFO  20:57:47,925 - #42 b
INFO  20:57:47,925 - #11 =
INFO  20:57:47,925 - #43 true
INFO  20:57:47,925 - #6 ;
INFO  20:57:47,926 - #4 {
INFO  20:57:47,927 - #17 void
INFO  20:57:47,927 - #42 func
INFO  20:57:47,927 - #7 (
INFO  20:57:47,927 - #8 )
INFO  20:57:47,927 - #42 int
INFO  20:57:47,927 - #42 y
INFO  20:57:47,927 - #6 ;
INFO  20:57:47,927 - #4 {
INFO  20:57:47,928 - #42 y
INFO  20:57:47,928 - #11 =
INFO  20:57:47,928 - #42 main
INFO  20:57:47,928 - #7 (
INFO  20:57:47,929 - #41 1
INFO  20:57:47,929 - #15 ,
INFO  20:57:47,929 - #44 c
INFO  20:57:47,929 - #15 ,
INFO  20:57:47,930 - #43 true
INFO  20:57:47,930 - #8 )
INFO  20:57:47,930 - #6 ;
INFO  20:57:47,930 - #5 }
INFO  20:57:47,931 - #42 int
INFO  20:57:47,931 - #42 main
INFO  20:57:47,931 - #7 (
INFO  20:57:47,931 - #42 int
INFO  20:57:47,931 - #42 a
INFO  20:57:47,931 - #15 ,
INFO  20:57:47,932 - #42 char
INFO  20:57:47,932 - #42 b
INFO  20:57:47,932 - #15 ,
INFO  20:57:47,932 - #42 bool
INFO  20:57:47,932 - #42 c
INFO  20:57:47,932 - #8 )
INFO  20:57:47,932 - #42 int
INFO  20:57:47,932 - #42 x
INFO  20:57:47,932 - #6 ;
INFO  20:57:47,932 - #4 {
INFO  20:57:47,932 - #12 return
INFO  20:57:47,932 - #41 1
INFO  20:57:47,932 - #6 ;
INFO  20:57:47,932 - #5 }
INFO  20:57:47,932 - #5 }
INFO  20:57:47,939 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameVoid(
         func
        ) [MethodTypeNameVoid]
        FormParamsNone(
        ) [FormParamsNone]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               y
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorDesActPar(
                      Designator(
                       main
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      OptActPars(
                        ActParsHas(
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                          ActParsAddOnMany(
                            ActParsAddOnMany(
                              ActParsAddOnNone(
                              ) [ActParsAddOnNone]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorBool(
                                   true
                                  ) [FactorBool]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                        ) [ActParsHas]
                      ) [OptActPars]
                    ) [FactorDesActPar]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameType(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeNameType]
      FormParamsMany(
        FormParamsMany(
          FormParamsOne(
            FormParElem(
              Type(
               int
              ) [Type]
             a
            ) [FormParElem]
          ) [FormParamsOne]
          FormParElem(
            Type(
             char
            ) [Type]
           b
          ) [FormParElem]
        ) [FormParamsMany]
        FormParElem(
          Type(
           bool
          ) [Type]
         c
        ) [FormParElem]
      ) [FormParamsMany]
      DeclarationList(
        NoDeclarationList(
        ) [NoDeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementReturnExpr(
          ExprNormal(
            ExprOne(
              TermOne(
                FactorNumber(
                 1
                ) [FactorNumber]
              ) [TermOne]
            ) [ExprOne]
          ) [ExprNormal]
        ) [StatementReturnExpr]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  20:57:47,940 - ===================================
INFO  20:57:47,943 - Obradjuje se funckijafunc na liniji 5
INFO  20:57:47,943 - Hello Var y na liniji 6
ERROR 20:57:47,943 - Greska: Nije deklarisana promenljiva!Designator na liniji 9
INFO  21:05:04,552 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  21:05:04,575 - #2 program
INFO  21:05:04,575 - #42 MJProgram
INFO  21:05:04,575 - #3 const
INFO  21:05:04,576 - #42 bool
INFO  21:05:04,576 - #42 b
INFO  21:05:04,576 - #11 =
INFO  21:05:04,576 - #43 true
INFO  21:05:04,576 - #6 ;
INFO  21:05:04,577 - #4 {
INFO  21:05:04,577 - #17 void
INFO  21:05:04,577 - #42 func
INFO  21:05:04,577 - #7 (
INFO  21:05:04,577 - #8 )
INFO  21:05:04,578 - #42 int
INFO  21:05:04,578 - #42 y
INFO  21:05:04,578 - #6 ;
INFO  21:05:04,578 - #4 {
INFO  21:05:04,578 - #42 y
INFO  21:05:04,578 - #11 =
INFO  21:05:04,579 - #42 main
INFO  21:05:04,579 - #7 (
INFO  21:05:04,579 - #41 1
INFO  21:05:04,579 - #15 ,
INFO  21:05:04,580 - #44 c
INFO  21:05:04,580 - #15 ,
INFO  21:05:04,580 - #43 true
INFO  21:05:04,580 - #8 )
INFO  21:05:04,581 - #6 ;
INFO  21:05:04,581 - #5 }
INFO  21:05:04,581 - #42 int
INFO  21:05:04,582 - #42 main
INFO  21:05:04,582 - #7 (
INFO  21:05:04,582 - #42 int
INFO  21:05:04,582 - #42 a
INFO  21:05:04,582 - #15 ,
INFO  21:05:04,582 - #42 char
INFO  21:05:04,582 - #42 b
INFO  21:05:04,582 - #15 ,
INFO  21:05:04,583 - #42 bool
INFO  21:05:04,583 - #42 c
INFO  21:05:04,583 - #8 )
INFO  21:05:04,583 - #42 int
INFO  21:05:04,583 - #42 x
INFO  21:05:04,583 - #6 ;
INFO  21:05:04,583 - #4 {
INFO  21:05:04,583 - #12 return
INFO  21:05:04,583 - #41 1
INFO  21:05:04,583 - #6 ;
INFO  21:05:04,583 - #5 }
INFO  21:05:04,583 - #5 }
INFO  21:05:04,590 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameVoid(
         func
        ) [MethodTypeNameVoid]
        FormParamsNone(
        ) [FormParamsNone]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               y
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorDesActPar(
                      Designator(
                       main
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      OptActPars(
                        ActParsHas(
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                          ActParsAddOnMany(
                            ActParsAddOnMany(
                              ActParsAddOnNone(
                              ) [ActParsAddOnNone]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorBool(
                                   true
                                  ) [FactorBool]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                        ) [ActParsHas]
                      ) [OptActPars]
                    ) [FactorDesActPar]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameType(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeNameType]
      FormParamsMany(
        FormParamsMany(
          FormParamsOne(
            FormParElem(
              Type(
               int
              ) [Type]
             a
            ) [FormParElem]
          ) [FormParamsOne]
          FormParElem(
            Type(
             char
            ) [Type]
           b
          ) [FormParElem]
        ) [FormParamsMany]
        FormParElem(
          Type(
           bool
          ) [Type]
         c
        ) [FormParElem]
      ) [FormParamsMany]
      DeclarationList(
        NoDeclarationList(
        ) [NoDeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementReturnExpr(
          ExprNormal(
            ExprOne(
              TermOne(
                FactorNumber(
                 1
                ) [FactorNumber]
              ) [TermOne]
            ) [ExprOne]
          ) [ExprNormal]
        ) [StatementReturnExpr]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  21:05:04,591 - ===================================
INFO  21:05:04,594 - Obradjuje se funckijafunc na liniji 5
INFO  21:05:04,594 - Hello Var y na liniji 6
ERROR 21:05:04,594 - Greska: Nije deklarisana promenljiva!Designator na liniji 9
INFO  21:14:30,537 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  21:14:30,560 - #2 program
INFO  21:14:30,560 - #42 MJProgram
INFO  21:14:30,561 - #3 const
INFO  21:14:30,561 - #42 bool
INFO  21:14:30,561 - #42 b
INFO  21:14:30,562 - #11 =
INFO  21:14:30,562 - #43 true
INFO  21:14:30,562 - #6 ;
INFO  21:14:30,562 - #4 {
INFO  21:14:30,563 - #17 void
INFO  21:14:30,563 - #42 func
INFO  21:14:30,563 - #7 (
INFO  21:14:30,563 - #8 )
INFO  21:14:30,563 - #42 int
INFO  21:14:30,563 - #42 y
INFO  21:14:30,563 - #6 ;
INFO  21:14:30,564 - #4 {
INFO  21:14:30,564 - #42 y
INFO  21:14:30,564 - #11 =
INFO  21:14:30,565 - #42 main
INFO  21:14:30,565 - #7 (
INFO  21:14:30,565 - #41 1
INFO  21:14:30,565 - #15 ,
INFO  21:14:30,566 - #44 c
INFO  21:14:30,566 - #15 ,
INFO  21:14:30,566 - #43 true
INFO  21:14:30,566 - #8 )
INFO  21:14:30,566 - #6 ;
INFO  21:14:30,567 - #5 }
INFO  21:14:30,567 - #42 int
INFO  21:14:30,567 - #42 main
INFO  21:14:30,567 - #7 (
INFO  21:14:30,568 - #42 int
INFO  21:14:30,568 - #42 a
INFO  21:14:30,568 - #15 ,
INFO  21:14:30,568 - #42 char
INFO  21:14:30,568 - #42 b
INFO  21:14:30,568 - #15 ,
INFO  21:14:30,568 - #42 bool
INFO  21:14:30,568 - #42 c
INFO  21:14:30,568 - #8 )
INFO  21:14:30,568 - #42 int
INFO  21:14:30,568 - #42 x
INFO  21:14:30,568 - #6 ;
INFO  21:14:30,568 - #4 {
INFO  21:14:30,568 - #12 return
INFO  21:14:30,569 - #41 1
INFO  21:14:30,569 - #6 ;
INFO  21:14:30,569 - #5 }
INFO  21:14:30,569 - #5 }
INFO  21:14:30,576 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameVoid(
         func
        ) [MethodTypeNameVoid]
        FormParamsNone(
        ) [FormParamsNone]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               y
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorDesActPar(
                      Designator(
                       main
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      OptActPars(
                        ActParsHas(
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                          ActParsAddOnMany(
                            ActParsAddOnMany(
                              ActParsAddOnNone(
                              ) [ActParsAddOnNone]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorBool(
                                   true
                                  ) [FactorBool]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                        ) [ActParsHas]
                      ) [OptActPars]
                    ) [FactorDesActPar]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameType(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeNameType]
      FormParamsMany(
        FormParamsMany(
          FormParamsOne(
            FormParElem(
              Type(
               int
              ) [Type]
             a
            ) [FormParElem]
          ) [FormParamsOne]
          FormParElem(
            Type(
             char
            ) [Type]
           b
          ) [FormParElem]
        ) [FormParamsMany]
        FormParElem(
          Type(
           bool
          ) [Type]
         c
        ) [FormParElem]
      ) [FormParamsMany]
      DeclarationList(
        NoDeclarationList(
        ) [NoDeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementReturnExpr(
          ExprNormal(
            ExprOne(
              TermOne(
                FactorNumber(
                 1
                ) [FactorNumber]
              ) [TermOne]
            ) [ExprOne]
          ) [ExprNormal]
        ) [StatementReturnExpr]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  21:14:30,576 - ===================================
INFO  21:14:30,580 - Obradjuje se funckijafunc na liniji 5
INFO  21:14:30,580 - Hello Var y na liniji 6
ERROR 21:14:30,580 - Greska: Nije deklarisana promenljiva!Designator na liniji 9
ERROR 21:14:30,581 - Greska: Ne postoji! FactorDesActPar na liniji 9
INFO  21:14:50,677 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  21:14:50,700 - #2 program
INFO  21:14:50,700 - #42 MJProgram
INFO  21:14:50,701 - #3 const
INFO  21:14:50,701 - #42 bool
INFO  21:14:50,701 - #42 b
INFO  21:14:50,702 - #11 =
INFO  21:14:50,702 - #43 true
INFO  21:14:50,702 - #6 ;
INFO  21:14:50,702 - #4 {
INFO  21:14:50,703 - #42 int
INFO  21:14:50,703 - #42 main
INFO  21:14:50,703 - #7 (
INFO  21:14:50,703 - #42 int
INFO  21:14:50,703 - #42 a
INFO  21:14:50,703 - #15 ,
INFO  21:14:50,703 - #42 char
INFO  21:14:50,703 - #42 b
INFO  21:14:50,703 - #15 ,
INFO  21:14:50,704 - #42 bool
INFO  21:14:50,704 - #42 c
INFO  21:14:50,704 - #8 )
INFO  21:14:50,704 - #42 int
INFO  21:14:50,704 - #42 x
INFO  21:14:50,704 - #6 ;
INFO  21:14:50,704 - #4 {
INFO  21:14:50,705 - #12 return
INFO  21:14:50,705 - #41 1
INFO  21:14:50,705 - #6 ;
INFO  21:14:50,705 - #5 }
INFO  21:14:50,705 - #17 void
INFO  21:14:50,706 - #42 func
INFO  21:14:50,706 - #7 (
INFO  21:14:50,706 - #8 )
INFO  21:14:50,706 - #42 int
INFO  21:14:50,706 - #42 y
INFO  21:14:50,706 - #6 ;
INFO  21:14:50,706 - #4 {
INFO  21:14:50,706 - #42 y
INFO  21:14:50,706 - #11 =
INFO  21:14:50,707 - #42 main
INFO  21:14:50,707 - #7 (
INFO  21:14:50,707 - #41 1
INFO  21:14:50,707 - #15 ,
INFO  21:14:50,708 - #44 c
INFO  21:14:50,708 - #15 ,
INFO  21:14:50,708 - #43 true
INFO  21:14:50,708 - #8 )
INFO  21:14:50,708 - #6 ;
INFO  21:14:50,709 - #5 }
INFO  21:14:50,709 - #5 }
INFO  21:14:50,717 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        NoDeclarationList(
        ) [NoDeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               y
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  21:14:50,717 - ===================================
INFO  21:14:50,720 - Obradjuje se funckijamain na liniji 6
INFO  21:14:50,720 - Hello Var a na liniji 6
INFO  21:14:50,720 - Hello Var b na liniji 6
INFO  21:14:50,720 - Hello Var c na liniji 6
INFO  21:14:50,720 - Hello Var x na liniji 7
INFO  21:14:50,720 - Obradjuje se funckijafunc na liniji 12
INFO  21:14:50,721 - Hello Var y na liniji 13
ERROR 21:14:50,721 - Pogresna povratna vrednost! na liniji 12
INFO  21:15:06,956 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  21:15:06,980 - #2 program
INFO  21:15:06,980 - #42 MJProgram
INFO  21:15:06,980 - #3 const
INFO  21:15:06,980 - #42 bool
INFO  21:15:06,980 - #42 b
INFO  21:15:06,981 - #11 =
INFO  21:15:06,981 - #43 true
INFO  21:15:06,981 - #6 ;
INFO  21:15:06,981 - #4 {
INFO  21:15:06,982 - #42 int
INFO  21:15:06,982 - #42 main
INFO  21:15:06,982 - #7 (
INFO  21:15:06,982 - #42 int
INFO  21:15:06,982 - #42 a
INFO  21:15:06,982 - #15 ,
INFO  21:15:06,982 - #42 char
INFO  21:15:06,983 - #42 b
INFO  21:15:06,983 - #15 ,
INFO  21:15:06,983 - #42 bool
INFO  21:15:06,983 - #42 c
INFO  21:15:06,983 - #8 )
INFO  21:15:06,983 - #42 int
INFO  21:15:06,983 - #42 x
INFO  21:15:06,983 - #6 ;
INFO  21:15:06,983 - #4 {
INFO  21:15:06,984 - #12 return
INFO  21:15:06,984 - #41 1
INFO  21:15:06,984 - #6 ;
INFO  21:15:06,984 - #5 }
INFO  21:15:06,984 - #17 void
INFO  21:15:06,985 - #42 func
INFO  21:15:06,985 - #7 (
INFO  21:15:06,985 - #8 )
INFO  21:15:06,985 - #42 int
INFO  21:15:06,985 - #42 y
INFO  21:15:06,985 - #6 ;
INFO  21:15:06,986 - #4 {
INFO  21:15:06,986 - #42 y
INFO  21:15:06,986 - #11 =
INFO  21:15:06,986 - #42 x
INFO  21:15:06,986 - #7 (
INFO  21:15:06,986 - #41 1
INFO  21:15:06,986 - #15 ,
INFO  21:15:06,987 - #44 c
INFO  21:15:06,987 - #15 ,
INFO  21:15:06,987 - #43 true
INFO  21:15:06,987 - #8 )
INFO  21:15:06,987 - #6 ;
INFO  21:15:06,988 - #5 }
INFO  21:15:06,988 - #5 }
INFO  21:15:06,995 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        NoDeclarationList(
        ) [NoDeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               y
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementOne(
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementOne]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  21:15:06,995 - ===================================
INFO  21:15:06,998 - Obradjuje se funckijamain na liniji 6
INFO  21:15:06,998 - Hello Var a na liniji 6
INFO  21:15:06,999 - Hello Var b na liniji 6
INFO  21:15:06,999 - Hello Var c na liniji 6
INFO  21:15:06,999 - Hello Var x na liniji 7
INFO  21:15:06,999 - Obradjuje se funckijafunc na liniji 12
INFO  21:15:06,999 - Hello Var y na liniji 13
ERROR 21:15:06,999 - Greska: Nije deklarisana promenljiva!Designator na liniji 16
ERROR 21:15:06,999 - Greska: Ne postoji! FactorDesActPar na liniji 16
INFO  21:15:46,502 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  21:15:46,524 - #2 program
INFO  21:15:46,525 - #42 MJProgram
INFO  21:15:46,525 - #3 const
INFO  21:15:46,525 - #42 bool
INFO  21:15:46,525 - #42 b
INFO  21:15:46,526 - #11 =
INFO  21:15:46,526 - #43 true
INFO  21:15:46,526 - #6 ;
INFO  21:15:46,526 - #4 {
INFO  21:15:46,527 - #42 int
INFO  21:15:46,527 - #42 main
INFO  21:15:46,527 - #7 (
INFO  21:15:46,527 - #42 int
INFO  21:15:46,527 - #42 a
INFO  21:15:46,527 - #15 ,
INFO  21:15:46,527 - #42 char
INFO  21:15:46,527 - #42 b
INFO  21:15:46,527 - #15 ,
INFO  21:15:46,527 - #42 bool
INFO  21:15:46,528 - #42 c
INFO  21:15:46,528 - #8 )
INFO  21:15:46,528 - #42 int
INFO  21:15:46,528 - #42 x
INFO  21:15:46,528 - #6 ;
INFO  21:15:46,528 - #4 {
INFO  21:15:46,528 - #12 return
INFO  21:15:46,529 - #41 1
INFO  21:15:46,529 - #6 ;
INFO  21:15:46,529 - #5 }
INFO  21:15:46,529 - #17 void
INFO  21:15:46,530 - #42 func
INFO  21:15:46,530 - #7 (
INFO  21:15:46,530 - #8 )
INFO  21:15:46,530 - #42 int
INFO  21:15:46,530 - #42 y
INFO  21:15:46,530 - #6 ;
INFO  21:15:46,530 - #4 {
INFO  21:15:46,530 - #42 x
INFO  21:15:46,530 - #11 =
INFO  21:15:46,531 - #41 1
INFO  21:15:46,531 - #6 ;
INFO  21:15:46,531 - #42 y
INFO  21:15:46,531 - #11 =
INFO  21:15:46,531 - #42 x
INFO  21:15:46,531 - #7 (
INFO  21:15:46,531 - #41 1
INFO  21:15:46,531 - #15 ,
INFO  21:15:46,532 - #44 c
INFO  21:15:46,532 - #15 ,
INFO  21:15:46,532 - #43 true
INFO  21:15:46,532 - #8 )
INFO  21:15:46,533 - #6 ;
INFO  21:15:46,533 - #5 }
INFO  21:15:46,533 - #5 }
INFO  21:15:46,540 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 x
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        NoDeclarationList(
        ) [NoDeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               y
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  21:15:46,540 - ===================================
INFO  21:15:46,543 - Obradjuje se funckijamain na liniji 6
INFO  21:15:46,543 - Hello Var a na liniji 6
INFO  21:15:46,543 - Hello Var b na liniji 6
INFO  21:15:46,543 - Hello Var c na liniji 6
INFO  21:15:46,543 - Hello Var x na liniji 7
INFO  21:15:46,543 - Obradjuje se funckijafunc na liniji 12
INFO  21:15:46,544 - Hello Var y na liniji 13
ERROR 21:15:46,544 - Greska: Nije deklarisana promenljiva!Designator na liniji 15
INFO  21:16:07,367 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  21:16:07,389 - #2 program
INFO  21:16:07,389 - #42 MJProgram
INFO  21:16:07,389 - #3 const
INFO  21:16:07,390 - #42 bool
INFO  21:16:07,390 - #42 b
INFO  21:16:07,390 - #11 =
INFO  21:16:07,390 - #43 true
INFO  21:16:07,390 - #6 ;
INFO  21:16:07,391 - #4 {
INFO  21:16:07,391 - #42 int
INFO  21:16:07,391 - #42 main
INFO  21:16:07,391 - #7 (
INFO  21:16:07,391 - #42 int
INFO  21:16:07,392 - #42 a
INFO  21:16:07,392 - #15 ,
INFO  21:16:07,392 - #42 char
INFO  21:16:07,392 - #42 b
INFO  21:16:07,392 - #15 ,
INFO  21:16:07,392 - #42 bool
INFO  21:16:07,392 - #42 c
INFO  21:16:07,392 - #8 )
INFO  21:16:07,392 - #4 {
INFO  21:16:07,392 - #12 return
INFO  21:16:07,392 - #41 1
INFO  21:16:07,392 - #6 ;
INFO  21:16:07,393 - #5 }
INFO  21:16:07,393 - #17 void
INFO  21:16:07,394 - #42 func
INFO  21:16:07,394 - #7 (
INFO  21:16:07,394 - #8 )
INFO  21:16:07,394 - #42 int
INFO  21:16:07,394 - #42 y
INFO  21:16:07,394 - #6 ;
INFO  21:16:07,394 - #42 int
INFO  21:16:07,395 - #42 x
INFO  21:16:07,395 - #6 ;
INFO  21:16:07,395 - #4 {
INFO  21:16:07,395 - #42 x
INFO  21:16:07,395 - #11 =
INFO  21:16:07,395 - #41 1
INFO  21:16:07,395 - #6 ;
INFO  21:16:07,396 - #42 y
INFO  21:16:07,396 - #11 =
INFO  21:16:07,396 - #42 x
INFO  21:16:07,396 - #7 (
INFO  21:16:07,396 - #41 1
INFO  21:16:07,396 - #15 ,
INFO  21:16:07,397 - #44 c
INFO  21:16:07,397 - #15 ,
INFO  21:16:07,397 - #43 true
INFO  21:16:07,397 - #8 )
INFO  21:16:07,397 - #6 ;
INFO  21:16:07,398 - #5 }
INFO  21:16:07,398 - #5 }
INFO  21:16:07,404 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  21:16:07,405 - ===================================
INFO  21:16:07,407 - Obradjuje se funckijamain na liniji 6
INFO  21:16:07,407 - Hello Var a na liniji 6
INFO  21:16:07,407 - Hello Var b na liniji 6
INFO  21:16:07,408 - Hello Var c na liniji 6
INFO  21:16:07,408 - Obradjuje se funckijafunc na liniji 11
INFO  21:16:07,408 - Hello Var y na liniji 12
INFO  21:16:07,408 - Hello Var x na liniji 13
ERROR 21:16:07,408 - Pogresna povratna vrednost! na liniji 11
INFO  21:19:27,526 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  21:19:27,551 - #2 program
INFO  21:19:27,552 - #42 MJProgram
INFO  21:19:27,552 - #3 const
INFO  21:19:27,552 - #42 bool
INFO  21:19:27,552 - #42 b
INFO  21:19:27,553 - #11 =
INFO  21:19:27,553 - #43 true
INFO  21:19:27,553 - #6 ;
INFO  21:19:27,553 - #4 {
INFO  21:19:27,554 - #42 int
INFO  21:19:27,554 - #42 main
INFO  21:19:27,554 - #7 (
INFO  21:19:27,554 - #42 int
INFO  21:19:27,554 - #42 a
INFO  21:19:27,554 - #15 ,
INFO  21:19:27,554 - #42 char
INFO  21:19:27,554 - #42 b
INFO  21:19:27,554 - #15 ,
INFO  21:19:27,555 - #42 bool
INFO  21:19:27,555 - #42 c
INFO  21:19:27,555 - #8 )
INFO  21:19:27,555 - #4 {
INFO  21:19:27,555 - #12 return
INFO  21:19:27,555 - #41 1
INFO  21:19:27,555 - #6 ;
INFO  21:19:27,555 - #5 }
INFO  21:19:27,555 - #17 void
INFO  21:19:27,556 - #42 func
INFO  21:19:27,556 - #7 (
INFO  21:19:27,556 - #8 )
INFO  21:19:27,556 - #42 int
INFO  21:19:27,556 - #42 y
INFO  21:19:27,557 - #6 ;
INFO  21:19:27,557 - #42 int
INFO  21:19:27,557 - #42 x
INFO  21:19:27,557 - #6 ;
INFO  21:19:27,557 - #4 {
INFO  21:19:27,557 - #42 x
INFO  21:19:27,557 - #11 =
INFO  21:19:27,558 - #41 1
INFO  21:19:27,558 - #6 ;
INFO  21:19:27,558 - #42 y
INFO  21:19:27,558 - #11 =
INFO  21:19:27,558 - #42 x
INFO  21:19:27,558 - #7 (
INFO  21:19:27,558 - #41 1
INFO  21:19:27,558 - #15 ,
INFO  21:19:27,559 - #44 c
INFO  21:19:27,559 - #15 ,
INFO  21:19:27,559 - #43 true
INFO  21:19:27,559 - #8 )
INFO  21:19:27,560 - #6 ;
INFO  21:19:27,560 - #5 }
INFO  21:19:27,560 - #5 }
INFO  21:19:27,567 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  21:19:27,567 - ===================================
INFO  21:19:27,570 - Obradjuje se funckijamain na liniji 6
INFO  21:19:27,570 - Hello Var a na liniji 6
INFO  21:19:27,570 - Hello Var b na liniji 6
INFO  21:19:27,570 - Hello Var c na liniji 6
INFO  21:19:27,570 - Obradjuje se funckijafunc na liniji 11
INFO  21:19:27,570 - Hello Var y na liniji 12
INFO  21:19:27,571 - Hello Var x na liniji 13
ERROR 21:19:27,571 - Pogresna povratna vrednost! na liniji 11
INFO  21:20:15,767 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  21:20:15,789 - #2 program
INFO  21:20:15,790 - #42 MJProgram
INFO  21:20:15,790 - #3 const
INFO  21:20:15,790 - #42 bool
INFO  21:20:15,790 - #42 b
INFO  21:20:15,791 - #11 =
INFO  21:20:15,791 - #43 true
INFO  21:20:15,791 - #6 ;
INFO  21:20:15,791 - #4 {
INFO  21:20:15,792 - #42 int
INFO  21:20:15,792 - #42 main
INFO  21:20:15,792 - #7 (
INFO  21:20:15,792 - #42 int
INFO  21:20:15,792 - #42 a
INFO  21:20:15,792 - #15 ,
INFO  21:20:15,792 - #42 char
INFO  21:20:15,792 - #42 b
INFO  21:20:15,792 - #15 ,
INFO  21:20:15,793 - #42 bool
INFO  21:20:15,793 - #42 c
INFO  21:20:15,793 - #8 )
INFO  21:20:15,793 - #4 {
INFO  21:20:15,793 - #12 return
INFO  21:20:15,793 - #41 1
INFO  21:20:15,793 - #6 ;
INFO  21:20:15,793 - #5 }
INFO  21:20:15,793 - #17 void
INFO  21:20:15,794 - #42 func
INFO  21:20:15,794 - #7 (
INFO  21:20:15,794 - #8 )
INFO  21:20:15,795 - #42 int
INFO  21:20:15,795 - #42 y
INFO  21:20:15,795 - #6 ;
INFO  21:20:15,795 - #42 int
INFO  21:20:15,795 - #42 x
INFO  21:20:15,795 - #6 ;
INFO  21:20:15,795 - #4 {
INFO  21:20:15,795 - #42 x
INFO  21:20:15,795 - #11 =
INFO  21:20:15,796 - #41 1
INFO  21:20:15,796 - #6 ;
INFO  21:20:15,796 - #42 y
INFO  21:20:15,796 - #11 =
INFO  21:20:15,796 - #42 main
INFO  21:20:15,796 - #7 (
INFO  21:20:15,797 - #41 1
INFO  21:20:15,797 - #15 ,
INFO  21:20:15,797 - #44 c
INFO  21:20:15,797 - #15 ,
INFO  21:20:15,797 - #43 true
INFO  21:20:15,797 - #8 )
INFO  21:20:15,798 - #6 ;
INFO  21:20:15,798 - #5 }
INFO  21:20:15,798 - #5 }
INFO  21:20:15,805 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  21:20:15,805 - ===================================
INFO  21:20:15,808 - Obradjuje se funckijamain na liniji 6
INFO  21:20:15,808 - Hello Var a na liniji 6
INFO  21:20:15,808 - Hello Var b na liniji 6
INFO  21:20:15,808 - Hello Var c na liniji 6
INFO  21:20:15,808 - Obradjuje se funckijafunc na liniji 11
INFO  21:20:15,808 - Hello Var y na liniji 12
INFO  21:20:15,808 - Hello Var x na liniji 13
ERROR 21:20:15,809 - Pogresna povratna vrednost! na liniji 11
INFO  21:27:31,063 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  21:27:31,086 - #2 program
INFO  21:27:31,086 - #42 MJProgram
INFO  21:27:31,086 - #3 const
INFO  21:27:31,087 - #42 bool
INFO  21:27:31,087 - #42 b
INFO  21:27:31,087 - #11 =
INFO  21:27:31,087 - #43 true
INFO  21:27:31,087 - #6 ;
INFO  21:27:31,088 - #4 {
INFO  21:27:31,088 - #42 int
INFO  21:27:31,088 - #42 main
INFO  21:27:31,089 - #7 (
INFO  21:27:31,089 - #42 int
INFO  21:27:31,089 - #42 a
INFO  21:27:31,089 - #15 ,
INFO  21:27:31,089 - #42 char
INFO  21:27:31,089 - #42 b
INFO  21:27:31,089 - #15 ,
INFO  21:27:31,089 - #42 bool
INFO  21:27:31,089 - #42 c
INFO  21:27:31,089 - #8 )
INFO  21:27:31,089 - #4 {
INFO  21:27:31,089 - #12 return
INFO  21:27:31,089 - #41 1
INFO  21:27:31,090 - #6 ;
INFO  21:27:31,090 - #5 }
INFO  21:27:31,090 - #17 void
INFO  21:27:31,091 - #42 func
INFO  21:27:31,091 - #7 (
INFO  21:27:31,091 - #8 )
INFO  21:27:31,091 - #42 int
INFO  21:27:31,091 - #42 y
INFO  21:27:31,091 - #6 ;
INFO  21:27:31,091 - #42 int
INFO  21:27:31,092 - #42 x
INFO  21:27:31,092 - #6 ;
INFO  21:27:31,092 - #4 {
INFO  21:27:31,092 - #42 x
INFO  21:27:31,092 - #11 =
INFO  21:27:31,093 - #41 1
INFO  21:27:31,093 - #6 ;
INFO  21:27:31,093 - #42 y
INFO  21:27:31,093 - #11 =
INFO  21:27:31,093 - #42 main
INFO  21:27:31,093 - #7 (
INFO  21:27:31,093 - #41 1
INFO  21:27:31,093 - #15 ,
INFO  21:27:31,094 - #44 c
INFO  21:27:31,094 - #15 ,
INFO  21:27:31,094 - #43 true
INFO  21:27:31,094 - #8 )
INFO  21:27:31,094 - #6 ;
INFO  21:27:31,095 - #5 }
INFO  21:27:31,095 - #5 }
INFO  21:27:31,102 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  21:27:31,102 - ===================================
INFO  21:27:31,105 - Obradjuje se funckijamain na liniji 6
INFO  21:27:31,105 - Hello Var a na liniji 6
INFO  21:27:31,105 - Hello Var b na liniji 6
INFO  21:27:31,105 - Hello Var c na liniji 6
INFO  21:27:31,105 - Obradjuje se funckijafunc na liniji 11
INFO  21:27:31,105 - Hello Var y na liniji 12
INFO  21:27:31,105 - Hello Var x na liniji 13
ERROR 21:27:31,106 - Pogresna povratna vrednost! na liniji 11
INFO  21:33:00,734 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  21:33:00,756 - #2 program
INFO  21:33:00,757 - #42 MJProgram
INFO  21:33:00,757 - #3 const
INFO  21:33:00,757 - #42 bool
INFO  21:33:00,757 - #42 b
INFO  21:33:00,758 - #11 =
INFO  21:33:00,758 - #43 true
INFO  21:33:00,758 - #6 ;
INFO  21:33:00,758 - #4 {
INFO  21:33:00,759 - #42 int
INFO  21:33:00,759 - #42 main
INFO  21:33:00,759 - #7 (
INFO  21:33:00,759 - #42 int
INFO  21:33:00,759 - #42 a
INFO  21:33:00,759 - #15 ,
INFO  21:33:00,759 - #42 char
INFO  21:33:00,759 - #42 b
INFO  21:33:00,759 - #15 ,
INFO  21:33:00,761 - #42 bool
INFO  21:33:00,761 - #42 c
INFO  21:33:00,761 - #8 )
INFO  21:33:00,761 - #4 {
INFO  21:33:00,761 - #12 return
INFO  21:33:00,761 - #41 1
INFO  21:33:00,761 - #6 ;
INFO  21:33:00,761 - #5 }
INFO  21:33:00,761 - #17 void
INFO  21:33:00,762 - #42 func
INFO  21:33:00,762 - #7 (
INFO  21:33:00,762 - #8 )
INFO  21:33:00,762 - #42 int
INFO  21:33:00,762 - #42 y
INFO  21:33:00,762 - #6 ;
INFO  21:33:00,763 - #42 int
INFO  21:33:00,763 - #42 x
INFO  21:33:00,763 - #6 ;
INFO  21:33:00,763 - #4 {
INFO  21:33:00,763 - #42 x
INFO  21:33:00,763 - #11 =
INFO  21:33:00,764 - #41 1
INFO  21:33:00,764 - #6 ;
INFO  21:33:00,764 - #42 y
INFO  21:33:00,764 - #11 =
INFO  21:33:00,764 - #42 main
INFO  21:33:00,764 - #7 (
INFO  21:33:00,764 - #41 1
INFO  21:33:00,764 - #15 ,
INFO  21:33:00,765 - #44 c
INFO  21:33:00,765 - #15 ,
INFO  21:33:00,765 - #43 true
INFO  21:33:00,765 - #8 )
INFO  21:33:00,765 - #6 ;
INFO  21:33:00,766 - #5 }
INFO  21:33:00,766 - #5 }
INFO  21:33:00,773 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  21:33:00,773 - ===================================
INFO  21:33:00,776 - Obradjuje se funckijamain na liniji 6
INFO  21:33:00,776 - Hello Var a na liniji 6
INFO  21:33:00,776 - Hello Var b na liniji 6
INFO  21:33:00,776 - Hello Var c na liniji 6
INFO  21:33:00,776 - 1
INFO  21:33:00,776 - 1
INFO  21:33:00,777 - Obradjuje se funckijafunc na liniji 11
INFO  21:33:00,777 - Hello Var y na liniji 12
INFO  21:33:00,777 - Hello Var x na liniji 13
INFO  21:33:00,777 - 1
INFO  21:33:00,777 - 0
ERROR 21:33:00,777 - Pogresna povratna vrednost! na liniji 11
INFO  21:33:53,663 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  21:33:53,685 - #2 program
INFO  21:33:53,685 - #42 MJProgram
INFO  21:33:53,685 - #3 const
INFO  21:33:53,686 - #42 bool
INFO  21:33:53,686 - #42 b
INFO  21:33:53,686 - #11 =
INFO  21:33:53,686 - #43 true
INFO  21:33:53,686 - #6 ;
INFO  21:33:53,687 - #4 {
INFO  21:33:53,688 - #42 int
INFO  21:33:53,688 - #42 main
INFO  21:33:53,688 - #7 (
INFO  21:33:53,688 - #42 int
INFO  21:33:53,688 - #42 a
INFO  21:33:53,688 - #15 ,
INFO  21:33:53,688 - #42 char
INFO  21:33:53,688 - #42 b
INFO  21:33:53,688 - #15 ,
INFO  21:33:53,688 - #42 bool
INFO  21:33:53,688 - #42 c
INFO  21:33:53,688 - #8 )
INFO  21:33:53,689 - #4 {
INFO  21:33:53,689 - #12 return
INFO  21:33:53,689 - #41 1
INFO  21:33:53,689 - #6 ;
INFO  21:33:53,689 - #5 }
INFO  21:33:53,689 - #17 void
INFO  21:33:53,690 - #42 func
INFO  21:33:53,690 - #7 (
INFO  21:33:53,690 - #8 )
INFO  21:33:53,690 - #42 int
INFO  21:33:53,690 - #42 y
INFO  21:33:53,690 - #6 ;
INFO  21:33:53,690 - #42 int
INFO  21:33:53,691 - #42 x
INFO  21:33:53,691 - #6 ;
INFO  21:33:53,691 - #4 {
INFO  21:33:53,691 - #42 x
INFO  21:33:53,691 - #11 =
INFO  21:33:53,692 - #41 1
INFO  21:33:53,692 - #6 ;
INFO  21:33:53,692 - #42 y
INFO  21:33:53,692 - #11 =
INFO  21:33:53,692 - #42 main
INFO  21:33:53,692 - #7 (
INFO  21:33:53,692 - #41 1
INFO  21:33:53,692 - #15 ,
INFO  21:33:53,693 - #44 c
INFO  21:33:53,693 - #15 ,
INFO  21:33:53,693 - #43 true
INFO  21:33:53,693 - #8 )
INFO  21:33:53,693 - #6 ;
INFO  21:33:53,694 - #5 }
INFO  21:33:53,694 - #5 }
INFO  21:33:53,701 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  21:33:53,701 - ===================================
INFO  21:33:53,703 - Obradjuje se funckijamain na liniji 6
INFO  21:33:53,704 - Hello Var a na liniji 6
INFO  21:33:53,704 - Hello Var b na liniji 6
INFO  21:33:53,704 - Hello Var c na liniji 6
INFO  21:33:53,704 - 1
INFO  21:33:53,704 - 1
INFO  21:33:53,704 - Obradjuje se funckijafunc na liniji 11
INFO  21:33:53,705 - Hello Var y na liniji 12
INFO  21:33:53,705 - Hello Var x na liniji 13
INFO  21:33:53,705 - 0
INFO  21:33:53,705 - 0
INFO  21:34:29,244 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  21:34:29,267 - #2 program
INFO  21:34:29,267 - #42 MJProgram
INFO  21:34:29,267 - #3 const
INFO  21:34:29,267 - #42 bool
INFO  21:34:29,267 - #42 b
INFO  21:34:29,268 - #11 =
INFO  21:34:29,268 - #43 true
INFO  21:34:29,268 - #6 ;
INFO  21:34:29,268 - #4 {
INFO  21:34:29,269 - #42 int
INFO  21:34:29,269 - #42 main
INFO  21:34:29,269 - #7 (
INFO  21:34:29,269 - #42 int
INFO  21:34:29,269 - #42 a
INFO  21:34:29,269 - #15 ,
INFO  21:34:29,269 - #42 char
INFO  21:34:29,269 - #42 b
INFO  21:34:29,269 - #15 ,
INFO  21:34:29,270 - #42 bool
INFO  21:34:29,270 - #42 c
INFO  21:34:29,270 - #8 )
INFO  21:34:29,270 - #4 {
INFO  21:34:29,270 - #12 return
INFO  21:34:29,270 - #41 1
INFO  21:34:29,270 - #6 ;
INFO  21:34:29,270 - #5 }
INFO  21:34:29,270 - #17 void
INFO  21:34:29,271 - #42 func
INFO  21:34:29,271 - #7 (
INFO  21:34:29,271 - #8 )
INFO  21:34:29,271 - #42 int
INFO  21:34:29,271 - #42 y
INFO  21:34:29,272 - #6 ;
INFO  21:34:29,272 - #42 int
INFO  21:34:29,272 - #42 x
INFO  21:34:29,272 - #6 ;
INFO  21:34:29,272 - #4 {
INFO  21:34:29,272 - #42 x
INFO  21:34:29,272 - #11 =
INFO  21:34:29,273 - #41 1
INFO  21:34:29,273 - #6 ;
INFO  21:34:29,273 - #42 y
INFO  21:34:29,273 - #11 =
INFO  21:34:29,273 - #42 x
INFO  21:34:29,274 - #7 (
INFO  21:34:29,274 - #41 1
INFO  21:34:29,274 - #15 ,
INFO  21:34:29,274 - #44 c
INFO  21:34:29,275 - #15 ,
INFO  21:34:29,275 - #43 true
INFO  21:34:29,275 - #8 )
INFO  21:34:29,275 - #6 ;
INFO  21:34:29,275 - #5 }
INFO  21:34:29,276 - #5 }
INFO  21:34:29,283 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  21:34:29,283 - ===================================
INFO  21:34:29,285 - Obradjuje se funckijamain na liniji 6
INFO  21:34:29,286 - Hello Var a na liniji 6
INFO  21:34:29,286 - Hello Var b na liniji 6
INFO  21:34:29,286 - Hello Var c na liniji 6
INFO  21:34:29,286 - Obradjuje se funckijafunc na liniji 11
INFO  21:34:29,286 - Hello Var y na liniji 12
INFO  21:34:29,286 - Hello Var x na liniji 13
INFO  21:35:03,797 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  21:35:03,819 - #2 program
INFO  21:35:03,820 - #42 MJProgram
INFO  21:35:03,820 - #3 const
INFO  21:35:03,820 - #42 bool
INFO  21:35:03,820 - #42 b
INFO  21:35:03,821 - #11 =
INFO  21:35:03,821 - #43 true
INFO  21:35:03,821 - #6 ;
INFO  21:35:03,821 - #4 {
INFO  21:35:03,822 - #42 int
INFO  21:35:03,822 - #42 main
INFO  21:35:03,822 - #7 (
INFO  21:35:03,822 - #42 int
INFO  21:35:03,822 - #42 a
INFO  21:35:03,822 - #15 ,
INFO  21:35:03,822 - #42 char
INFO  21:35:03,822 - #42 b
INFO  21:35:03,822 - #15 ,
INFO  21:35:03,822 - #42 bool
INFO  21:35:03,823 - #42 c
INFO  21:35:03,823 - #8 )
INFO  21:35:03,823 - #4 {
INFO  21:35:03,823 - #12 return
INFO  21:35:03,823 - #41 1
INFO  21:35:03,823 - #6 ;
INFO  21:35:03,823 - #5 }
INFO  21:35:03,823 - #17 void
INFO  21:35:03,824 - #42 func
INFO  21:35:03,824 - #7 (
INFO  21:35:03,824 - #8 )
INFO  21:35:03,824 - #42 int
INFO  21:35:03,824 - #42 y
INFO  21:35:03,824 - #6 ;
INFO  21:35:03,824 - #42 int
INFO  21:35:03,825 - #42 x
INFO  21:35:03,825 - #6 ;
INFO  21:35:03,825 - #4 {
INFO  21:35:03,825 - #42 x
INFO  21:35:03,825 - #11 =
INFO  21:35:03,826 - #41 1
INFO  21:35:03,826 - #6 ;
INFO  21:35:03,826 - #42 y
INFO  21:35:03,826 - #11 =
INFO  21:35:03,826 - #42 x
INFO  21:35:03,826 - #7 (
INFO  21:35:03,826 - #41 1
INFO  21:35:03,826 - #15 ,
INFO  21:35:03,827 - #44 c
INFO  21:35:03,827 - #15 ,
INFO  21:35:03,827 - #43 true
INFO  21:35:03,827 - #8 )
INFO  21:35:03,827 - #6 ;
INFO  21:35:03,828 - #5 }
INFO  21:35:03,828 - #5 }
INFO  21:35:03,835 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  21:35:03,836 - ===================================
INFO  21:35:03,838 - Obradjuje se funckijamain na liniji 6
INFO  21:35:03,838 - Hello Var a na liniji 6
INFO  21:35:03,839 - Hello Var b na liniji 6
INFO  21:35:03,839 - Hello Var c na liniji 6
INFO  21:35:03,839 - Obradjuje se funckijafunc na liniji 11
INFO  21:35:03,839 - Hello Var y na liniji 12
INFO  21:35:03,839 - Hello Var x na liniji 13
INFO  21:37:29,606 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  21:37:29,629 - #2 program
INFO  21:37:29,629 - #42 MJProgram
INFO  21:37:29,629 - #3 const
INFO  21:37:29,630 - #42 bool
INFO  21:37:29,630 - #42 b
INFO  21:37:29,630 - #11 =
INFO  21:37:29,630 - #43 true
INFO  21:37:29,630 - #6 ;
INFO  21:37:29,631 - #4 {
INFO  21:37:29,632 - #42 int
INFO  21:37:29,632 - #42 main
INFO  21:37:29,632 - #7 (
INFO  21:37:29,632 - #42 int
INFO  21:37:29,632 - #42 a
INFO  21:37:29,632 - #15 ,
INFO  21:37:29,632 - #42 char
INFO  21:37:29,632 - #42 b
INFO  21:37:29,632 - #15 ,
INFO  21:37:29,633 - #42 bool
INFO  21:37:29,633 - #42 c
INFO  21:37:29,633 - #8 )
INFO  21:37:29,633 - #4 {
INFO  21:37:29,633 - #12 return
INFO  21:37:29,633 - #41 1
INFO  21:37:29,633 - #6 ;
INFO  21:37:29,633 - #5 }
INFO  21:37:29,633 - #17 void
INFO  21:37:29,634 - #42 func
INFO  21:37:29,634 - #7 (
INFO  21:37:29,634 - #8 )
INFO  21:37:29,634 - #42 int
INFO  21:37:29,635 - #42 y
INFO  21:37:29,635 - #6 ;
INFO  21:37:29,635 - #42 int
INFO  21:37:29,635 - #42 x
INFO  21:37:29,635 - #6 ;
INFO  21:37:29,635 - #4 {
INFO  21:37:29,635 - #42 x
INFO  21:37:29,635 - #11 =
INFO  21:37:29,636 - #41 1
INFO  21:37:29,636 - #6 ;
INFO  21:37:29,636 - #42 y
INFO  21:37:29,636 - #11 =
INFO  21:37:29,636 - #42 x
INFO  21:37:29,637 - #7 (
INFO  21:37:29,637 - #41 1
INFO  21:37:29,637 - #15 ,
INFO  21:37:29,637 - #44 c
INFO  21:37:29,637 - #15 ,
INFO  21:37:29,638 - #43 true
INFO  21:37:29,638 - #8 )
INFO  21:37:29,638 - #6 ;
INFO  21:37:29,638 - #5 }
INFO  21:37:29,638 - #5 }
INFO  21:37:29,645 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  21:37:29,645 - ===================================
INFO  21:37:29,650 - Obradjuje se funckijamain na liniji 6
INFO  21:37:29,650 - Hello Var a na liniji 6
INFO  21:37:29,650 - Hello Var b na liniji 6
INFO  21:37:29,650 - Hello Var c na liniji 6
INFO  21:37:29,650 - Obradjuje se funckijafunc na liniji 11
INFO  21:37:29,650 - Hello Var y na liniji 12
INFO  21:37:29,650 - Hello Var x na liniji 13
ERROR 21:37:29,650 - Greska: Nije funkcija! dsAct na liniji 16
INFO  21:37:43,633 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  21:37:43,656 - #2 program
INFO  21:37:43,656 - #42 MJProgram
INFO  21:37:43,656 - #3 const
INFO  21:37:43,657 - #42 bool
INFO  21:37:43,657 - #42 b
INFO  21:37:43,657 - #11 =
INFO  21:37:43,657 - #43 true
INFO  21:37:43,658 - #6 ;
INFO  21:37:43,658 - #4 {
INFO  21:37:43,659 - #42 int
INFO  21:37:43,659 - #42 main
INFO  21:37:43,659 - #7 (
INFO  21:37:43,659 - #42 int
INFO  21:37:43,659 - #42 a
INFO  21:37:43,659 - #15 ,
INFO  21:37:43,659 - #42 char
INFO  21:37:43,659 - #42 b
INFO  21:37:43,659 - #15 ,
INFO  21:37:43,659 - #42 bool
INFO  21:37:43,660 - #42 c
INFO  21:37:43,660 - #8 )
INFO  21:37:43,660 - #4 {
INFO  21:37:43,660 - #12 return
INFO  21:37:43,660 - #41 1
INFO  21:37:43,660 - #6 ;
INFO  21:37:43,660 - #5 }
INFO  21:37:43,660 - #17 void
INFO  21:37:43,661 - #42 func
INFO  21:37:43,661 - #7 (
INFO  21:37:43,661 - #8 )
INFO  21:37:43,661 - #42 int
INFO  21:37:43,661 - #42 y
INFO  21:37:43,661 - #6 ;
INFO  21:37:43,662 - #42 int
INFO  21:37:43,662 - #42 x
INFO  21:37:43,662 - #6 ;
INFO  21:37:43,662 - #4 {
INFO  21:37:43,662 - #42 x
INFO  21:37:43,662 - #11 =
INFO  21:37:43,663 - #41 1
INFO  21:37:43,663 - #6 ;
INFO  21:37:43,663 - #42 y
INFO  21:37:43,663 - #11 =
INFO  21:37:43,663 - #42 main
INFO  21:37:43,663 - #7 (
INFO  21:37:43,663 - #41 1
INFO  21:37:43,663 - #15 ,
INFO  21:37:43,664 - #44 c
INFO  21:37:43,664 - #15 ,
INFO  21:37:43,664 - #43 true
INFO  21:37:43,664 - #8 )
INFO  21:37:43,664 - #6 ;
INFO  21:37:43,665 - #5 }
INFO  21:37:43,665 - #5 }
INFO  21:37:43,672 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  21:37:43,672 - ===================================
INFO  21:37:43,675 - Obradjuje se funckijamain na liniji 6
INFO  21:37:43,675 - Hello Var a na liniji 6
INFO  21:37:43,675 - Hello Var b na liniji 6
INFO  21:37:43,675 - Hello Var c na liniji 6
INFO  21:37:43,675 - Obradjuje se funckijafunc na liniji 11
INFO  21:37:43,675 - Hello Var y na liniji 12
INFO  21:37:43,676 - Hello Var x na liniji 13
INFO  22:00:45,735 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:00:45,762 - #2 program
INFO  22:00:45,762 - #42 MJProgram
INFO  22:00:45,762 - #3 const
INFO  22:00:45,762 - #42 bool
INFO  22:00:45,763 - #42 b
INFO  22:00:45,763 - #11 =
INFO  22:00:45,763 - #43 true
INFO  22:00:45,763 - #6 ;
INFO  22:00:45,763 - #4 {
INFO  22:00:45,764 - #42 int
INFO  22:00:45,764 - #42 main
INFO  22:00:45,765 - #7 (
INFO  22:00:45,765 - #42 int
INFO  22:00:45,765 - #42 a
INFO  22:00:45,765 - #15 ,
INFO  22:00:45,765 - #42 char
INFO  22:00:45,765 - #42 b
INFO  22:00:45,765 - #15 ,
INFO  22:00:45,765 - #42 bool
INFO  22:00:45,765 - #42 c
INFO  22:00:45,765 - #8 )
INFO  22:00:45,765 - #4 {
INFO  22:00:45,766 - #12 return
INFO  22:00:45,766 - #41 1
INFO  22:00:45,766 - #6 ;
INFO  22:00:45,766 - #5 }
INFO  22:00:45,766 - #17 void
INFO  22:00:45,767 - #42 func
INFO  22:00:45,767 - #7 (
INFO  22:00:45,767 - #8 )
INFO  22:00:45,767 - #42 int
INFO  22:00:45,768 - #42 y
INFO  22:00:45,768 - #6 ;
INFO  22:00:45,768 - #42 int
INFO  22:00:45,768 - #42 x
INFO  22:00:45,768 - #6 ;
INFO  22:00:45,768 - #4 {
INFO  22:00:45,768 - #42 x
INFO  22:00:45,768 - #11 =
INFO  22:00:45,769 - #41 1
INFO  22:00:45,769 - #6 ;
INFO  22:00:45,769 - #42 y
INFO  22:00:45,769 - #11 =
INFO  22:00:45,769 - #42 main
INFO  22:00:45,769 - #7 (
INFO  22:00:45,770 - #41 1
INFO  22:00:45,770 - #15 ,
INFO  22:00:45,770 - #44 c
INFO  22:00:45,771 - #15 ,
INFO  22:00:45,771 - #43 true
INFO  22:00:45,771 - #8 )
INFO  22:00:45,771 - #6 ;
INFO  22:00:45,772 - #5 }
INFO  22:00:45,772 - #5 }
INFO  22:00:45,779 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:00:45,780 - ===================================
INFO  22:00:45,782 - Obradjuje se funckijamain na liniji 6
INFO  22:00:45,782 - Hello Var a na liniji 6
INFO  22:00:45,783 - Hello Var b na liniji 6
INFO  22:00:45,783 - Hello Var c na liniji 6
INFO  22:00:45,783 - Obradjuje se funckijafunc na liniji 11
INFO  22:00:45,783 - Hello Var y na liniji 12
INFO  22:00:45,783 - Hello Var x na liniji 13
INFO  22:00:45,783 - usao actParsAddOnMany na liniji 11
INFO  22:00:45,783 - 2 na liniji 11
INFO  22:00:45,783 - usao actParsAddOnMany na liniji 11
INFO  22:00:45,783 - 5 na liniji 11
INFO  22:00:45,783 - usao actParsAddOnMany na liniji 16
INFO  22:00:45,783 - 1 na liniji 16
INFO  22:02:02,101 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:02:02,127 - #2 program
INFO  22:02:02,127 - #42 MJProgram
INFO  22:02:02,127 - #3 const
INFO  22:02:02,128 - #42 bool
INFO  22:02:02,128 - #42 b
INFO  22:02:02,128 - #11 =
INFO  22:02:02,128 - #43 true
INFO  22:02:02,128 - #6 ;
INFO  22:02:02,129 - #4 {
INFO  22:02:02,129 - #42 int
INFO  22:02:02,129 - #42 main
INFO  22:02:02,129 - #7 (
INFO  22:02:02,130 - #42 int
INFO  22:02:02,130 - #42 a
INFO  22:02:02,130 - #15 ,
INFO  22:02:02,130 - #42 char
INFO  22:02:02,130 - #42 b
INFO  22:02:02,130 - #15 ,
INFO  22:02:02,130 - #42 bool
INFO  22:02:02,130 - #42 c
INFO  22:02:02,130 - #8 )
INFO  22:02:02,130 - #4 {
INFO  22:02:02,130 - #12 return
INFO  22:02:02,130 - #41 1
INFO  22:02:02,130 - #6 ;
INFO  22:02:02,131 - #5 }
INFO  22:02:02,131 - #17 void
INFO  22:02:02,132 - #42 func
INFO  22:02:02,132 - #7 (
INFO  22:02:02,132 - #8 )
INFO  22:02:02,132 - #42 int
INFO  22:02:02,132 - #42 y
INFO  22:02:02,132 - #6 ;
INFO  22:02:02,133 - #42 int
INFO  22:02:02,133 - #42 x
INFO  22:02:02,133 - #6 ;
INFO  22:02:02,133 - #4 {
INFO  22:02:02,133 - #42 x
INFO  22:02:02,133 - #11 =
INFO  22:02:02,134 - #41 1
INFO  22:02:02,134 - #6 ;
INFO  22:02:02,134 - #42 y
INFO  22:02:02,134 - #11 =
INFO  22:02:02,134 - #42 main
INFO  22:02:02,134 - #7 (
INFO  22:02:02,134 - #41 1
INFO  22:02:02,134 - #15 ,
INFO  22:02:02,135 - #44 c
INFO  22:02:02,135 - #15 ,
INFO  22:02:02,135 - #43 true
INFO  22:02:02,135 - #8 )
INFO  22:02:02,136 - #6 ;
INFO  22:02:02,136 - #5 }
INFO  22:02:02,136 - #5 }
INFO  22:02:02,143 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:02:02,144 - ===================================
INFO  22:02:02,146 - Obradjuje se funckijamain na liniji 6
INFO  22:02:02,146 - Hello Var a na liniji 6
INFO  22:02:02,147 - Hello Var b na liniji 6
INFO  22:02:02,147 - Hello Var c na liniji 6
INFO  22:02:02,147 - Obradjuje se funckijafunc na liniji 11
INFO  22:02:02,147 - Hello Var y na liniji 12
INFO  22:02:02,147 - Hello Var x na liniji 13
INFO  22:02:02,147 - usao actParsAddOnMany na liniji 11
INFO  22:02:02,147 - 2 na liniji 11
INFO  22:02:02,147 - usao actParsAddOnMany na liniji 11
INFO  22:02:02,147 - 5 na liniji 11
INFO  22:02:02,147 - usao ActParsHas na liniji 16
INFO  22:02:02,147 - 1 na liniji 16
INFO  22:03:05,058 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:03:05,083 - #2 program
INFO  22:03:05,083 - #42 MJProgram
INFO  22:03:05,083 - #3 const
INFO  22:03:05,084 - #42 bool
INFO  22:03:05,084 - #42 b
INFO  22:03:05,084 - #11 =
INFO  22:03:05,084 - #43 true
INFO  22:03:05,084 - #6 ;
INFO  22:03:05,084 - #4 {
INFO  22:03:05,085 - #42 int
INFO  22:03:05,085 - #42 main
INFO  22:03:05,085 - #7 (
INFO  22:03:05,085 - #42 int
INFO  22:03:05,085 - #42 a
INFO  22:03:05,085 - #15 ,
INFO  22:03:05,086 - #42 char
INFO  22:03:05,086 - #42 b
INFO  22:03:05,086 - #15 ,
INFO  22:03:05,086 - #42 bool
INFO  22:03:05,086 - #42 c
INFO  22:03:05,086 - #8 )
INFO  22:03:05,086 - #4 {
INFO  22:03:05,086 - #12 return
INFO  22:03:05,086 - #41 1
INFO  22:03:05,086 - #6 ;
INFO  22:03:05,087 - #5 }
INFO  22:03:05,087 - #17 void
INFO  22:03:05,087 - #42 func
INFO  22:03:05,088 - #7 (
INFO  22:03:05,088 - #8 )
INFO  22:03:05,088 - #42 int
INFO  22:03:05,088 - #42 y
INFO  22:03:05,088 - #6 ;
INFO  22:03:05,088 - #42 int
INFO  22:03:05,089 - #42 x
INFO  22:03:05,089 - #6 ;
INFO  22:03:05,089 - #4 {
INFO  22:03:05,089 - #42 x
INFO  22:03:05,089 - #11 =
INFO  22:03:05,090 - #41 1
INFO  22:03:05,090 - #6 ;
INFO  22:03:05,090 - #42 y
INFO  22:03:05,090 - #11 =
INFO  22:03:05,090 - #42 main
INFO  22:03:05,090 - #7 (
INFO  22:03:05,090 - #41 1
INFO  22:03:05,090 - #15 ,
INFO  22:03:05,091 - #44 c
INFO  22:03:05,091 - #15 ,
INFO  22:03:05,091 - #43 true
INFO  22:03:05,091 - #8 )
INFO  22:03:05,092 - #6 ;
INFO  22:03:05,092 - #5 }
INFO  22:03:05,092 - #5 }
INFO  22:03:05,100 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:03:05,101 - ===================================
INFO  22:03:05,104 - Obradjuje se funckijamain na liniji 6
INFO  22:03:05,104 - Hello Var a na liniji 6
INFO  22:03:05,104 - Hello Var b na liniji 6
INFO  22:03:05,105 - Hello Var c na liniji 6
INFO  22:03:05,105 - Obradjuje se funckijafunc na liniji 11
INFO  22:03:05,105 - Hello Var y na liniji 12
INFO  22:03:05,105 - Hello Var x na liniji 13
INFO  22:03:05,105 - usao actParsAddOnMany na liniji 11
INFO  22:03:05,105 - 2 na liniji 11
INFO  22:03:05,105 - usao actParsAddOnMany na liniji 11
INFO  22:03:05,105 - 5 na liniji 11
INFO  22:03:05,105 - usao ActParsHas na liniji 16
INFO  22:03:05,106 - 1 na liniji 16
INFO  22:05:31,361 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:05:31,385 - #2 program
INFO  22:05:31,385 - #42 MJProgram
INFO  22:05:31,385 - #3 const
INFO  22:05:31,386 - #42 bool
INFO  22:05:31,386 - #42 b
INFO  22:05:31,386 - #11 =
INFO  22:05:31,386 - #43 true
INFO  22:05:31,386 - #6 ;
INFO  22:05:31,387 - #4 {
INFO  22:05:31,388 - #42 int
INFO  22:05:31,388 - #42 main
INFO  22:05:31,388 - #7 (
INFO  22:05:31,388 - #42 int
INFO  22:05:31,388 - #42 a
INFO  22:05:31,388 - #15 ,
INFO  22:05:31,388 - #42 char
INFO  22:05:31,389 - #42 b
INFO  22:05:31,389 - #15 ,
INFO  22:05:31,389 - #42 bool
INFO  22:05:31,389 - #42 c
INFO  22:05:31,389 - #8 )
INFO  22:05:31,389 - #4 {
INFO  22:05:31,389 - #12 return
INFO  22:05:31,389 - #41 1
INFO  22:05:31,389 - #6 ;
INFO  22:05:31,389 - #5 }
INFO  22:05:31,390 - #17 void
INFO  22:05:31,390 - #42 func
INFO  22:05:31,390 - #7 (
INFO  22:05:31,391 - #8 )
INFO  22:05:31,391 - #42 int
INFO  22:05:31,391 - #42 y
INFO  22:05:31,391 - #6 ;
INFO  22:05:31,391 - #42 int
INFO  22:05:31,392 - #42 x
INFO  22:05:31,392 - #6 ;
INFO  22:05:31,392 - #4 {
INFO  22:05:31,392 - #42 x
INFO  22:05:31,392 - #11 =
INFO  22:05:31,392 - #41 1
INFO  22:05:31,392 - #6 ;
INFO  22:05:31,393 - #42 y
INFO  22:05:31,393 - #11 =
INFO  22:05:31,393 - #42 main
INFO  22:05:31,393 - #7 (
INFO  22:05:31,393 - #41 1
INFO  22:05:31,393 - #15 ,
INFO  22:05:31,394 - #44 c
INFO  22:05:31,394 - #15 ,
INFO  22:05:31,394 - #43 true
INFO  22:05:31,394 - #8 )
INFO  22:05:31,394 - #6 ;
INFO  22:05:31,395 - #5 }
INFO  22:05:31,395 - #5 }
INFO  22:05:31,403 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:05:31,403 - ===================================
INFO  22:05:31,406 - Obradjuje se funckijamain na liniji 6
INFO  22:05:31,406 - Hello Var a na liniji 6
INFO  22:05:31,406 - Hello Var b na liniji 6
INFO  22:05:31,406 - Hello Var c na liniji 6
INFO  22:05:31,407 - Obradjuje se funckijafunc na liniji 11
INFO  22:05:31,407 - Hello Var y na liniji 12
INFO  22:05:31,407 - Hello Var x na liniji 13
INFO  22:05:31,407 - usao actParsAddOnMany na liniji 11
INFO  22:05:31,407 - 2 na liniji 11
INFO  22:05:31,407 - usao actParsAddOnMany na liniji 11
INFO  22:05:31,407 - 5 na liniji 11
INFO  22:05:31,407 - usao ActParsHas na liniji 16
INFO  22:05:31,407 - 1 na liniji 16
INFO  22:05:31,407 - usao FactorDesActPar na liniji 16
INFO  22:15:01,481 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:15:01,515 - #2 program
INFO  22:15:01,515 - #42 MJProgram
INFO  22:15:01,515 - #3 const
INFO  22:15:01,516 - #42 bool
INFO  22:15:01,516 - #42 b
INFO  22:15:01,516 - #11 =
INFO  22:15:01,516 - #43 true
INFO  22:15:01,516 - #6 ;
INFO  22:15:01,517 - #4 {
INFO  22:15:01,518 - #42 int
INFO  22:15:01,518 - #42 main
INFO  22:15:01,518 - #7 (
INFO  22:15:01,518 - #42 int
INFO  22:15:01,518 - #42 a
INFO  22:15:01,518 - #15 ,
INFO  22:15:01,518 - #42 char
INFO  22:15:01,518 - #42 b
INFO  22:15:01,518 - #15 ,
INFO  22:15:01,518 - #42 bool
INFO  22:15:01,518 - #42 c
INFO  22:15:01,518 - #8 )
INFO  22:15:01,519 - #4 {
INFO  22:15:01,519 - #12 return
INFO  22:15:01,519 - #41 1
INFO  22:15:01,519 - #6 ;
INFO  22:15:01,519 - #5 }
INFO  22:15:01,519 - #17 void
INFO  22:15:01,520 - #42 func
INFO  22:15:01,520 - #7 (
INFO  22:15:01,520 - #8 )
INFO  22:15:01,520 - #42 int
INFO  22:15:01,521 - #42 y
INFO  22:15:01,521 - #6 ;
INFO  22:15:01,521 - #42 int
INFO  22:15:01,521 - #42 x
INFO  22:15:01,521 - #6 ;
INFO  22:15:01,521 - #4 {
INFO  22:15:01,521 - #42 x
INFO  22:15:01,521 - #11 =
INFO  22:15:01,522 - #41 1
INFO  22:15:01,522 - #6 ;
INFO  22:15:01,523 - #42 y
INFO  22:15:01,523 - #11 =
INFO  22:15:01,523 - #42 main
INFO  22:15:01,523 - #7 (
INFO  22:15:01,523 - #41 1
INFO  22:15:01,523 - #15 ,
INFO  22:15:01,524 - #44 c
INFO  22:15:01,524 - #15 ,
INFO  22:15:01,524 - #43 true
INFO  22:15:01,524 - #8 )
INFO  22:15:01,524 - #6 ;
INFO  22:15:01,525 - #5 }
INFO  22:15:01,525 - #5 }
INFO  22:15:01,531 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:15:01,531 - ===================================
INFO  22:15:01,534 - Obradjuje se funckijamain na liniji 6
INFO  22:15:01,534 - Hello Var a na liniji 6
INFO  22:15:01,534 - Hello Var b na liniji 6
INFO  22:15:01,534 - Hello Var c na liniji 6
INFO  22:15:01,534 - Obradjuje se funckijafunc na liniji 11
INFO  22:15:01,534 - Hello Var y na liniji 12
INFO  22:15:01,534 - Hello Var x na liniji 13
INFO  22:15:01,535 - usao actParsAddOnMany na liniji 11
INFO  22:15:01,535 - 2 na liniji 11
INFO  22:15:01,536 - usao actParsAddOnMany na liniji 11
INFO  22:15:01,536 - 5 na liniji 11
INFO  22:15:01,536 - usao ActParsHas na liniji 16
INFO  22:15:01,536 - 1 na liniji 16
INFO  22:15:11,291 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:15:11,326 - #2 program
INFO  22:15:11,326 - #42 MJProgram
INFO  22:15:11,326 - #3 const
INFO  22:15:11,327 - #42 bool
INFO  22:15:11,327 - #42 b
INFO  22:15:11,327 - #11 =
INFO  22:15:11,327 - #43 true
INFO  22:15:11,327 - #6 ;
INFO  22:15:11,328 - #4 {
INFO  22:15:11,329 - #42 int
INFO  22:15:11,329 - #42 main
INFO  22:15:11,329 - #7 (
INFO  22:15:11,329 - #42 int
INFO  22:15:11,329 - #42 a
INFO  22:15:11,329 - #15 ,
INFO  22:15:11,329 - #42 char
INFO  22:15:11,329 - #42 b
INFO  22:15:11,329 - #15 ,
INFO  22:15:11,330 - #42 bool
INFO  22:15:11,330 - #42 c
INFO  22:15:11,330 - #8 )
INFO  22:15:11,330 - #4 {
INFO  22:15:11,330 - #12 return
INFO  22:15:11,330 - #41 1
INFO  22:15:11,330 - #6 ;
INFO  22:15:11,330 - #5 }
INFO  22:15:11,330 - #17 void
INFO  22:15:11,331 - #42 func
INFO  22:15:11,331 - #7 (
INFO  22:15:11,331 - #8 )
INFO  22:15:11,332 - #42 int
INFO  22:15:11,332 - #42 y
INFO  22:15:11,332 - #6 ;
INFO  22:15:11,332 - #42 int
INFO  22:15:11,333 - #42 x
INFO  22:15:11,333 - #6 ;
INFO  22:15:11,333 - #4 {
INFO  22:15:11,333 - #42 x
INFO  22:15:11,333 - #11 =
INFO  22:15:11,334 - #41 1
INFO  22:15:11,334 - #6 ;
INFO  22:15:11,334 - #42 y
INFO  22:15:11,334 - #11 =
INFO  22:15:11,334 - #42 main
INFO  22:15:11,334 - #7 (
INFO  22:15:11,334 - #41 1
INFO  22:15:11,334 - #15 ,
INFO  22:15:11,335 - #44 c
INFO  22:15:11,335 - #15 ,
INFO  22:15:11,335 - #43 true
INFO  22:15:11,335 - #8 )
INFO  22:15:11,335 - #6 ;
INFO  22:15:11,336 - #5 }
INFO  22:15:11,336 - #5 }
INFO  22:15:11,342 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:15:11,342 - ===================================
INFO  22:15:11,345 - Obradjuje se funckijamain na liniji 6
INFO  22:15:11,346 - Hello Var a na liniji 6
INFO  22:15:11,346 - Hello Var b na liniji 6
INFO  22:15:11,346 - Hello Var c na liniji 6
INFO  22:15:11,346 - Obradjuje se funckijafunc na liniji 11
INFO  22:15:11,346 - Hello Var y na liniji 12
INFO  22:15:11,346 - Hello Var x na liniji 13
INFO  22:15:11,346 - usao actParsAddOnMany na liniji 11
INFO  22:15:11,346 - 2 na liniji 11
INFO  22:15:11,347 - usao actParsAddOnMany na liniji 11
INFO  22:15:11,347 - 5 na liniji 11
INFO  22:15:11,348 - usao ActParsHas na liniji 16
INFO  22:15:11,348 - 1 na liniji 16
INFO  22:16:46,909 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:16:46,932 - #2 program
INFO  22:16:46,932 - #42 MJProgram
INFO  22:16:46,932 - #3 const
INFO  22:16:46,933 - #42 bool
INFO  22:16:46,933 - #42 b
INFO  22:16:46,933 - #11 =
INFO  22:16:46,933 - #43 true
INFO  22:16:46,933 - #6 ;
INFO  22:16:46,934 - #4 {
INFO  22:16:46,934 - #42 int
INFO  22:16:46,934 - #42 main
INFO  22:16:46,934 - #7 (
INFO  22:16:46,934 - #42 int
INFO  22:16:46,934 - #42 a
INFO  22:16:46,934 - #15 ,
INFO  22:16:46,935 - #42 char
INFO  22:16:46,935 - #42 b
INFO  22:16:46,935 - #15 ,
INFO  22:16:46,935 - #42 bool
INFO  22:16:46,935 - #42 c
INFO  22:16:46,935 - #8 )
INFO  22:16:46,935 - #4 {
INFO  22:16:46,935 - #12 return
INFO  22:16:46,935 - #41 1
INFO  22:16:46,935 - #6 ;
INFO  22:16:46,936 - #5 }
INFO  22:16:46,936 - #17 void
INFO  22:16:46,936 - #42 func
INFO  22:16:46,936 - #7 (
INFO  22:16:46,936 - #8 )
INFO  22:16:46,937 - #42 int
INFO  22:16:46,937 - #42 y
INFO  22:16:46,937 - #6 ;
INFO  22:16:46,937 - #42 int
INFO  22:16:46,937 - #42 x
INFO  22:16:46,938 - #6 ;
INFO  22:16:46,938 - #4 {
INFO  22:16:46,938 - #42 x
INFO  22:16:46,938 - #11 =
INFO  22:16:46,938 - #41 1
INFO  22:16:46,938 - #6 ;
INFO  22:16:46,938 - #42 y
INFO  22:16:46,939 - #11 =
INFO  22:16:46,939 - #42 main
INFO  22:16:46,939 - #7 (
INFO  22:16:46,939 - #41 1
INFO  22:16:46,939 - #15 ,
INFO  22:16:46,939 - #44 c
INFO  22:16:46,939 - #15 ,
INFO  22:16:46,940 - #43 true
INFO  22:16:46,940 - #8 )
INFO  22:16:46,940 - #6 ;
INFO  22:16:46,941 - #5 }
INFO  22:16:46,941 - #5 }
INFO  22:16:46,948 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:16:46,948 - ===================================
INFO  22:16:46,951 - Obradjuje se funckijamain na liniji 6
INFO  22:16:46,951 - Hello Var a na liniji 6
INFO  22:16:46,951 - Hello Var b na liniji 6
INFO  22:16:46,951 - Hello Var c na liniji 6
INFO  22:16:46,951 - Obradjuje se funckijafunc na liniji 11
INFO  22:16:46,952 - Hello Var y na liniji 12
INFO  22:16:46,952 - Hello Var x na liniji 13
INFO  22:16:46,952 - usao actParsAddOnMany na liniji 11
INFO  22:16:46,952 - 2 na liniji 11
INFO  22:16:46,952 - usao actParsAddOnMany na liniji 11
INFO  22:16:46,952 - 5 na liniji 11
INFO  22:16:46,952 - usao ActParsHas na liniji 16
INFO  22:16:46,952 - 1 na liniji 16
INFO  22:17:09,625 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:17:09,650 - #2 program
INFO  22:17:09,650 - #42 MJProgram
INFO  22:17:09,650 - #3 const
INFO  22:17:09,650 - #42 bool
INFO  22:17:09,651 - #42 b
INFO  22:17:09,651 - #11 =
INFO  22:17:09,651 - #43 true
INFO  22:17:09,651 - #6 ;
INFO  22:17:09,651 - #4 {
INFO  22:17:09,652 - #42 int
INFO  22:17:09,652 - #42 main
INFO  22:17:09,652 - #7 (
INFO  22:17:09,652 - #42 int
INFO  22:17:09,652 - #42 a
INFO  22:17:09,652 - #15 ,
INFO  22:17:09,653 - #42 char
INFO  22:17:09,653 - #42 b
INFO  22:17:09,653 - #15 ,
INFO  22:17:09,653 - #42 bool
INFO  22:17:09,653 - #42 c
INFO  22:17:09,653 - #8 )
INFO  22:17:09,653 - #4 {
INFO  22:17:09,653 - #12 return
INFO  22:17:09,653 - #41 1
INFO  22:17:09,653 - #6 ;
INFO  22:17:09,653 - #5 }
INFO  22:17:09,654 - #17 void
INFO  22:17:09,654 - #42 func
INFO  22:17:09,654 - #7 (
INFO  22:17:09,654 - #8 )
INFO  22:17:09,655 - #42 int
INFO  22:17:09,655 - #42 y
INFO  22:17:09,655 - #6 ;
INFO  22:17:09,655 - #42 int
INFO  22:17:09,655 - #42 x
INFO  22:17:09,655 - #6 ;
INFO  22:17:09,655 - #4 {
INFO  22:17:09,655 - #42 x
INFO  22:17:09,655 - #11 =
INFO  22:17:09,656 - #41 1
INFO  22:17:09,656 - #6 ;
INFO  22:17:09,656 - #42 y
INFO  22:17:09,656 - #11 =
INFO  22:17:09,656 - #42 main
INFO  22:17:09,657 - #7 (
INFO  22:17:09,657 - #41 1
INFO  22:17:09,657 - #15 ,
INFO  22:17:09,657 - #44 c
INFO  22:17:09,657 - #15 ,
INFO  22:17:09,657 - #43 true
INFO  22:17:09,658 - #15 ,
INFO  22:17:09,658 - #41 1
INFO  22:17:09,658 - #8 )
INFO  22:17:09,658 - #6 ;
INFO  22:17:09,658 - #5 }
INFO  22:17:09,658 - #5 }
INFO  22:17:09,665 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnMany(
                              ActParsAddOnNone(
                              ) [ActParsAddOnNone]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorBool(
                                   true
                                  ) [FactorBool]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:17:09,665 - ===================================
INFO  22:17:09,668 - Obradjuje se funckijamain na liniji 6
INFO  22:17:09,668 - Hello Var a na liniji 6
INFO  22:17:09,668 - Hello Var b na liniji 6
INFO  22:17:09,668 - Hello Var c na liniji 6
INFO  22:17:09,668 - Obradjuje se funckijafunc na liniji 11
INFO  22:17:09,668 - Hello Var y na liniji 12
INFO  22:17:09,669 - Hello Var x na liniji 13
INFO  22:17:09,669 - usao actParsAddOnMany na liniji 11
INFO  22:17:09,669 - 2 na liniji 11
INFO  22:17:09,669 - usao actParsAddOnMany na liniji 11
INFO  22:17:09,670 - 5 na liniji 11
INFO  22:17:09,670 - usao actParsAddOnMany na liniji 11
INFO  22:17:09,670 - 1 na liniji 11
INFO  22:17:09,670 - usao ActParsHas na liniji 16
INFO  22:17:09,670 - 1 na liniji 16
INFO  22:17:21,302 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:17:21,327 - #2 program
INFO  22:17:21,327 - #42 MJProgram
INFO  22:17:21,327 - #3 const
INFO  22:17:21,328 - #42 bool
INFO  22:17:21,328 - #42 b
INFO  22:17:21,328 - #11 =
INFO  22:17:21,328 - #43 true
INFO  22:17:21,328 - #6 ;
INFO  22:17:21,329 - #4 {
INFO  22:17:21,330 - #42 int
INFO  22:17:21,330 - #42 main
INFO  22:17:21,330 - #7 (
INFO  22:17:21,330 - #42 int
INFO  22:17:21,330 - #42 a
INFO  22:17:21,330 - #15 ,
INFO  22:17:21,330 - #42 char
INFO  22:17:21,331 - #42 b
INFO  22:17:21,331 - #15 ,
INFO  22:17:21,331 - #42 bool
INFO  22:17:21,331 - #42 c
INFO  22:17:21,331 - #8 )
INFO  22:17:21,331 - #4 {
INFO  22:17:21,331 - #12 return
INFO  22:17:21,331 - #41 1
INFO  22:17:21,331 - #6 ;
INFO  22:17:21,332 - #5 }
INFO  22:17:21,332 - #17 void
INFO  22:17:21,332 - #42 func
INFO  22:17:21,332 - #7 (
INFO  22:17:21,333 - #8 )
INFO  22:17:21,333 - #42 int
INFO  22:17:21,333 - #42 y
INFO  22:17:21,333 - #6 ;
INFO  22:17:21,333 - #42 int
INFO  22:17:21,334 - #42 x
INFO  22:17:21,334 - #6 ;
INFO  22:17:21,334 - #4 {
INFO  22:17:21,334 - #42 x
INFO  22:17:21,334 - #11 =
INFO  22:17:21,335 - #41 1
INFO  22:17:21,335 - #6 ;
INFO  22:17:21,335 - #42 y
INFO  22:17:21,335 - #11 =
INFO  22:17:21,335 - #42 main
INFO  22:17:21,335 - #7 (
INFO  22:17:21,335 - #43 false
INFO  22:17:21,335 - #15 ,
INFO  22:17:21,336 - #44 c
INFO  22:17:21,336 - #15 ,
INFO  22:17:21,336 - #43 true
INFO  22:17:21,336 - #15 ,
INFO  22:17:21,337 - #41 1
INFO  22:17:21,337 - #8 )
INFO  22:17:21,337 - #6 ;
INFO  22:17:21,337 - #5 }
INFO  22:17:21,337 - #5 }
INFO  22:17:21,345 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorBool(
                               false
                              ) [FactorBool]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnMany(
                              ActParsAddOnNone(
                              ) [ActParsAddOnNone]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorBool(
                                   true
                                  ) [FactorBool]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:17:21,345 - ===================================
INFO  22:17:21,348 - Obradjuje se funckijamain na liniji 6
INFO  22:17:21,348 - Hello Var a na liniji 6
INFO  22:17:21,349 - Hello Var b na liniji 6
INFO  22:17:21,349 - Hello Var c na liniji 6
INFO  22:17:21,349 - Obradjuje se funckijafunc na liniji 11
INFO  22:17:21,349 - Hello Var y na liniji 12
INFO  22:17:21,349 - Hello Var x na liniji 13
INFO  22:17:21,349 - usao actParsAddOnMany na liniji 11
INFO  22:17:21,349 - 2 na liniji 11
INFO  22:17:21,349 - usao actParsAddOnMany na liniji 11
INFO  22:17:21,350 - 5 na liniji 11
INFO  22:17:21,350 - usao actParsAddOnMany na liniji 11
INFO  22:17:21,350 - 1 na liniji 11
INFO  22:17:21,350 - usao ActParsHas na liniji 16
INFO  22:17:21,350 - 5 na liniji 16
INFO  22:17:46,636 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:17:46,658 - #2 program
INFO  22:17:46,659 - #42 MJProgram
INFO  22:17:46,659 - #3 const
INFO  22:17:46,659 - #42 bool
INFO  22:17:46,659 - #42 b
INFO  22:17:46,660 - #11 =
INFO  22:17:46,660 - #43 true
INFO  22:17:46,660 - #6 ;
INFO  22:17:46,660 - #4 {
INFO  22:17:46,661 - #42 int
INFO  22:17:46,661 - #42 main
INFO  22:17:46,661 - #7 (
INFO  22:17:46,661 - #42 int
INFO  22:17:46,661 - #42 a
INFO  22:17:46,661 - #15 ,
INFO  22:17:46,661 - #42 char
INFO  22:17:46,661 - #42 b
INFO  22:17:46,661 - #15 ,
INFO  22:17:46,662 - #42 bool
INFO  22:17:46,662 - #42 c
INFO  22:17:46,662 - #8 )
INFO  22:17:46,662 - #4 {
INFO  22:17:46,662 - #12 return
INFO  22:17:46,662 - #41 1
INFO  22:17:46,662 - #6 ;
INFO  22:17:46,662 - #5 }
INFO  22:17:46,662 - #17 void
INFO  22:17:46,663 - #42 func
INFO  22:17:46,663 - #7 (
INFO  22:17:46,663 - #8 )
INFO  22:17:46,663 - #42 int
INFO  22:17:46,664 - #42 y
INFO  22:17:46,664 - #6 ;
INFO  22:17:46,664 - #42 int
INFO  22:17:46,664 - #42 x
INFO  22:17:46,664 - #6 ;
INFO  22:17:46,664 - #4 {
INFO  22:17:46,664 - #42 x
INFO  22:17:46,664 - #11 =
INFO  22:17:46,665 - #41 1
INFO  22:17:46,665 - #6 ;
INFO  22:17:46,665 - #42 y
INFO  22:17:46,665 - #11 =
INFO  22:17:46,665 - #42 main
INFO  22:17:46,665 - #7 (
INFO  22:17:46,665 - #41 1
INFO  22:17:46,665 - #15 ,
INFO  22:17:46,666 - #44 c
INFO  22:17:46,666 - #15 ,
INFO  22:17:46,666 - #43 true
INFO  22:17:46,666 - #8 )
INFO  22:17:46,667 - #6 ;
INFO  22:17:46,667 - #5 }
INFO  22:17:46,667 - #5 }
INFO  22:17:46,674 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:17:46,674 - ===================================
INFO  22:17:46,676 - Obradjuje se funckijamain na liniji 6
INFO  22:17:46,676 - Hello Var a na liniji 6
INFO  22:17:46,677 - Hello Var b na liniji 6
INFO  22:17:46,677 - Hello Var c na liniji 6
INFO  22:17:46,677 - Obradjuje se funckijafunc na liniji 11
INFO  22:17:46,677 - Hello Var y na liniji 12
INFO  22:17:46,677 - Hello Var x na liniji 13
INFO  22:17:46,677 - usao actParsAddOnMany na liniji 11
INFO  22:17:46,677 - 2 na liniji 11
INFO  22:17:46,677 - usao actParsAddOnMany na liniji 11
INFO  22:17:46,677 - 5 na liniji 11
INFO  22:17:46,677 - usao ActParsHas na liniji 16
INFO  22:17:46,677 - 1 na liniji 16
INFO  22:24:11,291 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:24:11,315 - #2 program
INFO  22:24:11,315 - #42 MJProgram
INFO  22:24:11,315 - #3 const
INFO  22:24:11,315 - #42 bool
INFO  22:24:11,316 - #42 b
INFO  22:24:11,316 - #11 =
INFO  22:24:11,316 - #43 true
INFO  22:24:11,316 - #6 ;
INFO  22:24:11,316 - #4 {
INFO  22:24:11,317 - #42 int
INFO  22:24:11,317 - #42 main
INFO  22:24:11,317 - #7 (
INFO  22:24:11,317 - #42 int
INFO  22:24:11,317 - #42 a
INFO  22:24:11,317 - #15 ,
INFO  22:24:11,317 - #42 char
INFO  22:24:11,318 - #42 b
INFO  22:24:11,318 - #15 ,
INFO  22:24:11,318 - #42 bool
INFO  22:24:11,318 - #42 c
INFO  22:24:11,318 - #8 )
INFO  22:24:11,318 - #4 {
INFO  22:24:11,318 - #12 return
INFO  22:24:11,318 - #41 1
INFO  22:24:11,318 - #6 ;
INFO  22:24:11,318 - #5 }
INFO  22:24:11,319 - #17 void
INFO  22:24:11,319 - #42 func
INFO  22:24:11,319 - #7 (
INFO  22:24:11,319 - #8 )
INFO  22:24:11,320 - #42 int
INFO  22:24:11,320 - #42 y
INFO  22:24:11,320 - #6 ;
INFO  22:24:11,320 - #42 int
INFO  22:24:11,320 - #42 x
INFO  22:24:11,320 - #6 ;
INFO  22:24:11,321 - #4 {
INFO  22:24:11,321 - #42 x
INFO  22:24:11,321 - #11 =
INFO  22:24:11,321 - #41 1
INFO  22:24:11,321 - #6 ;
INFO  22:24:11,321 - #42 y
INFO  22:24:11,322 - #11 =
INFO  22:24:11,322 - #42 main
INFO  22:24:11,322 - #7 (
INFO  22:24:11,322 - #41 1
INFO  22:24:11,322 - #15 ,
INFO  22:24:11,322 - #44 c
INFO  22:24:11,323 - #15 ,
INFO  22:24:11,323 - #43 true
INFO  22:24:11,323 - #8 )
INFO  22:24:11,323 - #6 ;
INFO  22:24:11,323 - #5 }
INFO  22:24:11,324 - #5 }
INFO  22:24:11,331 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:24:11,331 - ===================================
INFO  22:24:11,334 - Obradjuje se funckijamain na liniji 6
INFO  22:24:11,334 - Hello Var a na liniji 6
INFO  22:24:11,334 - Hello Var b na liniji 6
INFO  22:24:11,334 - Hello Var c na liniji 6
INFO  22:24:11,334 - Obradjuje se funckijafunc na liniji 11
INFO  22:24:11,334 - Hello Var y na liniji 12
INFO  22:24:11,334 - Hello Var x na liniji 13
INFO  22:24:11,334 - usao actParsAddOnMany na liniji 11
INFO  22:24:11,335 - 2 na liniji 11
INFO  22:24:11,335 - usao actParsAddOnMany na liniji 11
INFO  22:24:11,335 - 5 na liniji 11
INFO  22:24:11,335 - usao ActParsHas na liniji 16
INFO  22:24:11,335 - 1 na liniji 16
ERROR 22:24:11,335 - Greska: Lose prosledjeni parametri! dsAct na liniji 16
ERROR 22:24:11,335 - Greska: Lose prosledjeni parametri! dsAct na liniji 16
INFO  22:24:23,133 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:24:23,156 - #2 program
INFO  22:24:23,156 - #42 MJProgram
INFO  22:24:23,156 - #3 const
INFO  22:24:23,157 - #42 bool
INFO  22:24:23,157 - #42 b
INFO  22:24:23,157 - #11 =
INFO  22:24:23,157 - #43 true
INFO  22:24:23,157 - #6 ;
INFO  22:24:23,158 - #4 {
INFO  22:24:23,159 - #42 int
INFO  22:24:23,159 - #42 main
INFO  22:24:23,159 - #7 (
INFO  22:24:23,159 - #42 int
INFO  22:24:23,159 - #42 a
INFO  22:24:23,159 - #15 ,
INFO  22:24:23,159 - #42 char
INFO  22:24:23,159 - #42 b
INFO  22:24:23,159 - #15 ,
INFO  22:24:23,159 - #42 bool
INFO  22:24:23,159 - #42 c
INFO  22:24:23,159 - #8 )
INFO  22:24:23,159 - #4 {
INFO  22:24:23,160 - #12 return
INFO  22:24:23,160 - #41 1
INFO  22:24:23,160 - #6 ;
INFO  22:24:23,160 - #5 }
INFO  22:24:23,160 - #17 void
INFO  22:24:23,161 - #42 func
INFO  22:24:23,161 - #7 (
INFO  22:24:23,161 - #8 )
INFO  22:24:23,161 - #42 int
INFO  22:24:23,161 - #42 y
INFO  22:24:23,161 - #6 ;
INFO  22:24:23,162 - #42 int
INFO  22:24:23,162 - #42 x
INFO  22:24:23,162 - #6 ;
INFO  22:24:23,162 - #4 {
INFO  22:24:23,162 - #42 x
INFO  22:24:23,162 - #11 =
INFO  22:24:23,163 - #41 1
INFO  22:24:23,163 - #6 ;
INFO  22:24:23,163 - #42 y
INFO  22:24:23,163 - #11 =
INFO  22:24:23,163 - #42 main
INFO  22:24:23,163 - #7 (
INFO  22:24:23,163 - #41 1
INFO  22:24:23,163 - #15 ,
INFO  22:24:23,164 - #44 c
INFO  22:24:23,164 - #15 ,
INFO  22:24:23,164 - #43 true
INFO  22:24:23,164 - #8 )
INFO  22:24:23,164 - #6 ;
INFO  22:24:23,165 - #5 }
INFO  22:24:23,165 - #5 }
INFO  22:24:23,172 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:24:23,172 - ===================================
INFO  22:24:23,175 - Obradjuje se funckijamain na liniji 6
INFO  22:24:23,175 - Hello Var a na liniji 6
INFO  22:24:23,175 - Hello Var b na liniji 6
INFO  22:24:23,175 - Hello Var c na liniji 6
INFO  22:24:23,175 - Obradjuje se funckijafunc na liniji 11
INFO  22:24:23,175 - Hello Var y na liniji 12
INFO  22:24:23,175 - Hello Var x na liniji 13
INFO  22:24:23,176 - usao actParsAddOnMany na liniji 11
INFO  22:24:23,176 - 2 na liniji 11
INFO  22:24:23,176 - usao actParsAddOnMany na liniji 11
INFO  22:24:23,176 - 5 na liniji 11
INFO  22:24:23,176 - usao ActParsHas na liniji 16
INFO  22:24:23,176 - 1 na liniji 16
INFO  22:24:33,771 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:24:33,794 - #2 program
INFO  22:24:33,794 - #42 MJProgram
INFO  22:24:33,794 - #3 const
INFO  22:24:33,794 - #42 bool
INFO  22:24:33,794 - #42 b
INFO  22:24:33,795 - #11 =
INFO  22:24:33,795 - #43 true
INFO  22:24:33,795 - #6 ;
INFO  22:24:33,795 - #4 {
INFO  22:24:33,796 - #42 int
INFO  22:24:33,796 - #42 main
INFO  22:24:33,796 - #7 (
INFO  22:24:33,796 - #42 int
INFO  22:24:33,796 - #42 a
INFO  22:24:33,796 - #15 ,
INFO  22:24:33,796 - #42 char
INFO  22:24:33,796 - #42 b
INFO  22:24:33,796 - #15 ,
INFO  22:24:33,797 - #42 bool
INFO  22:24:33,797 - #42 c
INFO  22:24:33,797 - #8 )
INFO  22:24:33,797 - #4 {
INFO  22:24:33,797 - #12 return
INFO  22:24:33,797 - #41 1
INFO  22:24:33,797 - #6 ;
INFO  22:24:33,797 - #5 }
INFO  22:24:33,797 - #17 void
INFO  22:24:33,798 - #42 func
INFO  22:24:33,798 - #7 (
INFO  22:24:33,798 - #8 )
INFO  22:24:33,798 - #42 int
INFO  22:24:33,799 - #42 y
INFO  22:24:33,799 - #6 ;
INFO  22:24:33,799 - #42 int
INFO  22:24:33,799 - #42 x
INFO  22:24:33,799 - #6 ;
INFO  22:24:33,799 - #4 {
INFO  22:24:33,799 - #42 x
INFO  22:24:33,799 - #11 =
INFO  22:24:33,800 - #41 1
INFO  22:24:33,800 - #6 ;
INFO  22:24:33,800 - #42 y
INFO  22:24:33,800 - #11 =
INFO  22:24:33,800 - #42 main
INFO  22:24:33,800 - #7 (
INFO  22:24:33,800 - #41 1
INFO  22:24:33,800 - #15 ,
INFO  22:24:33,801 - #44 c
INFO  22:24:33,801 - #15 ,
INFO  22:24:33,801 - #44 c
INFO  22:24:33,801 - #8 )
INFO  22:24:33,802 - #6 ;
INFO  22:24:33,802 - #5 }
INFO  22:24:33,802 - #5 }
INFO  22:24:33,809 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorChar(
                                 c
                                ) [FactorChar]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:24:33,809 - ===================================
INFO  22:24:33,812 - Obradjuje se funckijamain na liniji 6
INFO  22:24:33,812 - Hello Var a na liniji 6
INFO  22:24:33,812 - Hello Var b na liniji 6
INFO  22:24:33,812 - Hello Var c na liniji 6
INFO  22:24:33,813 - Obradjuje se funckijafunc na liniji 11
INFO  22:24:33,813 - Hello Var y na liniji 12
INFO  22:24:33,813 - Hello Var x na liniji 13
INFO  22:24:33,813 - usao actParsAddOnMany na liniji 11
INFO  22:24:33,813 - 2 na liniji 11
INFO  22:24:33,813 - usao actParsAddOnMany na liniji 11
INFO  22:24:33,813 - 2 na liniji 11
INFO  22:24:33,813 - usao ActParsHas na liniji 16
INFO  22:24:33,813 - 1 na liniji 16
ERROR 22:24:33,813 - Greska: Lose prosledjeni parametri! dsAct na liniji 16
INFO  22:24:43,938 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:24:43,961 - #2 program
INFO  22:24:43,961 - #42 MJProgram
INFO  22:24:43,961 - #3 const
INFO  22:24:43,961 - #42 bool
INFO  22:24:43,961 - #42 b
INFO  22:24:43,962 - #11 =
INFO  22:24:43,962 - #43 true
INFO  22:24:43,962 - #6 ;
INFO  22:24:43,962 - #4 {
INFO  22:24:43,963 - #42 int
INFO  22:24:43,963 - #42 main
INFO  22:24:43,963 - #7 (
INFO  22:24:43,963 - #42 int
INFO  22:24:43,963 - #42 a
INFO  22:24:43,963 - #15 ,
INFO  22:24:43,963 - #42 char
INFO  22:24:43,963 - #42 b
INFO  22:24:43,963 - #15 ,
INFO  22:24:43,964 - #42 bool
INFO  22:24:43,964 - #42 c
INFO  22:24:43,964 - #8 )
INFO  22:24:43,964 - #4 {
INFO  22:24:43,964 - #12 return
INFO  22:24:43,964 - #41 1
INFO  22:24:43,964 - #6 ;
INFO  22:24:43,964 - #5 }
INFO  22:24:43,964 - #17 void
INFO  22:24:43,965 - #42 func
INFO  22:24:43,965 - #7 (
INFO  22:24:43,965 - #8 )
INFO  22:24:43,965 - #42 int
INFO  22:24:43,966 - #42 y
INFO  22:24:43,966 - #6 ;
INFO  22:24:43,966 - #42 int
INFO  22:24:43,966 - #42 x
INFO  22:24:43,966 - #6 ;
INFO  22:24:43,966 - #4 {
INFO  22:24:43,966 - #42 x
INFO  22:24:43,966 - #11 =
INFO  22:24:43,967 - #41 1
INFO  22:24:43,967 - #6 ;
INFO  22:24:43,967 - #42 y
INFO  22:24:43,967 - #11 =
INFO  22:24:43,967 - #42 main
INFO  22:24:43,968 - #7 (
INFO  22:24:43,968 - #41 1
INFO  22:24:43,968 - #15 ,
INFO  22:24:43,968 - #44 c
INFO  22:24:43,968 - #15 ,
INFO  22:24:43,969 - #41 1
INFO  22:24:43,969 - #8 )
INFO  22:24:43,969 - #6 ;
INFO  22:24:43,969 - #5 }
INFO  22:24:43,969 - #5 }
INFO  22:24:43,976 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:24:43,976 - ===================================
INFO  22:24:43,979 - Obradjuje se funckijamain na liniji 6
INFO  22:24:43,979 - Hello Var a na liniji 6
INFO  22:24:43,979 - Hello Var b na liniji 6
INFO  22:24:43,979 - Hello Var c na liniji 6
INFO  22:24:43,979 - Obradjuje se funckijafunc na liniji 11
INFO  22:24:43,980 - Hello Var y na liniji 12
INFO  22:24:43,980 - Hello Var x na liniji 13
INFO  22:24:43,980 - usao actParsAddOnMany na liniji 11
INFO  22:24:43,980 - 2 na liniji 11
INFO  22:24:43,980 - usao actParsAddOnMany na liniji 11
INFO  22:24:43,980 - 1 na liniji 11
INFO  22:24:43,980 - usao ActParsHas na liniji 16
INFO  22:24:43,980 - 1 na liniji 16
ERROR 22:24:43,980 - Greska: Lose prosledjeni parametri! dsAct na liniji 16
INFO  22:24:56,764 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:24:56,787 - #2 program
INFO  22:24:56,787 - #42 MJProgram
INFO  22:24:56,787 - #3 const
INFO  22:24:56,788 - #42 bool
INFO  22:24:56,788 - #42 b
INFO  22:24:56,788 - #11 =
INFO  22:24:56,788 - #43 true
INFO  22:24:56,788 - #6 ;
INFO  22:24:56,789 - #4 {
INFO  22:24:56,789 - #42 int
INFO  22:24:56,789 - #42 main
INFO  22:24:56,789 - #7 (
INFO  22:24:56,789 - #42 int
INFO  22:24:56,789 - #42 a
INFO  22:24:56,789 - #15 ,
INFO  22:24:56,790 - #42 char
INFO  22:24:56,790 - #42 b
INFO  22:24:56,790 - #15 ,
INFO  22:24:56,790 - #42 bool
INFO  22:24:56,790 - #42 c
INFO  22:24:56,790 - #8 )
INFO  22:24:56,790 - #4 {
INFO  22:24:56,790 - #12 return
INFO  22:24:56,790 - #41 1
INFO  22:24:56,790 - #6 ;
INFO  22:24:56,790 - #5 }
INFO  22:24:56,791 - #17 void
INFO  22:24:56,791 - #42 func
INFO  22:24:56,791 - #7 (
INFO  22:24:56,791 - #8 )
INFO  22:24:56,792 - #42 int
INFO  22:24:56,792 - #42 y
INFO  22:24:56,792 - #6 ;
INFO  22:24:56,792 - #42 int
INFO  22:24:56,792 - #42 x
INFO  22:24:56,792 - #6 ;
INFO  22:24:56,793 - #4 {
INFO  22:24:56,793 - #42 x
INFO  22:24:56,793 - #11 =
INFO  22:24:56,793 - #41 1
INFO  22:24:56,793 - #6 ;
INFO  22:24:56,793 - #42 y
INFO  22:24:56,794 - #11 =
INFO  22:24:56,794 - #42 main
INFO  22:24:56,794 - #7 (
INFO  22:24:56,794 - #41 1
INFO  22:24:56,794 - #15 ,
INFO  22:24:56,794 - #44 c
INFO  22:24:56,794 - #8 )
INFO  22:24:56,795 - #6 ;
INFO  22:24:56,795 - #5 }
INFO  22:24:56,795 - #5 }
INFO  22:24:56,802 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnNone(
                          ) [ActParsAddOnNone]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorChar(
                                 c
                                ) [FactorChar]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:24:56,802 - ===================================
INFO  22:24:56,804 - Obradjuje se funckijamain na liniji 6
INFO  22:24:56,805 - Hello Var a na liniji 6
INFO  22:24:56,805 - Hello Var b na liniji 6
INFO  22:24:56,805 - Hello Var c na liniji 6
INFO  22:24:56,805 - Obradjuje se funckijafunc na liniji 11
INFO  22:24:56,805 - Hello Var y na liniji 12
INFO  22:24:56,805 - Hello Var x na liniji 13
INFO  22:24:56,805 - usao actParsAddOnMany na liniji 11
INFO  22:24:56,805 - 2 na liniji 11
INFO  22:24:56,806 - usao ActParsHas na liniji 16
INFO  22:24:56,806 - 1 na liniji 16
INFO  22:25:04,617 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:25:04,640 - #2 program
INFO  22:25:04,640 - #42 MJProgram
INFO  22:25:04,640 - #3 const
INFO  22:25:04,641 - #42 bool
INFO  22:25:04,641 - #42 b
INFO  22:25:04,641 - #11 =
INFO  22:25:04,641 - #43 true
INFO  22:25:04,641 - #6 ;
INFO  22:25:04,642 - #4 {
INFO  22:25:04,642 - #42 int
INFO  22:25:04,642 - #42 main
INFO  22:25:04,642 - #7 (
INFO  22:25:04,642 - #42 int
INFO  22:25:04,643 - #42 a
INFO  22:25:04,643 - #15 ,
INFO  22:25:04,643 - #42 char
INFO  22:25:04,643 - #42 b
INFO  22:25:04,643 - #15 ,
INFO  22:25:04,643 - #42 bool
INFO  22:25:04,643 - #42 c
INFO  22:25:04,643 - #8 )
INFO  22:25:04,643 - #4 {
INFO  22:25:04,643 - #12 return
INFO  22:25:04,643 - #41 1
INFO  22:25:04,643 - #6 ;
INFO  22:25:04,644 - #5 }
INFO  22:25:04,644 - #17 void
INFO  22:25:04,644 - #42 func
INFO  22:25:04,644 - #7 (
INFO  22:25:04,644 - #8 )
INFO  22:25:04,645 - #42 int
INFO  22:25:04,645 - #42 y
INFO  22:25:04,645 - #6 ;
INFO  22:25:04,645 - #42 int
INFO  22:25:04,645 - #42 x
INFO  22:25:04,646 - #6 ;
INFO  22:25:04,646 - #4 {
INFO  22:25:04,646 - #42 x
INFO  22:25:04,646 - #11 =
INFO  22:25:04,646 - #41 1
INFO  22:25:04,646 - #6 ;
INFO  22:25:04,646 - #42 y
INFO  22:25:04,647 - #11 =
INFO  22:25:04,647 - #42 main
INFO  22:25:04,647 - #7 (
INFO  22:25:04,647 - #41 1
INFO  22:25:04,647 - #15 ,
INFO  22:25:04,647 - #44 c
INFO  22:25:04,647 - #15 ,
INFO  22:25:04,648 - #41 1
INFO  22:25:04,648 - #15 ,
INFO  22:25:04,648 - #41 1
INFO  22:25:04,648 - #8 )
INFO  22:25:04,648 - #6 ;
INFO  22:25:04,648 - #5 }
INFO  22:25:04,649 - #5 }
INFO  22:25:04,656 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnMany(
                              ActParsAddOnNone(
                              ) [ActParsAddOnNone]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:25:04,656 - ===================================
INFO  22:25:04,659 - Obradjuje se funckijamain na liniji 6
INFO  22:25:04,659 - Hello Var a na liniji 6
INFO  22:25:04,659 - Hello Var b na liniji 6
INFO  22:25:04,659 - Hello Var c na liniji 6
INFO  22:25:04,659 - Obradjuje se funckijafunc na liniji 11
INFO  22:25:04,660 - Hello Var y na liniji 12
INFO  22:25:04,660 - Hello Var x na liniji 13
INFO  22:25:04,660 - usao actParsAddOnMany na liniji 11
INFO  22:25:04,660 - 2 na liniji 11
INFO  22:25:04,660 - usao actParsAddOnMany na liniji 11
INFO  22:25:04,661 - 1 na liniji 11
INFO  22:25:04,661 - usao actParsAddOnMany na liniji 11
INFO  22:25:04,661 - 1 na liniji 11
INFO  22:25:04,661 - usao ActParsHas na liniji 16
INFO  22:25:04,661 - 1 na liniji 16
ERROR 22:25:04,661 - Greska: Lose prosledjeni parametri! dsAct na liniji 16
INFO  22:26:20,500 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:26:20,523 - #2 program
INFO  22:26:20,523 - #42 MJProgram
INFO  22:26:20,523 - #3 const
INFO  22:26:20,524 - #42 bool
INFO  22:26:20,524 - #42 b
INFO  22:26:20,524 - #11 =
INFO  22:26:20,524 - #43 true
INFO  22:26:20,525 - #6 ;
INFO  22:26:20,525 - #4 {
INFO  22:26:20,526 - #42 int
INFO  22:26:20,526 - #42 main
INFO  22:26:20,526 - #7 (
INFO  22:26:20,526 - #42 int
INFO  22:26:20,526 - #42 a
INFO  22:26:20,526 - #15 ,
INFO  22:26:20,526 - #42 char
INFO  22:26:20,526 - #42 b
INFO  22:26:20,526 - #15 ,
INFO  22:26:20,527 - #42 bool
INFO  22:26:20,527 - #42 c
INFO  22:26:20,527 - #8 )
INFO  22:26:20,527 - #4 {
INFO  22:26:20,527 - #12 return
INFO  22:26:20,527 - #41 1
INFO  22:26:20,527 - #6 ;
INFO  22:26:20,527 - #5 }
INFO  22:26:20,527 - #17 void
INFO  22:26:20,528 - #42 func
INFO  22:26:20,528 - #7 (
INFO  22:26:20,528 - #8 )
INFO  22:26:20,528 - #42 int
INFO  22:26:20,528 - #42 y
INFO  22:26:20,529 - #6 ;
INFO  22:26:20,529 - #42 int
INFO  22:26:20,529 - #42 x
INFO  22:26:20,529 - #6 ;
INFO  22:26:20,529 - #4 {
INFO  22:26:20,529 - #42 x
INFO  22:26:20,529 - #11 =
INFO  22:26:20,530 - #41 1
INFO  22:26:20,530 - #6 ;
INFO  22:26:20,530 - #42 y
INFO  22:26:20,530 - #11 =
INFO  22:26:20,530 - #42 main
INFO  22:26:20,530 - #7 (
INFO  22:26:20,530 - #41 1
INFO  22:26:20,530 - #15 ,
INFO  22:26:20,531 - #44 c
INFO  22:26:20,531 - #15 ,
INFO  22:26:20,531 - #41 1
INFO  22:26:20,531 - #8 )
INFO  22:26:20,532 - #6 ;
INFO  22:26:20,532 - #5 }
INFO  22:26:20,532 - #5 }
INFO  22:26:20,539 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:26:20,539 - ===================================
INFO  22:26:20,542 - Obradjuje se funckijamain na liniji 6
INFO  22:26:20,542 - Hello Var a na liniji 6
INFO  22:26:20,542 - Hello Var b na liniji 6
INFO  22:26:20,542 - Hello Var c na liniji 6
INFO  22:26:20,543 - Obradjuje se funckijafunc na liniji 11
INFO  22:26:20,543 - Hello Var y na liniji 12
INFO  22:26:20,543 - Hello Var x na liniji 13
INFO  22:26:20,543 - usao actParsAddOnMany na liniji 11
INFO  22:26:20,543 - 2 na liniji 11
INFO  22:26:20,543 - usao actParsAddOnMany na liniji 11
INFO  22:26:20,543 - 1 na liniji 11
INFO  22:26:20,543 - usao ActParsHas na liniji 16
INFO  22:26:20,543 - 1 na liniji 16
ERROR 22:26:20,543 - Greska: Lose prosledjeni parametri! dsAct na liniji 16
INFO  22:26:30,363 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:26:30,386 - #2 program
INFO  22:26:30,386 - #42 MJProgram
INFO  22:26:30,386 - #3 const
INFO  22:26:30,387 - #42 bool
INFO  22:26:30,387 - #42 b
INFO  22:26:30,387 - #11 =
INFO  22:26:30,387 - #43 true
INFO  22:26:30,387 - #6 ;
INFO  22:26:30,388 - #4 {
INFO  22:26:30,388 - #42 int
INFO  22:26:30,388 - #42 main
INFO  22:26:30,388 - #7 (
INFO  22:26:30,388 - #42 int
INFO  22:26:30,388 - #42 a
INFO  22:26:30,388 - #15 ,
INFO  22:26:30,389 - #42 char
INFO  22:26:30,389 - #42 b
INFO  22:26:30,389 - #15 ,
INFO  22:26:30,389 - #42 bool
INFO  22:26:30,389 - #42 c
INFO  22:26:30,389 - #8 )
INFO  22:26:30,389 - #4 {
INFO  22:26:30,389 - #12 return
INFO  22:26:30,389 - #41 1
INFO  22:26:30,389 - #6 ;
INFO  22:26:30,389 - #5 }
INFO  22:26:30,390 - #17 void
INFO  22:26:30,390 - #42 func
INFO  22:26:30,390 - #7 (
INFO  22:26:30,390 - #8 )
INFO  22:26:30,391 - #42 int
INFO  22:26:30,391 - #42 y
INFO  22:26:30,391 - #6 ;
INFO  22:26:30,391 - #42 int
INFO  22:26:30,391 - #42 x
INFO  22:26:30,391 - #6 ;
INFO  22:26:30,391 - #4 {
INFO  22:26:30,392 - #42 x
INFO  22:26:30,392 - #11 =
INFO  22:26:30,392 - #41 1
INFO  22:26:30,392 - #6 ;
INFO  22:26:30,392 - #42 y
INFO  22:26:30,393 - #11 =
INFO  22:26:30,393 - #42 main
INFO  22:26:30,393 - #7 (
INFO  22:26:30,393 - #41 1
INFO  22:26:30,393 - #15 ,
INFO  22:26:30,393 - #44 c
INFO  22:26:30,393 - #15 ,
INFO  22:26:30,394 - #43 false
INFO  22:26:30,394 - #8 )
INFO  22:26:30,394 - #6 ;
INFO  22:26:30,394 - #5 }
INFO  22:26:30,394 - #5 }
INFO  22:26:30,401 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 false
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:26:30,402 - ===================================
INFO  22:26:30,404 - Obradjuje se funckijamain na liniji 6
INFO  22:26:30,404 - Hello Var a na liniji 6
INFO  22:26:30,404 - Hello Var b na liniji 6
INFO  22:26:30,404 - Hello Var c na liniji 6
INFO  22:26:30,405 - Obradjuje se funckijafunc na liniji 11
INFO  22:26:30,405 - Hello Var y na liniji 12
INFO  22:26:30,405 - Hello Var x na liniji 13
INFO  22:26:30,405 - usao actParsAddOnMany na liniji 11
INFO  22:26:30,405 - 2 na liniji 11
INFO  22:26:30,405 - usao actParsAddOnMany na liniji 11
INFO  22:26:30,405 - 5 na liniji 11
INFO  22:26:30,405 - usao ActParsHas na liniji 16
INFO  22:26:30,405 - 1 na liniji 16
INFO  22:26:38,855 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:26:38,878 - #2 program
INFO  22:26:38,878 - #42 MJProgram
INFO  22:26:38,878 - #3 const
INFO  22:26:38,879 - #42 bool
INFO  22:26:38,879 - #42 b
INFO  22:26:38,879 - #11 =
INFO  22:26:38,879 - #43 true
INFO  22:26:38,879 - #6 ;
INFO  22:26:38,880 - #4 {
INFO  22:26:38,880 - #42 int
INFO  22:26:38,881 - #42 main
INFO  22:26:38,881 - #7 (
INFO  22:26:38,881 - #42 int
INFO  22:26:38,881 - #42 a
INFO  22:26:38,881 - #15 ,
INFO  22:26:38,881 - #42 char
INFO  22:26:38,881 - #42 b
INFO  22:26:38,881 - #15 ,
INFO  22:26:38,881 - #42 bool
INFO  22:26:38,881 - #42 c
INFO  22:26:38,881 - #8 )
INFO  22:26:38,881 - #4 {
INFO  22:26:38,881 - #12 return
INFO  22:26:38,882 - #41 1
INFO  22:26:38,882 - #6 ;
INFO  22:26:38,882 - #5 }
INFO  22:26:38,882 - #17 void
INFO  22:26:38,883 - #42 func
INFO  22:26:38,883 - #7 (
INFO  22:26:38,883 - #8 )
INFO  22:26:38,883 - #42 int
INFO  22:26:38,883 - #42 y
INFO  22:26:38,883 - #6 ;
INFO  22:26:38,883 - #42 int
INFO  22:26:38,884 - #42 x
INFO  22:26:38,884 - #6 ;
INFO  22:26:38,884 - #4 {
INFO  22:26:38,884 - #42 x
INFO  22:26:38,884 - #11 =
INFO  22:26:38,885 - #41 1
INFO  22:26:38,885 - #6 ;
INFO  22:26:38,885 - #42 y
INFO  22:26:38,885 - #11 =
INFO  22:26:38,885 - #42 main
INFO  22:26:38,885 - #7 (
INFO  22:26:38,885 - #41 1
INFO  22:26:38,885 - #15 ,
INFO  22:26:38,886 - #44 c
INFO  22:26:38,886 - #15 ,
INFO  22:26:38,886 - #43 false
INFO  22:26:38,886 - #15 ,
INFO  22:26:38,886 - #41 1
INFO  22:26:38,886 - #8 )
INFO  22:26:38,886 - #6 ;
INFO  22:26:38,887 - #5 }
INFO  22:26:38,887 - #5 }
INFO  22:26:38,894 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnMany(
                              ActParsAddOnNone(
                              ) [ActParsAddOnNone]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorBool(
                                   false
                                  ) [FactorBool]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:26:38,894 - ===================================
INFO  22:26:38,897 - Obradjuje se funckijamain na liniji 6
INFO  22:26:38,897 - Hello Var a na liniji 6
INFO  22:26:38,898 - Hello Var b na liniji 6
INFO  22:26:38,898 - Hello Var c na liniji 6
INFO  22:26:38,898 - Obradjuje se funckijafunc na liniji 11
INFO  22:26:38,898 - Hello Var y na liniji 12
INFO  22:26:38,898 - Hello Var x na liniji 13
INFO  22:26:38,898 - usao actParsAddOnMany na liniji 11
INFO  22:26:38,898 - 2 na liniji 11
INFO  22:26:38,898 - usao actParsAddOnMany na liniji 11
INFO  22:26:38,898 - 5 na liniji 11
INFO  22:26:38,899 - usao actParsAddOnMany na liniji 11
INFO  22:26:38,899 - 1 na liniji 11
INFO  22:26:38,899 - usao ActParsHas na liniji 16
INFO  22:26:38,899 - 1 na liniji 16
ERROR 22:26:38,899 - Greska: Lose prosledjeni parametri! dsAct na liniji 16
INFO  22:26:48,289 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:26:48,311 - #2 program
INFO  22:26:48,311 - #42 MJProgram
INFO  22:26:48,311 - #3 const
INFO  22:26:48,312 - #42 bool
INFO  22:26:48,312 - #42 b
INFO  22:26:48,312 - #11 =
INFO  22:26:48,312 - #43 true
INFO  22:26:48,312 - #6 ;
INFO  22:26:48,313 - #4 {
INFO  22:26:48,313 - #42 int
INFO  22:26:48,314 - #42 main
INFO  22:26:48,314 - #7 (
INFO  22:26:48,314 - #42 int
INFO  22:26:48,314 - #42 a
INFO  22:26:48,314 - #15 ,
INFO  22:26:48,314 - #42 char
INFO  22:26:48,314 - #42 b
INFO  22:26:48,314 - #15 ,
INFO  22:26:48,314 - #42 bool
INFO  22:26:48,314 - #42 c
INFO  22:26:48,315 - #8 )
INFO  22:26:48,315 - #4 {
INFO  22:26:48,315 - #12 return
INFO  22:26:48,315 - #41 1
INFO  22:26:48,315 - #6 ;
INFO  22:26:48,315 - #5 }
INFO  22:26:48,316 - #17 void
INFO  22:26:48,316 - #42 func
INFO  22:26:48,316 - #7 (
INFO  22:26:48,316 - #8 )
INFO  22:26:48,317 - #42 int
INFO  22:26:48,317 - #42 y
INFO  22:26:48,317 - #6 ;
INFO  22:26:48,317 - #42 int
INFO  22:26:48,317 - #42 x
INFO  22:26:48,317 - #6 ;
INFO  22:26:48,317 - #4 {
INFO  22:26:48,318 - #42 x
INFO  22:26:48,318 - #11 =
INFO  22:26:48,318 - #41 1
INFO  22:26:48,318 - #6 ;
INFO  22:26:48,318 - #42 y
INFO  22:26:48,318 - #11 =
INFO  22:26:48,319 - #42 main
INFO  22:26:48,319 - #7 (
INFO  22:26:48,319 - #41 1
INFO  22:26:48,319 - #15 ,
INFO  22:26:48,319 - #44 c
INFO  22:26:48,319 - #8 )
INFO  22:26:48,320 - #6 ;
INFO  22:26:48,320 - #5 }
INFO  22:26:48,320 - #5 }
INFO  22:26:48,327 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementOne(
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     1
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementOne]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnNone(
                          ) [ActParsAddOnNone]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorChar(
                                 c
                                ) [FactorChar]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:26:48,328 - ===================================
INFO  22:26:48,330 - Obradjuje se funckijamain na liniji 6
INFO  22:26:48,330 - Hello Var a na liniji 6
INFO  22:26:48,331 - Hello Var b na liniji 6
INFO  22:26:48,331 - Hello Var c na liniji 6
INFO  22:26:48,331 - Obradjuje se funckijafunc na liniji 11
INFO  22:26:48,331 - Hello Var y na liniji 12
INFO  22:26:48,331 - Hello Var x na liniji 13
INFO  22:26:48,331 - usao actParsAddOnMany na liniji 11
INFO  22:26:48,331 - 2 na liniji 11
INFO  22:26:48,331 - usao ActParsHas na liniji 16
INFO  22:26:48,331 - 1 na liniji 16
ERROR 22:26:48,331 - Greska: Lose prosledjeni parametri! dsAct na liniji 16
INFO  22:27:10,879 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:27:10,902 - #2 program
INFO  22:27:10,902 - #42 MJProgram
INFO  22:27:10,902 - #3 const
INFO  22:27:10,902 - #42 bool
INFO  22:27:10,902 - #42 b
INFO  22:27:10,903 - #11 =
INFO  22:27:10,903 - #43 true
INFO  22:27:10,903 - #6 ;
INFO  22:27:10,903 - #4 {
INFO  22:27:10,904 - #42 int
INFO  22:27:10,904 - #42 main
INFO  22:27:10,904 - #7 (
INFO  22:27:10,904 - #42 int
INFO  22:27:10,904 - #42 a
INFO  22:27:10,904 - #15 ,
INFO  22:27:10,904 - #42 char
INFO  22:27:10,905 - #42 b
INFO  22:27:10,905 - #15 ,
INFO  22:27:10,905 - #42 bool
INFO  22:27:10,905 - #42 c
INFO  22:27:10,905 - #8 )
INFO  22:27:10,905 - #4 {
INFO  22:27:10,905 - #12 return
INFO  22:27:10,905 - #41 1
INFO  22:27:10,905 - #6 ;
INFO  22:27:10,905 - #5 }
INFO  22:27:10,906 - #17 void
INFO  22:27:10,906 - #42 func
INFO  22:27:10,906 - #7 (
INFO  22:27:10,906 - #8 )
INFO  22:27:10,907 - #42 int
INFO  22:27:10,907 - #42 y
INFO  22:27:10,907 - #6 ;
INFO  22:27:10,907 - #42 int
INFO  22:27:10,907 - #42 x
INFO  22:27:10,907 - #6 ;
INFO  22:27:10,907 - #4 {
INFO  22:27:10,907 - #42 x
INFO  22:27:10,907 - #11 =
INFO  22:27:10,908 - #41 1
INFO  22:27:10,908 - #6 ;
INFO  22:27:10,908 - #42 y
INFO  22:27:10,908 - #11 =
INFO  22:27:10,908 - #42 main
INFO  22:27:10,908 - #7 (
INFO  22:27:10,909 - #41 1
INFO  22:27:10,909 - #15 ,
INFO  22:27:10,909 - #44 c
INFO  22:27:10,909 - #15 ,
INFO  22:27:10,909 - #43 true
INFO  22:27:10,909 - #8 )
INFO  22:27:10,910 - #6 ;
INFO  22:27:10,910 - #42 y
INFO  22:27:10,910 - #11 =
INFO  22:27:10,910 - #42 main
INFO  22:27:10,910 - #7 (
INFO  22:27:10,910 - #41 1
INFO  22:27:10,910 - #15 ,
INFO  22:27:10,910 - #44 c
INFO  22:27:10,911 - #15 ,
INFO  22:27:10,911 - #43 true
INFO  22:27:10,911 - #8 )
INFO  22:27:10,911 - #6 ;
INFO  22:27:10,911 - #5 }
INFO  22:27:10,911 - #5 }
INFO  22:27:10,918 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       func
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementOne(
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       1
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementOne]
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               y
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorDesActPar(
                      Designator(
                       main
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      OptActPars(
                        ActParsHas(
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                          ActParsAddOnMany(
                            ActParsAddOnMany(
                              ActParsAddOnNone(
                              ) [ActParsAddOnNone]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorBool(
                                   true
                                  ) [FactorBool]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                        ) [ActParsHas]
                      ) [OptActPars]
                    ) [FactorDesActPar]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     main
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:27:10,918 - ===================================
INFO  22:27:10,921 - Obradjuje se funckijamain na liniji 6
INFO  22:27:10,922 - Hello Var a na liniji 6
INFO  22:27:10,922 - Hello Var b na liniji 6
INFO  22:27:10,922 - Hello Var c na liniji 6
INFO  22:27:10,922 - Obradjuje se funckijafunc na liniji 11
INFO  22:27:10,922 - Hello Var y na liniji 12
INFO  22:27:10,923 - Hello Var x na liniji 13
INFO  22:27:10,923 - usao actParsAddOnMany na liniji 11
INFO  22:27:10,923 - 2 na liniji 11
INFO  22:27:10,923 - usao actParsAddOnMany na liniji 11
INFO  22:27:10,923 - 5 na liniji 11
INFO  22:27:10,923 - usao ActParsHas na liniji 16
INFO  22:27:10,923 - 1 na liniji 16
INFO  22:27:10,923 - usao actParsAddOnMany na liniji 11
INFO  22:27:10,923 - 2 na liniji 11
INFO  22:27:10,923 - usao actParsAddOnMany na liniji 11
INFO  22:27:10,923 - 5 na liniji 11
INFO  22:27:10,923 - usao ActParsHas na liniji 17
INFO  22:27:10,923 - 1 na liniji 17
INFO  22:48:59,760 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:48:59,785 - #2 program
INFO  22:48:59,785 - #42 MJProgram
INFO  22:48:59,785 - #3 const
INFO  22:48:59,786 - #42 bool
INFO  22:48:59,786 - #42 b
INFO  22:48:59,786 - #11 =
INFO  22:48:59,786 - #43 true
INFO  22:48:59,786 - #6 ;
INFO  22:48:59,787 - #4 {
INFO  22:48:59,787 - #42 int
INFO  22:48:59,787 - #42 func
INFO  22:48:59,787 - #7 (
INFO  22:48:59,787 - #42 int
INFO  22:48:59,787 - #42 a
INFO  22:48:59,787 - #15 ,
INFO  22:48:59,788 - #42 char
INFO  22:48:59,788 - #42 b
INFO  22:48:59,788 - #15 ,
INFO  22:48:59,788 - #42 bool
INFO  22:48:59,788 - #42 c
INFO  22:48:59,788 - #8 )
INFO  22:48:59,788 - #4 {
INFO  22:48:59,788 - #12 return
INFO  22:48:59,788 - #41 1
INFO  22:48:59,788 - #6 ;
INFO  22:48:59,789 - #5 }
INFO  22:48:59,789 - #17 void
INFO  22:48:59,790 - #42 main
INFO  22:48:59,790 - #7 (
INFO  22:48:59,790 - #8 )
INFO  22:48:59,790 - #42 int
INFO  22:48:59,790 - #42 y
INFO  22:48:59,790 - #6 ;
INFO  22:48:59,790 - #42 int
INFO  22:48:59,791 - #42 x
INFO  22:48:59,791 - #6 ;
INFO  22:48:59,791 - #4 {
INFO  22:48:59,791 - #42 x
INFO  22:48:59,791 - #11 =
INFO  22:48:59,792 - #41 1
INFO  22:48:59,792 - #6 ;
INFO  22:48:59,792 - #42 y
INFO  22:48:59,792 - #11 =
INFO  22:48:59,792 - #42 func
INFO  22:48:59,792 - #7 (
INFO  22:48:59,792 - #41 1
INFO  22:48:59,792 - #15 ,
INFO  22:48:59,793 - #44 c
INFO  22:48:59,793 - #15 ,
INFO  22:48:59,793 - #43 true
INFO  22:48:59,793 - #8 )
INFO  22:48:59,793 - #6 ;
INFO  22:48:59,794 - #42 y
INFO  22:48:59,794 - #11 =
INFO  22:48:59,794 - #42 func
INFO  22:48:59,794 - #7 (
INFO  22:48:59,794 - #41 1
INFO  22:48:59,794 - #15 ,
INFO  22:48:59,794 - #44 c
INFO  22:48:59,794 - #15 ,
INFO  22:48:59,794 - #43 true
INFO  22:48:59,794 - #8 )
INFO  22:48:59,794 - #6 ;
INFO  22:48:59,795 - #5 }
INFO  22:48:59,795 - #5 }
INFO  22:48:59,802 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementOne(
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       1
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementOne]
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               y
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorDesActPar(
                      Designator(
                       func
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      OptActPars(
                        ActParsHas(
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                          ActParsAddOnMany(
                            ActParsAddOnMany(
                              ActParsAddOnNone(
                              ) [ActParsAddOnNone]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorBool(
                                   true
                                  ) [FactorBool]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                        ) [ActParsHas]
                      ) [OptActPars]
                    ) [FactorDesActPar]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     func
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:48:59,803 - ===================================
INFO  22:48:59,805 - Obradjuje se funckijafunc na liniji 6
INFO  22:48:59,807 - Hello Var a na liniji 6
INFO  22:48:59,807 - Hello Var b na liniji 6
INFO  22:48:59,807 - Hello Var c na liniji 6
INFO  22:48:59,807 - Obradjuje se funckijamain na liniji 11
INFO  22:48:59,807 - Hello Var y na liniji 12
INFO  22:48:59,807 - Hello Var x na liniji 13
INFO  22:48:59,807 - usao actParsAddOnMany na liniji 11
INFO  22:48:59,807 - 2 na liniji 11
INFO  22:48:59,807 - usao actParsAddOnMany na liniji 11
INFO  22:48:59,807 - 5 na liniji 11
INFO  22:48:59,807 - usao ActParsHas na liniji 16
INFO  22:48:59,808 - 1 na liniji 16
INFO  22:48:59,808 - usao actParsAddOnMany na liniji 11
INFO  22:48:59,808 - 2 na liniji 11
INFO  22:48:59,808 - usao actParsAddOnMany na liniji 11
INFO  22:48:59,808 - 5 na liniji 11
INFO  22:48:59,808 - usao ActParsHas na liniji 17
INFO  22:48:59,808 - 1 na liniji 17
INFO  22:51:14,861 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:51:14,889 - #2 program
INFO  22:51:14,889 - #42 MJProgram
INFO  22:51:14,889 - #3 const
INFO  22:51:14,889 - #42 bool
INFO  22:51:14,890 - #42 b
INFO  22:51:14,890 - #11 =
INFO  22:51:14,890 - #43 true
INFO  22:51:14,890 - #6 ;
INFO  22:51:14,891 - #4 {
INFO  22:51:14,891 - #42 int
INFO  22:51:14,891 - #42 func
INFO  22:51:14,891 - #7 (
INFO  22:51:14,891 - #42 int
INFO  22:51:14,891 - #42 a
INFO  22:51:14,891 - #15 ,
INFO  22:51:14,892 - #42 char
INFO  22:51:14,892 - #42 b
INFO  22:51:14,892 - #15 ,
INFO  22:51:14,892 - #42 bool
INFO  22:51:14,892 - #42 c
INFO  22:51:14,892 - #8 )
INFO  22:51:14,892 - #4 {
INFO  22:51:14,892 - #12 return
INFO  22:51:14,892 - #41 1
INFO  22:51:14,892 - #6 ;
INFO  22:51:14,892 - #5 }
INFO  22:51:14,893 - #17 void
INFO  22:51:14,893 - #42 main
INFO  22:51:14,893 - #7 (
INFO  22:51:14,893 - #8 )
INFO  22:51:14,894 - #42 int
INFO  22:51:14,894 - #42 y
INFO  22:51:14,894 - #6 ;
INFO  22:51:14,894 - #42 int
INFO  22:51:14,894 - #42 x
INFO  22:51:14,894 - #6 ;
INFO  22:51:14,895 - #4 {
INFO  22:51:14,895 - #42 x
INFO  22:51:14,895 - #11 =
INFO  22:51:14,895 - #41 1
INFO  22:51:14,895 - #6 ;
INFO  22:51:14,896 - #42 y
INFO  22:51:14,896 - #11 =
INFO  22:51:14,896 - #42 func
INFO  22:51:14,896 - #7 (
INFO  22:51:14,896 - #41 1
INFO  22:51:14,896 - #15 ,
INFO  22:51:14,897 - #44 c
INFO  22:51:14,897 - #15 ,
INFO  22:51:14,898 - #43 true
INFO  22:51:14,898 - #8 )
INFO  22:51:14,898 - #6 ;
INFO  22:51:14,899 - #42 y
INFO  22:51:14,899 - #11 =
INFO  22:51:14,899 - #42 func
INFO  22:51:14,899 - #7 (
INFO  22:51:14,899 - #41 1
INFO  22:51:14,899 - #15 ,
INFO  22:51:14,899 - #44 c
INFO  22:51:14,899 - #15 ,
INFO  22:51:14,899 - #43 true
INFO  22:51:14,899 - #8 )
INFO  22:51:14,899 - #6 ;
INFO  22:51:14,900 - #5 }
INFO  22:51:14,900 - #5 }
INFO  22:51:14,908 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementOne(
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       1
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementOne]
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               y
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorDesActPar(
                      Designator(
                       func
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      OptActPars(
                        ActParsHas(
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                          ActParsAddOnMany(
                            ActParsAddOnMany(
                              ActParsAddOnNone(
                              ) [ActParsAddOnNone]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorBool(
                                   true
                                  ) [FactorBool]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                        ) [ActParsHas]
                      ) [OptActPars]
                    ) [FactorDesActPar]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     func
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:51:14,908 - ===================================
INFO  22:51:14,911 - Obradjuje se funckijafunc na liniji 6
INFO  22:51:14,912 - Hello Var a na liniji 6
INFO  22:51:14,912 - Hello Var b na liniji 6
INFO  22:51:14,912 - Hello Var c na liniji 6
INFO  22:51:14,913 - Obradjuje se funckijamain na liniji 11
INFO  22:51:14,913 - Hello Var y na liniji 12
INFO  22:51:14,913 - Hello Var x na liniji 13
INFO  22:51:14,913 - usao actParsAddOnMany na liniji 11
INFO  22:51:14,913 - 2 na liniji 11
INFO  22:51:14,913 - usao actParsAddOnMany na liniji 11
INFO  22:51:14,913 - 5 na liniji 11
INFO  22:51:14,913 - usao ActParsHas na liniji 16
INFO  22:51:14,913 - 1 na liniji 16
INFO  22:51:14,913 - usao actParsAddOnMany na liniji 11
INFO  22:51:14,913 - 2 na liniji 11
INFO  22:51:14,913 - usao actParsAddOnMany na liniji 11
INFO  22:51:14,913 - 5 na liniji 11
INFO  22:51:14,913 - usao ActParsHas na liniji 17
INFO  22:51:14,913 - 1 na liniji 17
INFO  22:51:23,009 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:51:23,036 - #2 program
INFO  22:51:23,036 - #42 MJProgram
INFO  22:51:23,036 - #3 const
INFO  22:51:23,037 - #42 bool
INFO  22:51:23,037 - #42 b
INFO  22:51:23,037 - #11 =
INFO  22:51:23,037 - #43 true
INFO  22:51:23,037 - #6 ;
INFO  22:51:23,038 - #4 {
INFO  22:51:23,038 - #42 int
INFO  22:51:23,038 - #42 func
INFO  22:51:23,039 - #7 (
INFO  22:51:23,039 - #42 int
INFO  22:51:23,039 - #42 a
INFO  22:51:23,039 - #15 ,
INFO  22:51:23,039 - #42 char
INFO  22:51:23,039 - #42 b
INFO  22:51:23,040 - #15 ,
INFO  22:51:23,040 - #42 bool
INFO  22:51:23,040 - #42 c
INFO  22:51:23,040 - #8 )
INFO  22:51:23,040 - #4 {
INFO  22:51:23,040 - #12 return
INFO  22:51:23,040 - #41 1
INFO  22:51:23,040 - #6 ;
INFO  22:51:23,041 - #5 }
INFO  22:51:23,041 - #17 void
INFO  22:51:23,042 - #42 x
INFO  22:51:23,042 - #7 (
INFO  22:51:23,042 - #8 )
INFO  22:51:23,043 - #42 int
INFO  22:51:23,043 - #42 y
INFO  22:51:23,043 - #6 ;
INFO  22:51:23,044 - #42 int
INFO  22:51:23,044 - #42 x
INFO  22:51:23,044 - #6 ;
INFO  22:51:23,044 - #4 {
INFO  22:51:23,044 - #42 x
INFO  22:51:23,044 - #11 =
INFO  22:51:23,045 - #41 1
INFO  22:51:23,045 - #6 ;
INFO  22:51:23,045 - #42 y
INFO  22:51:23,046 - #11 =
INFO  22:51:23,046 - #42 func
INFO  22:51:23,046 - #7 (
INFO  22:51:23,046 - #41 1
INFO  22:51:23,046 - #15 ,
INFO  22:51:23,046 - #44 c
INFO  22:51:23,047 - #15 ,
INFO  22:51:23,047 - #43 true
INFO  22:51:23,047 - #8 )
INFO  22:51:23,047 - #6 ;
INFO  22:51:23,047 - #42 y
INFO  22:51:23,048 - #11 =
INFO  22:51:23,048 - #42 func
INFO  22:51:23,048 - #7 (
INFO  22:51:23,048 - #41 1
INFO  22:51:23,048 - #15 ,
INFO  22:51:23,048 - #44 c
INFO  22:51:23,048 - #15 ,
INFO  22:51:23,048 - #43 true
INFO  22:51:23,048 - #8 )
INFO  22:51:23,048 - #6 ;
INFO  22:51:23,048 - #5 }
INFO  22:51:23,048 - #5 }
INFO  22:51:23,056 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       x
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementOne(
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       1
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementOne]
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               y
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorDesActPar(
                      Designator(
                       func
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      OptActPars(
                        ActParsHas(
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                          ActParsAddOnMany(
                            ActParsAddOnMany(
                              ActParsAddOnNone(
                              ) [ActParsAddOnNone]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorBool(
                                   true
                                  ) [FactorBool]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                        ) [ActParsHas]
                      ) [OptActPars]
                    ) [FactorDesActPar]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     func
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:51:23,056 - ===================================
INFO  22:51:23,060 - Obradjuje se funckijafunc na liniji 6
INFO  22:51:23,061 - Hello Var a na liniji 6
INFO  22:51:23,061 - Hello Var b na liniji 6
INFO  22:51:23,061 - Hello Var c na liniji 6
INFO  22:51:23,061 - Obradjuje se funckijax na liniji 11
INFO  22:51:23,062 - Hello Var y na liniji 12
INFO  22:51:23,062 - Hello Var x na liniji 13
INFO  22:51:23,062 - usao actParsAddOnMany na liniji 11
INFO  22:51:23,062 - 2 na liniji 11
INFO  22:51:23,062 - usao actParsAddOnMany na liniji 11
INFO  22:51:23,062 - 5 na liniji 11
INFO  22:51:23,062 - usao ActParsHas na liniji 16
INFO  22:51:23,062 - 1 na liniji 16
INFO  22:51:23,062 - usao actParsAddOnMany na liniji 11
INFO  22:51:23,062 - 2 na liniji 11
INFO  22:51:23,062 - usao actParsAddOnMany na liniji 11
INFO  22:51:23,062 - 5 na liniji 11
INFO  22:51:23,062 - usao ActParsHas na liniji 17
INFO  22:51:23,062 - 1 na liniji 17
ERROR 22:51:23,063 - Main ne postoji! na liniji 1
INFO  22:51:44,279 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:51:44,303 - #2 program
INFO  22:51:44,303 - #42 MJProgram
INFO  22:51:44,303 - #3 const
INFO  22:51:44,304 - #42 bool
INFO  22:51:44,304 - #42 b
INFO  22:51:44,304 - #11 =
INFO  22:51:44,304 - #43 true
INFO  22:51:44,304 - #6 ;
INFO  22:51:44,305 - #4 {
INFO  22:51:44,305 - #42 int
INFO  22:51:44,305 - #42 func
INFO  22:51:44,305 - #7 (
INFO  22:51:44,306 - #42 int
INFO  22:51:44,306 - #42 a
INFO  22:51:44,306 - #15 ,
INFO  22:51:44,306 - #42 char
INFO  22:51:44,306 - #42 b
INFO  22:51:44,306 - #15 ,
INFO  22:51:44,306 - #42 bool
INFO  22:51:44,306 - #42 c
INFO  22:51:44,306 - #8 )
INFO  22:51:44,306 - #4 {
INFO  22:51:44,306 - #12 return
INFO  22:51:44,307 - #41 1
INFO  22:51:44,307 - #6 ;
INFO  22:51:44,307 - #5 }
INFO  22:51:44,307 - #42 int
INFO  22:51:44,308 - #42 main
INFO  22:51:44,308 - #7 (
INFO  22:51:44,308 - #8 )
INFO  22:51:44,308 - #42 int
INFO  22:51:44,308 - #42 y
INFO  22:51:44,308 - #6 ;
INFO  22:51:44,309 - #42 int
INFO  22:51:44,309 - #42 x
INFO  22:51:44,309 - #6 ;
INFO  22:51:44,309 - #4 {
INFO  22:51:44,309 - #42 x
INFO  22:51:44,309 - #11 =
INFO  22:51:44,310 - #41 1
INFO  22:51:44,310 - #6 ;
INFO  22:51:44,310 - #42 y
INFO  22:51:44,310 - #11 =
INFO  22:51:44,311 - #42 func
INFO  22:51:44,311 - #7 (
INFO  22:51:44,311 - #41 1
INFO  22:51:44,311 - #15 ,
INFO  22:51:44,311 - #44 c
INFO  22:51:44,311 - #15 ,
INFO  22:51:44,312 - #43 true
INFO  22:51:44,312 - #8 )
INFO  22:51:44,312 - #6 ;
INFO  22:51:44,313 - #42 y
INFO  22:51:44,313 - #11 =
INFO  22:51:44,313 - #42 func
INFO  22:51:44,313 - #7 (
INFO  22:51:44,313 - #41 1
INFO  22:51:44,313 - #15 ,
INFO  22:51:44,313 - #44 c
INFO  22:51:44,313 - #15 ,
INFO  22:51:44,314 - #43 true
INFO  22:51:44,314 - #8 )
INFO  22:51:44,314 - #6 ;
INFO  22:51:44,314 - #5 }
INFO  22:51:44,314 - #5 }
INFO  22:51:44,321 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameType(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeNameType]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementOne(
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       1
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementOne]
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               y
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorDesActPar(
                      Designator(
                       func
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      OptActPars(
                        ActParsHas(
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                          ActParsAddOnMany(
                            ActParsAddOnMany(
                              ActParsAddOnNone(
                              ) [ActParsAddOnNone]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorBool(
                                   true
                                  ) [FactorBool]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                        ) [ActParsHas]
                      ) [OptActPars]
                    ) [FactorDesActPar]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     func
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:51:44,321 - ===================================
INFO  22:51:44,324 - Obradjuje se funckijafunc na liniji 6
INFO  22:51:44,325 - Hello Var a na liniji 6
INFO  22:51:44,325 - Hello Var b na liniji 6
INFO  22:51:44,325 - Hello Var c na liniji 6
INFO  22:51:44,326 - Obradjuje se funckijamain na liniji 11
INFO  22:51:44,326 - Hello Var y na liniji 12
INFO  22:51:44,326 - Hello Var x na liniji 13
INFO  22:51:44,326 - usao actParsAddOnMany na liniji 11
INFO  22:51:44,326 - 2 na liniji 11
INFO  22:51:44,326 - usao actParsAddOnMany na liniji 11
INFO  22:51:44,326 - 5 na liniji 11
INFO  22:51:44,326 - usao ActParsHas na liniji 16
INFO  22:51:44,326 - 1 na liniji 16
INFO  22:51:44,326 - usao actParsAddOnMany na liniji 11
INFO  22:51:44,327 - 2 na liniji 11
INFO  22:51:44,327 - usao actParsAddOnMany na liniji 11
INFO  22:51:44,327 - 5 na liniji 11
INFO  22:51:44,327 - usao ActParsHas na liniji 17
INFO  22:51:44,327 - 1 na liniji 17
ERROR 22:51:44,327 - Nije pronadjena return naredba na liniji 11
ERROR 22:51:44,327 - Main ne postoji! na liniji 1
INFO  22:51:56,824 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  22:51:56,850 - #2 program
INFO  22:51:56,851 - #42 MJProgram
INFO  22:51:56,851 - #3 const
INFO  22:51:56,851 - #42 bool
INFO  22:51:56,851 - #42 b
INFO  22:51:56,852 - #11 =
INFO  22:51:56,852 - #43 true
INFO  22:51:56,852 - #6 ;
INFO  22:51:56,852 - #4 {
INFO  22:51:56,853 - #42 int
INFO  22:51:56,853 - #42 func
INFO  22:51:56,853 - #7 (
INFO  22:51:56,853 - #42 int
INFO  22:51:56,853 - #42 a
INFO  22:51:56,853 - #15 ,
INFO  22:51:56,853 - #42 char
INFO  22:51:56,854 - #42 b
INFO  22:51:56,854 - #15 ,
INFO  22:51:56,854 - #42 bool
INFO  22:51:56,854 - #42 c
INFO  22:51:56,854 - #8 )
INFO  22:51:56,854 - #4 {
INFO  22:51:56,854 - #12 return
INFO  22:51:56,854 - #41 1
INFO  22:51:56,854 - #6 ;
INFO  22:51:56,855 - #5 }
INFO  22:51:56,855 - #42 int
INFO  22:51:56,855 - #42 main
INFO  22:51:56,856 - #7 (
INFO  22:51:56,856 - #8 )
INFO  22:51:56,856 - #42 int
INFO  22:51:56,856 - #42 y
INFO  22:51:56,856 - #6 ;
INFO  22:51:56,856 - #42 int
INFO  22:51:56,857 - #42 x
INFO  22:51:56,857 - #6 ;
INFO  22:51:56,857 - #4 {
INFO  22:51:56,857 - #42 x
INFO  22:51:56,857 - #11 =
INFO  22:51:56,857 - #41 1
INFO  22:51:56,857 - #6 ;
INFO  22:51:56,858 - #42 y
INFO  22:51:56,858 - #11 =
INFO  22:51:56,858 - #42 func
INFO  22:51:56,858 - #7 (
INFO  22:51:56,858 - #41 1
INFO  22:51:56,858 - #15 ,
INFO  22:51:56,859 - #44 c
INFO  22:51:56,859 - #15 ,
INFO  22:51:56,859 - #43 true
INFO  22:51:56,859 - #8 )
INFO  22:51:56,859 - #6 ;
INFO  22:51:56,859 - #42 y
INFO  22:51:56,860 - #11 =
INFO  22:51:56,860 - #42 func
INFO  22:51:56,860 - #7 (
INFO  22:51:56,860 - #41 1
INFO  22:51:56,860 - #15 ,
INFO  22:51:56,860 - #44 c
INFO  22:51:56,860 - #15 ,
INFO  22:51:56,860 - #43 true
INFO  22:51:56,860 - #8 )
INFO  22:51:56,860 - #6 ;
INFO  22:51:56,860 - #12 return
INFO  22:51:56,860 - #41 1
INFO  22:51:56,860 - #6 ;
INFO  22:51:56,860 - #5 }
INFO  22:51:56,860 - #5 }
INFO  22:51:56,869 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameType(
        Type(
         int
        ) [Type]
       main
      ) [MethodTypeNameType]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementOne(
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         1
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementOne]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               y
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorDesActPar(
                      Designator(
                       func
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      OptActPars(
                        ActParsHas(
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                          ActParsAddOnMany(
                            ActParsAddOnMany(
                              ActParsAddOnNone(
                              ) [ActParsAddOnNone]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorBool(
                                   true
                                  ) [FactorBool]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                        ) [ActParsHas]
                      ) [OptActPars]
                    ) [FactorDesActPar]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementReturnExpr(
          ExprNormal(
            ExprOne(
              TermOne(
                FactorNumber(
                 1
                ) [FactorNumber]
              ) [TermOne]
            ) [ExprOne]
          ) [ExprNormal]
        ) [StatementReturnExpr]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  22:51:56,869 - ===================================
INFO  22:51:56,872 - Obradjuje se funckijafunc na liniji 6
INFO  22:51:56,872 - Hello Var a na liniji 6
INFO  22:51:56,872 - Hello Var b na liniji 6
INFO  22:51:56,872 - Hello Var c na liniji 6
INFO  22:51:56,872 - Obradjuje se funckijamain na liniji 11
INFO  22:51:56,872 - Hello Var y na liniji 12
INFO  22:51:56,872 - Hello Var x na liniji 13
INFO  22:51:56,872 - usao actParsAddOnMany na liniji 11
INFO  22:51:56,872 - 2 na liniji 11
INFO  22:51:56,872 - usao actParsAddOnMany na liniji 11
INFO  22:51:56,872 - 5 na liniji 11
INFO  22:51:56,872 - usao ActParsHas na liniji 16
INFO  22:51:56,873 - 1 na liniji 16
INFO  22:51:56,873 - usao actParsAddOnMany na liniji 11
INFO  22:51:56,873 - 2 na liniji 11
INFO  22:51:56,873 - usao actParsAddOnMany na liniji 11
INFO  22:51:56,873 - 5 na liniji 11
INFO  22:51:56,873 - usao ActParsHas na liniji 17
INFO  22:51:56,873 - 1 na liniji 17
INFO  23:01:10,356 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:01:10,382 - #2 program
INFO  23:01:10,382 - #44 MJProgram
INFO  23:01:10,382 - #3 const
INFO  23:01:10,383 - #44 bool
INFO  23:01:10,383 - #44 b
INFO  23:01:10,383 - #11 =
INFO  23:01:10,384 - #45 true
INFO  23:01:10,384 - #6 ;
INFO  23:01:10,384 - #4 {
INFO  23:01:10,385 - #44 int
INFO  23:01:10,385 - #44 func
INFO  23:01:10,385 - #7 (
INFO  23:01:10,385 - #44 int
INFO  23:01:10,385 - #44 a
INFO  23:01:10,385 - #15 ,
INFO  23:01:10,385 - #44 char
INFO  23:01:10,385 - #44 b
INFO  23:01:10,385 - #15 ,
INFO  23:01:10,385 - #44 bool
INFO  23:01:10,385 - #44 c
INFO  23:01:10,386 - #8 )
INFO  23:01:10,386 - #4 {
INFO  23:01:10,386 - #12 return
INFO  23:01:10,386 - #43 1
INFO  23:01:10,386 - #6 ;
INFO  23:01:10,386 - #5 }
INFO  23:01:10,386 - #44 int
INFO  23:01:10,387 - #17 void
ERROR 23:01:10,387 - 
Sintaksna greska na liniji 11
ERROR 23:01:10,387 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 11
INFO  23:01:23,351 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:01:23,376 - #2 program
INFO  23:01:23,377 - #44 MJProgram
INFO  23:01:23,377 - #3 const
INFO  23:01:23,377 - #44 bool
INFO  23:01:23,377 - #44 b
INFO  23:01:23,378 - #11 =
INFO  23:01:23,378 - #45 true
INFO  23:01:23,378 - #6 ;
INFO  23:01:23,378 - #4 {
INFO  23:01:23,379 - #44 int
INFO  23:01:23,379 - #44 func
INFO  23:01:23,379 - #7 (
INFO  23:01:23,379 - #44 int
INFO  23:01:23,379 - #44 a
INFO  23:01:23,379 - #15 ,
INFO  23:01:23,379 - #44 char
INFO  23:01:23,379 - #44 b
INFO  23:01:23,380 - #15 ,
INFO  23:01:23,380 - #44 bool
INFO  23:01:23,380 - #44 c
INFO  23:01:23,380 - #8 )
INFO  23:01:23,380 - #4 {
INFO  23:01:23,380 - #12 return
INFO  23:01:23,380 - #43 1
INFO  23:01:23,380 - #6 ;
INFO  23:01:23,380 - #5 }
INFO  23:01:23,380 - #44 int
INFO  23:01:23,381 - #17 void
ERROR 23:01:23,381 - 
Sintaksna greska na liniji 11
ERROR 23:01:23,381 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 11
INFO  23:01:37,828 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:01:37,853 - #2 program
INFO  23:01:37,853 - #44 MJProgram
INFO  23:01:37,853 - #3 const
INFO  23:01:37,854 - #44 bool
INFO  23:01:37,854 - #44 b
INFO  23:01:37,854 - #11 =
INFO  23:01:37,854 - #45 true
INFO  23:01:37,854 - #6 ;
INFO  23:01:37,855 - #4 {
INFO  23:01:37,855 - #44 int
INFO  23:01:37,855 - #44 func
INFO  23:01:37,855 - #7 (
INFO  23:01:37,856 - #44 int
INFO  23:01:37,856 - #44 a
INFO  23:01:37,856 - #15 ,
INFO  23:01:37,856 - #44 char
INFO  23:01:37,856 - #44 b
INFO  23:01:37,856 - #15 ,
INFO  23:01:37,856 - #44 bool
INFO  23:01:37,856 - #44 c
INFO  23:01:37,856 - #8 )
INFO  23:01:37,856 - #4 {
INFO  23:01:37,856 - #12 return
INFO  23:01:37,856 - #43 1
INFO  23:01:37,856 - #6 ;
INFO  23:01:37,857 - #5 }
INFO  23:01:37,857 - #17 void
INFO  23:01:37,857 - #44 main
INFO  23:01:37,858 - #7 (
INFO  23:01:37,858 - #8 )
INFO  23:01:37,858 - #44 int
INFO  23:01:37,858 - #44 y
INFO  23:01:37,858 - #6 ;
INFO  23:01:37,858 - #44 int
INFO  23:01:37,859 - #44 x
INFO  23:01:37,859 - #6 ;
INFO  23:01:37,859 - #4 {
INFO  23:01:37,859 - #44 x
INFO  23:01:37,859 - #11 =
INFO  23:01:37,859 - #43 1
INFO  23:01:37,859 - #6 ;
INFO  23:01:37,860 - #44 y
INFO  23:01:37,860 - #11 =
INFO  23:01:37,860 - #44 func
INFO  23:01:37,860 - #7 (
INFO  23:01:37,860 - #43 1
INFO  23:01:37,860 - #15 ,
INFO  23:01:37,861 - #46 c
INFO  23:01:37,861 - #15 ,
INFO  23:01:37,861 - #45 true
INFO  23:01:37,861 - #8 )
INFO  23:01:37,861 - #6 ;
INFO  23:01:37,862 - #44 y
INFO  23:01:37,862 - #11 =
INFO  23:01:37,862 - #44 func
INFO  23:01:37,862 - #7 (
INFO  23:01:37,862 - #43 1
INFO  23:01:37,862 - #15 ,
INFO  23:01:37,862 - #46 c
INFO  23:01:37,862 - #15 ,
INFO  23:01:37,862 - #45 true
INFO  23:01:37,862 - #8 )
INFO  23:01:37,862 - #6 ;
INFO  23:01:37,862 - #5 }
INFO  23:01:37,862 - #5 }
INFO  23:01:37,870 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementOne(
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       1
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementOne]
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               y
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorDesActPar(
                      Designator(
                       func
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      OptActPars(
                        ActParsHas(
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                          ActParsAddOnMany(
                            ActParsAddOnMany(
                              ActParsAddOnNone(
                              ) [ActParsAddOnNone]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorBool(
                                   true
                                  ) [FactorBool]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                        ) [ActParsHas]
                      ) [OptActPars]
                    ) [FactorDesActPar]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementIs(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorDesActPar(
                    Designator(
                     func
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    OptActPars(
                      ActParsHas(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                        ActParsAddOnMany(
                          ActParsAddOnMany(
                            ActParsAddOnNone(
                            ) [ActParsAddOnNone]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorBool(
                                 true
                                ) [FactorBool]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                        ) [ActParsAddOnMany]
                      ) [ActParsHas]
                    ) [OptActPars]
                  ) [FactorDesActPar]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementIs]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:01:37,870 - ===================================
INFO  23:01:37,873 - Obradjuje se funckijafunc na liniji 6
INFO  23:01:37,874 - Hello Var a na liniji 6
INFO  23:01:37,874 - Hello Var b na liniji 6
INFO  23:01:37,874 - Hello Var c na liniji 6
INFO  23:01:37,874 - Obradjuje se funckijamain na liniji 11
INFO  23:01:37,874 - Hello Var y na liniji 12
INFO  23:01:37,874 - Hello Var x na liniji 13
INFO  23:01:37,874 - usao actParsAddOnMany na liniji 11
INFO  23:01:37,874 - 2 na liniji 11
INFO  23:01:37,874 - usao actParsAddOnMany na liniji 11
INFO  23:01:37,874 - 5 na liniji 11
INFO  23:01:37,874 - usao ActParsHas na liniji 16
INFO  23:01:37,874 - 1 na liniji 16
INFO  23:01:37,875 - usao actParsAddOnMany na liniji 11
INFO  23:01:37,875 - 2 na liniji 11
INFO  23:01:37,875 - usao actParsAddOnMany na liniji 11
INFO  23:01:37,875 - 5 na liniji 11
INFO  23:01:37,875 - usao ActParsHas na liniji 17
INFO  23:01:37,875 - 1 na liniji 17
INFO  23:01:54,486 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:01:54,512 - #2 program
INFO  23:01:54,512 - #44 MJProgram
INFO  23:01:54,512 - #3 const
INFO  23:01:54,513 - #44 bool
INFO  23:01:54,513 - #44 b
INFO  23:01:54,513 - #11 =
INFO  23:01:54,513 - #45 true
INFO  23:01:54,513 - #6 ;
INFO  23:01:54,514 - #4 {
INFO  23:01:54,514 - #44 int
INFO  23:01:54,514 - #44 func
INFO  23:01:54,514 - #7 (
INFO  23:01:54,515 - #44 int
INFO  23:01:54,515 - #44 a
INFO  23:01:54,515 - #15 ,
INFO  23:01:54,515 - #44 char
INFO  23:01:54,515 - #44 b
INFO  23:01:54,515 - #15 ,
INFO  23:01:54,515 - #44 bool
INFO  23:01:54,515 - #44 c
INFO  23:01:54,515 - #8 )
INFO  23:01:54,515 - #4 {
INFO  23:01:54,516 - #12 return
INFO  23:01:54,516 - #43 1
INFO  23:01:54,516 - #6 ;
INFO  23:01:54,516 - #5 }
INFO  23:01:54,516 - #17 void
INFO  23:01:54,517 - #44 main
INFO  23:01:54,517 - #7 (
INFO  23:01:54,517 - #8 )
INFO  23:01:54,517 - #44 int
INFO  23:01:54,517 - #44 y
INFO  23:01:54,517 - #6 ;
INFO  23:01:54,518 - #44 int
INFO  23:01:54,518 - #44 x
INFO  23:01:54,518 - #6 ;
INFO  23:01:54,518 - #4 {
INFO  23:01:54,518 - #44 x
INFO  23:01:54,518 - #11 =
INFO  23:01:54,519 - #43 1
INFO  23:01:54,519 - #6 ;
INFO  23:01:54,519 - #44 y
INFO  23:01:54,519 - #11 =
INFO  23:01:54,519 - #44 func
INFO  23:01:54,519 - #7 (
INFO  23:01:54,519 - #43 1
INFO  23:01:54,519 - #15 ,
INFO  23:01:54,520 - #46 c
INFO  23:01:54,520 - #15 ,
INFO  23:01:54,520 - #45 true
INFO  23:01:54,521 - #8 )
INFO  23:01:54,521 - #6 ;
INFO  23:01:54,521 - #44 y
INFO  23:01:54,521 - #11 =
INFO  23:01:54,521 - #44 func
INFO  23:01:54,521 - #7 (
INFO  23:01:54,521 - #43 1
INFO  23:01:54,522 - #15 ,
INFO  23:01:54,522 - #46 c
INFO  23:01:54,522 - #15 ,
INFO  23:01:54,522 - #45 true
INFO  23:01:54,522 - #8 )
INFO  23:01:54,522 - #6 ;
INFO  23:01:54,522 - #44 x
INFO  23:01:54,522 - #11 =
INFO  23:01:54,522 - #44 x
INFO  23:01:54,522 - #18 .
ERROR 23:01:54,522 - 
Sintaksna greska na liniji 19
ERROR 23:01:54,522 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 19
INFO  23:03:08,583 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program1.mj
INFO  23:03:08,586 - #2 program
INFO  23:03:08,586 - #44 MJProgram
INFO  23:03:08,586 - #3 const
INFO  23:03:08,586 - #44 bool
INFO  23:03:08,586 - #44 b
INFO  23:03:08,586 - #11 =
INFO  23:03:08,586 - #45 true
INFO  23:03:08,586 - #6 ;
INFO  23:03:08,586 - #4 {
INFO  23:03:08,586 - #44 int
INFO  23:03:08,586 - #44 func
INFO  23:03:08,586 - #7 (
INFO  23:03:08,586 - #44 int
INFO  23:03:08,586 - #44 a
INFO  23:03:08,587 - #15 ,
INFO  23:03:08,587 - #44 char
INFO  23:03:08,587 - #44 b
INFO  23:03:08,587 - #15 ,
INFO  23:03:08,587 - #44 bool
INFO  23:03:08,587 - #44 c
INFO  23:03:08,587 - #8 )
INFO  23:03:08,587 - #4 {
INFO  23:03:08,587 - #12 return
INFO  23:03:08,587 - #43 1
INFO  23:03:08,587 - #6 ;
INFO  23:03:08,587 - #5 }
INFO  23:03:08,587 - #17 void
INFO  23:03:08,587 - #44 main
INFO  23:03:08,587 - #7 (
INFO  23:03:08,587 - #8 )
INFO  23:03:08,587 - #44 int
INFO  23:03:08,587 - #44 y
INFO  23:03:08,587 - #6 ;
INFO  23:03:08,587 - #44 int
INFO  23:03:08,587 - #44 x
INFO  23:03:08,587 - #6 ;
INFO  23:03:08,588 - #4 {
INFO  23:03:08,588 - #44 x
INFO  23:03:08,588 - #11 =
INFO  23:03:08,588 - #43 1
INFO  23:03:08,588 - #6 ;
INFO  23:03:08,588 - #44 y
INFO  23:03:08,588 - #11 =
INFO  23:03:08,588 - #44 func
INFO  23:03:08,588 - #7 (
INFO  23:03:08,588 - #43 1
INFO  23:03:08,588 - #15 ,
INFO  23:03:08,588 - #46 c
INFO  23:03:08,588 - #15 ,
INFO  23:03:08,588 - #45 true
INFO  23:03:08,588 - #8 )
INFO  23:03:08,588 - #6 ;
INFO  23:03:08,588 - #44 y
INFO  23:03:08,589 - #11 =
INFO  23:03:08,589 - #44 func
INFO  23:03:08,589 - #7 (
INFO  23:03:08,589 - #43 1
INFO  23:03:08,589 - #15 ,
INFO  23:03:08,589 - #46 c
INFO  23:03:08,589 - #15 ,
INFO  23:03:08,589 - #45 true
INFO  23:03:08,589 - #8 )
INFO  23:03:08,589 - #6 ;
INFO  23:03:08,589 - #44 x
INFO  23:03:08,589 - #11 =
INFO  23:03:08,589 - #44 x
INFO  23:03:08,589 - #18 .
INFO  23:03:08,589 - #41 findAny
INFO  23:03:08,589 - #7 (
INFO  23:03:08,589 - #43 3
INFO  23:03:08,589 - #8 )
INFO  23:03:08,589 - #6 ;
INFO  23:03:08,589 - #5 }
INFO  23:03:08,589 - #5 }
INFO  23:03:48,780 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program1.mj
INFO  23:03:48,804 - #2 program
INFO  23:03:48,804 - #44 MJProgram
INFO  23:03:48,804 - #3 const
INFO  23:03:48,805 - #44 bool
INFO  23:03:48,805 - #44 b
INFO  23:03:48,805 - #11 =
INFO  23:03:48,805 - #45 true
INFO  23:03:48,805 - #6 ;
INFO  23:03:48,806 - #4 {
INFO  23:03:48,806 - #44 int
INFO  23:03:48,806 - #44 func
INFO  23:03:48,806 - #7 (
INFO  23:03:48,806 - #44 int
INFO  23:03:48,806 - #44 a
INFO  23:03:48,806 - #15 ,
INFO  23:03:48,807 - #44 char
INFO  23:03:48,807 - #44 b
INFO  23:03:48,807 - #15 ,
INFO  23:03:48,807 - #44 bool
INFO  23:03:48,807 - #44 c
INFO  23:03:48,807 - #8 )
INFO  23:03:48,807 - #4 {
INFO  23:03:48,807 - #12 return
INFO  23:03:48,807 - #43 1
INFO  23:03:48,807 - #6 ;
INFO  23:03:48,808 - #5 }
INFO  23:03:48,808 - #17 void
INFO  23:03:48,808 - #44 main
INFO  23:03:48,808 - #7 (
INFO  23:03:48,808 - #8 )
INFO  23:03:48,809 - #44 int
INFO  23:03:48,809 - #44 y
INFO  23:03:48,809 - #6 ;
INFO  23:03:48,809 - #44 int
INFO  23:03:48,809 - #44 x
INFO  23:03:48,809 - #6 ;
INFO  23:03:48,809 - #4 {
INFO  23:03:48,810 - #44 x
INFO  23:03:48,810 - #11 =
INFO  23:03:48,810 - #43 1
INFO  23:03:48,810 - #6 ;
INFO  23:03:48,810 - #44 y
INFO  23:03:48,811 - #11 =
INFO  23:03:48,811 - #44 func
INFO  23:03:48,811 - #7 (
INFO  23:03:48,811 - #43 1
INFO  23:03:48,811 - #15 ,
INFO  23:03:48,811 - #46 c
INFO  23:03:48,811 - #15 ,
INFO  23:03:48,812 - #45 true
INFO  23:03:48,812 - #8 )
INFO  23:03:48,812 - #6 ;
INFO  23:03:48,812 - #44 y
INFO  23:03:48,812 - #11 =
INFO  23:03:48,812 - #44 func
INFO  23:03:48,813 - #7 (
INFO  23:03:48,813 - #43 1
INFO  23:03:48,813 - #15 ,
INFO  23:03:48,813 - #46 c
INFO  23:03:48,813 - #15 ,
INFO  23:03:48,813 - #45 true
INFO  23:03:48,813 - #8 )
INFO  23:03:48,813 - #6 ;
INFO  23:03:48,813 - #44 x
INFO  23:03:48,813 - #11 =
INFO  23:03:48,813 - #44 x
INFO  23:03:48,813 - #18 .
ERROR 23:03:48,813 - 
Sintaksna greska na liniji 19
ERROR 23:03:48,813 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 19
INFO  23:07:22,055 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program1.mj
INFO  23:07:22,061 - #2 program
INFO  23:07:22,061 - #44 MJProgram
INFO  23:07:22,062 - #3 const
INFO  23:07:29,120 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program1.mj
INFO  23:07:29,144 - #2 program
INFO  23:07:29,144 - #44 MJProgram
INFO  23:07:29,144 - #3 const
INFO  23:07:29,144 - #44 bool
INFO  23:07:29,144 - #44 b
INFO  23:07:29,145 - #11 =
INFO  23:07:29,145 - #45 true
INFO  23:07:29,145 - #6 ;
INFO  23:07:29,145 - #4 {
INFO  23:07:29,146 - #44 int
INFO  23:07:29,146 - #44 func
INFO  23:07:29,146 - #7 (
INFO  23:07:29,146 - #44 int
INFO  23:07:29,146 - #44 a
INFO  23:07:29,146 - #15 ,
INFO  23:07:29,146 - #44 char
INFO  23:07:29,146 - #44 b
INFO  23:07:29,147 - #15 ,
INFO  23:07:29,147 - #44 bool
INFO  23:07:29,147 - #44 c
INFO  23:07:29,147 - #8 )
INFO  23:07:29,147 - #4 {
INFO  23:07:29,147 - #12 return
INFO  23:07:29,147 - #43 1
INFO  23:07:29,147 - #6 ;
INFO  23:07:29,147 - #5 }
INFO  23:07:29,148 - #17 void
INFO  23:07:29,148 - #44 main
INFO  23:07:29,148 - #7 (
INFO  23:07:29,148 - #8 )
INFO  23:07:29,148 - #44 int
INFO  23:07:29,149 - #44 y
INFO  23:07:29,149 - #6 ;
INFO  23:07:29,149 - #44 int
INFO  23:07:29,149 - #44 x
INFO  23:07:29,149 - #6 ;
INFO  23:07:29,149 - #4 {
INFO  23:07:29,149 - #44 x
INFO  23:07:29,149 - #11 =
INFO  23:07:29,150 - #43 1
INFO  23:07:29,150 - #6 ;
INFO  23:07:29,150 - #44 y
INFO  23:07:29,150 - #11 =
INFO  23:07:29,150 - #44 func
INFO  23:07:29,150 - #7 (
INFO  23:07:29,150 - #43 1
INFO  23:07:29,151 - #15 ,
INFO  23:07:29,151 - #46 c
INFO  23:07:29,151 - #15 ,
INFO  23:07:29,151 - #45 true
INFO  23:07:29,151 - #8 )
INFO  23:07:29,152 - #6 ;
INFO  23:07:29,152 - #44 y
INFO  23:07:29,152 - #11 =
INFO  23:07:29,152 - #44 func
INFO  23:07:29,152 - #7 (
INFO  23:07:29,152 - #43 1
INFO  23:07:29,152 - #15 ,
INFO  23:07:29,153 - #46 c
INFO  23:07:29,153 - #15 ,
INFO  23:07:29,153 - #45 true
INFO  23:07:29,153 - #8 )
INFO  23:07:29,153 - #6 ;
INFO  23:07:29,153 - #44 x
INFO  23:07:29,153 - #11 =
INFO  23:07:29,153 - #44 x
INFO  23:07:29,153 - #18 .
INFO  23:07:29,153 - #41 findAny
INFO  23:07:29,153 - #7 (
INFO  23:07:29,153 - #43 3
INFO  23:07:29,154 - #8 )
INFO  23:07:29,154 - #6 ;
INFO  23:07:29,154 - #5 }
INFO  23:07:29,154 - #5 }
INFO  23:07:29,155 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementOne(
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         1
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementOne]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               y
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorDesActPar(
                      Designator(
                       func
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      OptActPars(
                        ActParsHas(
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                          ActParsAddOnMany(
                            ActParsAddOnMany(
                              ActParsAddOnNone(
                              ) [ActParsAddOnNone]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorBool(
                                   true
                                  ) [FactorBool]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                        ) [ActParsHas]
                      ) [OptActPars]
                    ) [FactorDesActPar]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAny(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAnyBegin(
            ) [FindAnyBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAny]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:07:29,156 - ===================================
INFO  23:07:46,567 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:07:46,591 - #2 program
INFO  23:07:46,591 - #44 MJProgram
INFO  23:07:46,591 - #3 const
INFO  23:07:46,591 - #44 bool
INFO  23:07:46,591 - #44 b
INFO  23:07:46,592 - #11 =
INFO  23:07:46,592 - #45 true
INFO  23:07:46,592 - #6 ;
INFO  23:07:46,592 - #4 {
INFO  23:07:46,593 - #44 int
INFO  23:07:46,593 - #44 func
INFO  23:07:46,593 - #7 (
INFO  23:07:46,593 - #44 int
INFO  23:07:46,593 - #44 a
INFO  23:07:46,593 - #15 ,
INFO  23:07:46,593 - #44 char
INFO  23:07:46,593 - #44 b
INFO  23:07:46,594 - #15 ,
INFO  23:07:46,594 - #44 bool
INFO  23:07:46,594 - #44 c
INFO  23:07:46,594 - #8 )
INFO  23:07:46,594 - #4 {
INFO  23:07:46,594 - #12 return
INFO  23:07:46,594 - #43 1
INFO  23:07:46,594 - #6 ;
INFO  23:07:46,594 - #5 }
INFO  23:07:46,594 - #17 void
INFO  23:07:46,595 - #44 main
INFO  23:07:46,595 - #7 (
INFO  23:07:46,595 - #8 )
INFO  23:07:46,595 - #44 int
INFO  23:07:46,596 - #44 y
INFO  23:07:46,596 - #6 ;
INFO  23:07:46,596 - #44 int
INFO  23:07:46,596 - #44 x
INFO  23:07:46,596 - #6 ;
INFO  23:07:46,596 - #4 {
INFO  23:07:46,596 - #44 x
INFO  23:07:46,596 - #11 =
INFO  23:07:46,597 - #43 1
INFO  23:07:46,597 - #6 ;
INFO  23:07:46,597 - #44 y
INFO  23:07:46,597 - #11 =
INFO  23:07:46,597 - #44 func
INFO  23:07:46,597 - #7 (
INFO  23:07:46,597 - #43 1
INFO  23:07:46,597 - #15 ,
INFO  23:07:46,598 - #46 c
INFO  23:07:46,598 - #15 ,
INFO  23:07:46,598 - #45 true
INFO  23:07:46,598 - #8 )
INFO  23:07:46,599 - #6 ;
INFO  23:07:46,599 - #44 y
INFO  23:07:46,599 - #11 =
INFO  23:07:46,599 - #44 func
INFO  23:07:46,599 - #7 (
INFO  23:07:46,599 - #43 1
INFO  23:07:46,599 - #15 ,
INFO  23:07:46,599 - #46 c
INFO  23:07:46,599 - #15 ,
INFO  23:07:46,599 - #45 true
INFO  23:07:46,600 - #8 )
INFO  23:07:46,600 - #6 ;
INFO  23:07:46,600 - #44 x
INFO  23:07:46,600 - #11 =
INFO  23:07:46,600 - #44 x
INFO  23:07:46,600 - #18 .
INFO  23:07:46,600 - #41 findAny
INFO  23:07:46,600 - #7 (
INFO  23:07:46,600 - #43 3
INFO  23:07:46,600 - #8 )
INFO  23:07:46,600 - #6 ;
INFO  23:07:46,601 - #5 }
INFO  23:07:46,601 - #5 }
INFO  23:07:46,608 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementOne(
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         1
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementOne]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               y
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorDesActPar(
                      Designator(
                       func
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      OptActPars(
                        ActParsHas(
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                          ActParsAddOnMany(
                            ActParsAddOnMany(
                              ActParsAddOnNone(
                              ) [ActParsAddOnNone]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorBool(
                                   true
                                  ) [FactorBool]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                        ) [ActParsHas]
                      ) [OptActPars]
                    ) [FactorDesActPar]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAny(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAnyBegin(
            ) [FindAnyBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAny]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:07:46,608 - ===================================
INFO  23:07:46,610 - Obradjuje se funckijafunc na liniji 6
INFO  23:07:46,610 - Hello Var a na liniji 6
INFO  23:07:46,611 - Hello Var b na liniji 6
INFO  23:07:46,611 - Hello Var c na liniji 6
INFO  23:07:46,611 - Obradjuje se funckijamain na liniji 11
INFO  23:07:46,611 - Hello Var y na liniji 12
INFO  23:07:46,611 - Hello Var x na liniji 13
INFO  23:07:46,611 - usao actParsAddOnMany na liniji 11
INFO  23:07:46,611 - 2 na liniji 11
INFO  23:07:46,611 - usao actParsAddOnMany na liniji 11
INFO  23:07:46,611 - 5 na liniji 11
INFO  23:07:46,611 - usao ActParsHas na liniji 16
INFO  23:07:46,611 - 1 na liniji 16
INFO  23:07:46,611 - usao actParsAddOnMany na liniji 11
INFO  23:07:46,612 - 2 na liniji 11
INFO  23:07:46,612 - usao actParsAddOnMany na liniji 11
INFO  23:07:46,612 - 5 na liniji 11
INFO  23:07:46,612 - usao ActParsHas na liniji 17
INFO  23:07:46,612 - 1 na liniji 17
INFO  23:10:54,523 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:10:54,547 - #2 program
INFO  23:10:54,547 - #44 MJProgram
INFO  23:10:54,547 - #3 const
INFO  23:10:54,548 - #44 bool
INFO  23:10:54,548 - #44 b
INFO  23:10:54,548 - #11 =
INFO  23:10:54,548 - #45 true
INFO  23:10:54,548 - #6 ;
INFO  23:10:54,549 - #4 {
INFO  23:10:54,549 - #44 int
INFO  23:10:54,549 - #44 func
INFO  23:10:54,549 - #7 (
INFO  23:10:54,549 - #44 int
INFO  23:10:54,549 - #44 a
INFO  23:10:54,549 - #15 ,
INFO  23:10:54,550 - #44 char
INFO  23:10:54,550 - #44 b
INFO  23:10:54,550 - #15 ,
INFO  23:10:54,550 - #44 bool
INFO  23:10:54,550 - #44 c
INFO  23:10:54,550 - #8 )
INFO  23:10:54,550 - #4 {
INFO  23:10:54,550 - #12 return
INFO  23:10:54,550 - #43 1
INFO  23:10:54,550 - #6 ;
INFO  23:10:54,551 - #5 }
INFO  23:10:54,551 - #17 void
INFO  23:10:54,551 - #44 main
INFO  23:10:54,551 - #7 (
INFO  23:10:54,551 - #8 )
INFO  23:10:54,552 - #44 int
INFO  23:10:54,552 - #44 y
INFO  23:10:54,552 - #6 ;
INFO  23:10:54,552 - #44 int
INFO  23:10:54,552 - #44 x
INFO  23:10:54,552 - #6 ;
INFO  23:10:54,552 - #4 {
INFO  23:10:54,552 - #44 x
INFO  23:10:54,553 - #11 =
INFO  23:10:54,553 - #43 1
INFO  23:10:54,553 - #6 ;
INFO  23:10:54,553 - #44 y
INFO  23:10:54,553 - #11 =
INFO  23:10:54,553 - #44 func
INFO  23:10:54,554 - #7 (
INFO  23:10:54,554 - #43 1
INFO  23:10:54,554 - #15 ,
INFO  23:10:54,554 - #46 c
INFO  23:10:54,554 - #15 ,
INFO  23:10:54,555 - #45 true
INFO  23:10:54,555 - #8 )
INFO  23:10:54,555 - #6 ;
INFO  23:10:54,555 - #44 y
INFO  23:10:54,556 - #11 =
INFO  23:10:54,556 - #44 func
INFO  23:10:54,556 - #7 (
INFO  23:10:54,556 - #43 1
INFO  23:10:54,556 - #15 ,
INFO  23:10:54,556 - #46 c
INFO  23:10:54,556 - #15 ,
INFO  23:10:54,556 - #45 true
INFO  23:10:54,556 - #8 )
INFO  23:10:54,556 - #6 ;
INFO  23:10:54,556 - #44 x
INFO  23:10:54,556 - #11 =
INFO  23:10:54,557 - #44 x
INFO  23:10:54,557 - #18 .
INFO  23:10:54,557 - #42 findAndReplace
INFO  23:10:54,557 - #7 (
INFO  23:10:54,557 - #43 3
INFO  23:10:54,557 - #15 ,
INFO  23:10:54,557 - #44 x
INFO  23:10:54,558 - #20 =>
INFO  23:10:54,558 - #43 4
INFO  23:10:54,558 - #8 )
INFO  23:10:54,558 - #6 ;
INFO  23:10:54,558 - #5 }
INFO  23:10:54,558 - #5 }
INFO  23:10:54,566 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsElem(
               x
              ) [IdentOptionsElem]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementOne(
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         1
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementOne]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementIs(
              Designator(
               y
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorDesActPar(
                      Designator(
                       func
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      OptActPars(
                        ActParsHas(
                          ExprNormal(
                            ExprOne(
                              TermOne(
                                FactorNumber(
                                 1
                                ) [FactorNumber]
                              ) [TermOne]
                            ) [ExprOne]
                          ) [ExprNormal]
                          ActParsAddOnMany(
                            ActParsAddOnMany(
                              ActParsAddOnNone(
                              ) [ActParsAddOnNone]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorBool(
                                   true
                                  ) [FactorBool]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                          ) [ActParsAddOnMany]
                        ) [ActParsHas]
                      ) [OptActPars]
                    ) [FactorDesActPar]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementIs]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           x
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:10:54,566 - ===================================
INFO  23:10:54,569 - Obradjuje se funckijafunc na liniji 6
INFO  23:10:54,569 - Hello Var a na liniji 6
INFO  23:10:54,569 - Hello Var b na liniji 6
INFO  23:10:54,569 - Hello Var c na liniji 6
INFO  23:10:54,569 - Obradjuje se funckijamain na liniji 11
INFO  23:10:54,569 - Hello Var y na liniji 12
INFO  23:10:54,569 - Hello Var x na liniji 13
INFO  23:10:54,569 - usao actParsAddOnMany na liniji 11
INFO  23:10:54,569 - 2 na liniji 11
INFO  23:10:54,569 - usao actParsAddOnMany na liniji 11
INFO  23:10:54,570 - 5 na liniji 11
INFO  23:10:54,570 - usao ActParsHas na liniji 16
INFO  23:10:54,570 - 1 na liniji 16
INFO  23:10:54,570 - usao actParsAddOnMany na liniji 11
INFO  23:10:54,570 - 2 na liniji 11
INFO  23:10:54,570 - usao actParsAddOnMany na liniji 11
INFO  23:10:54,570 - 5 na liniji 11
INFO  23:10:54,570 - usao ActParsHas na liniji 17
INFO  23:10:54,570 - 1 na liniji 17
INFO  23:21:13,295 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:21:13,319 - #2 program
INFO  23:21:13,319 - #44 MJProgram
INFO  23:21:13,319 - #3 const
INFO  23:21:13,319 - #44 bool
INFO  23:21:13,319 - #44 b
INFO  23:21:13,320 - #11 =
INFO  23:21:13,320 - #45 true
INFO  23:21:13,320 - #6 ;
INFO  23:21:13,320 - #4 {
INFO  23:21:13,321 - #44 int
INFO  23:21:13,321 - #44 func
INFO  23:21:13,321 - #7 (
INFO  23:21:13,321 - #44 int
INFO  23:21:13,321 - #44 a
INFO  23:21:13,321 - #15 ,
INFO  23:21:13,321 - #44 char
INFO  23:21:13,321 - #44 b
INFO  23:21:13,322 - #15 ,
INFO  23:21:13,322 - #44 bool
INFO  23:21:13,322 - #44 c
INFO  23:21:13,322 - #8 )
INFO  23:21:13,322 - #4 {
INFO  23:21:13,322 - #12 return
INFO  23:21:13,322 - #43 1
INFO  23:21:13,322 - #6 ;
INFO  23:21:13,322 - #5 }
INFO  23:21:13,323 - #17 void
INFO  23:21:13,323 - #44 main
INFO  23:21:13,323 - #7 (
INFO  23:21:13,323 - #8 )
INFO  23:21:13,323 - #44 int
INFO  23:21:13,324 - #44 y
INFO  23:21:13,324 - #6 ;
INFO  23:21:13,324 - #44 int
INFO  23:21:13,324 - #44 x
INFO  23:21:13,324 - #10 [
INFO  23:21:13,324 - #9 ]
INFO  23:21:13,324 - #6 ;
INFO  23:21:13,324 - #4 {
INFO  23:21:13,324 - #44 x
INFO  23:21:13,324 - #11 =
INFO  23:21:13,325 - #43 1
INFO  23:21:13,325 - #6 ;
INFO  23:21:13,325 - #44 y
INFO  23:21:13,325 - #11 =
INFO  23:21:13,326 - #44 func
INFO  23:21:13,326 - #7 (
INFO  23:21:13,326 - #43 1
INFO  23:21:13,326 - #15 ,
INFO  23:21:13,326 - #46 c
INFO  23:21:13,326 - #15 ,
INFO  23:21:13,327 - #45 true
INFO  23:21:13,327 - #8 )
INFO  23:21:13,327 - #6 ;
INFO  23:21:13,327 - #44 y
INFO  23:21:13,327 - #11 =
INFO  23:21:13,327 - #44 func
INFO  23:21:13,327 - #7 (
INFO  23:21:13,328 - #43 1
INFO  23:21:13,328 - #15 ,
INFO  23:21:13,328 - #46 c
INFO  23:21:13,328 - #15 ,
INFO  23:21:13,328 - #45 true
INFO  23:21:13,328 - #8 )
INFO  23:21:13,328 - #6 ;
INFO  23:21:13,328 - #44 b
INFO  23:21:13,328 - #11 =
INFO  23:21:13,328 - #44 x
INFO  23:21:13,328 - #18 .
INFO  23:21:13,329 - #41 findAny
INFO  23:21:13,329 - #7 (
INFO  23:21:13,329 - #43 3
INFO  23:21:13,329 - #8 )
INFO  23:21:13,329 - #6 ;
INFO  23:21:13,330 - #44 x
INFO  23:21:13,330 - #11 =
INFO  23:21:13,330 - #44 x
INFO  23:21:13,330 - #18 .
INFO  23:21:13,330 - #42 findAndReplace
INFO  23:21:13,330 - #7 (
INFO  23:21:13,330 - #43 3
INFO  23:21:13,330 - #15 ,
INFO  23:21:13,330 - #44 x
INFO  23:21:13,330 - #20 =>
INFO  23:21:13,330 - #43 4
INFO  23:21:13,330 - #8 )
INFO  23:21:13,331 - #6 ;
INFO  23:21:13,331 - #5 }
INFO  23:21:13,331 - #5 }
INFO  23:21:13,337 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               b
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           x
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:21:13,337 - ===================================
INFO  23:21:13,340 - Obradjuje se funckijafunc na liniji 6
INFO  23:21:13,340 - Hello Var a na liniji 6
INFO  23:21:13,340 - Hello Var b na liniji 6
INFO  23:21:13,340 - Hello Var c na liniji 6
INFO  23:21:13,340 - Obradjuje se funckijamain na liniji 11
INFO  23:21:13,341 - Hello Var y na liniji 12
INFO  23:21:13,341 - Hello Var x na liniji 13
ERROR 23:21:13,341 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 15
INFO  23:21:13,341 - usao actParsAddOnMany na liniji 11
INFO  23:21:13,341 - 2 na liniji 11
INFO  23:21:13,341 - usao actParsAddOnMany na liniji 11
INFO  23:21:13,341 - 5 na liniji 11
INFO  23:21:13,341 - usao ActParsHas na liniji 16
INFO  23:21:13,341 - 1 na liniji 16
INFO  23:21:13,341 - usao actParsAddOnMany na liniji 11
INFO  23:21:13,341 - 2 na liniji 11
INFO  23:21:13,341 - usao actParsAddOnMany na liniji 11
INFO  23:21:13,341 - 5 na liniji 11
INFO  23:21:13,341 - usao ActParsHas na liniji 17
INFO  23:21:13,341 - 1 na liniji 17
INFO  23:21:21,817 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:21:21,840 - #2 program
INFO  23:21:21,840 - #44 MJProgram
INFO  23:21:21,840 - #3 const
INFO  23:21:21,841 - #44 bool
INFO  23:21:21,841 - #44 b
INFO  23:21:21,842 - #11 =
INFO  23:21:21,842 - #45 true
INFO  23:21:21,842 - #6 ;
INFO  23:21:21,842 - #4 {
INFO  23:21:21,843 - #44 int
INFO  23:21:21,843 - #44 func
INFO  23:21:21,843 - #7 (
INFO  23:21:21,843 - #44 int
INFO  23:21:21,843 - #44 a
INFO  23:21:21,843 - #15 ,
INFO  23:21:21,843 - #44 char
INFO  23:21:21,843 - #44 b
INFO  23:21:21,843 - #15 ,
INFO  23:21:21,844 - #44 bool
INFO  23:21:21,844 - #44 c
INFO  23:21:21,844 - #8 )
INFO  23:21:21,844 - #4 {
INFO  23:21:21,844 - #12 return
INFO  23:21:21,844 - #43 1
INFO  23:21:21,844 - #6 ;
INFO  23:21:21,844 - #5 }
INFO  23:21:21,844 - #17 void
INFO  23:21:21,845 - #44 main
INFO  23:21:21,845 - #7 (
INFO  23:21:21,845 - #8 )
INFO  23:21:21,845 - #44 int
INFO  23:21:21,845 - #44 y
INFO  23:21:21,845 - #6 ;
INFO  23:21:21,846 - #44 int
INFO  23:21:21,846 - #44 x
INFO  23:21:21,846 - #10 [
INFO  23:21:21,846 - #9 ]
INFO  23:21:21,846 - #6 ;
INFO  23:21:21,846 - #4 {
INFO  23:21:21,846 - #44 x
INFO  23:21:21,846 - #11 =
INFO  23:21:21,847 - #43 1
INFO  23:21:21,847 - #6 ;
INFO  23:21:21,847 - #44 y
INFO  23:21:21,847 - #11 =
INFO  23:21:21,847 - #44 func
INFO  23:21:21,848 - #7 (
INFO  23:21:21,848 - #43 1
INFO  23:21:21,848 - #15 ,
INFO  23:21:21,848 - #46 c
INFO  23:21:21,848 - #15 ,
INFO  23:21:21,849 - #45 true
INFO  23:21:21,849 - #8 )
INFO  23:21:21,849 - #6 ;
INFO  23:21:21,849 - #44 y
INFO  23:21:21,849 - #11 =
INFO  23:21:21,849 - #44 func
INFO  23:21:21,849 - #7 (
INFO  23:21:21,849 - #43 1
INFO  23:21:21,850 - #15 ,
INFO  23:21:21,850 - #46 c
INFO  23:21:21,850 - #15 ,
INFO  23:21:21,850 - #45 true
INFO  23:21:21,850 - #8 )
INFO  23:21:21,850 - #6 ;
INFO  23:21:21,850 - #44 y
INFO  23:21:21,850 - #11 =
INFO  23:21:21,850 - #44 x
INFO  23:21:21,850 - #18 .
INFO  23:21:21,851 - #41 findAny
INFO  23:21:21,851 - #7 (
INFO  23:21:21,851 - #43 3
INFO  23:21:21,852 - #8 )
INFO  23:21:21,852 - #6 ;
INFO  23:21:21,852 - #44 x
INFO  23:21:21,852 - #11 =
INFO  23:21:21,852 - #44 x
INFO  23:21:21,852 - #18 .
INFO  23:21:21,852 - #42 findAndReplace
INFO  23:21:21,852 - #7 (
INFO  23:21:21,852 - #43 3
INFO  23:21:21,852 - #15 ,
INFO  23:21:21,853 - #44 x
INFO  23:21:21,853 - #20 =>
INFO  23:21:21,853 - #43 4
INFO  23:21:21,853 - #8 )
INFO  23:21:21,853 - #6 ;
INFO  23:21:21,853 - #5 }
INFO  23:21:21,853 - #5 }
INFO  23:21:21,859 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               y
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           x
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:21:21,860 - ===================================
INFO  23:21:21,862 - Obradjuje se funckijafunc na liniji 6
INFO  23:21:21,862 - Hello Var a na liniji 6
INFO  23:21:21,863 - Hello Var b na liniji 6
INFO  23:21:21,863 - Hello Var c na liniji 6
INFO  23:21:21,863 - Obradjuje se funckijamain na liniji 11
INFO  23:21:21,863 - Hello Var y na liniji 12
INFO  23:21:21,863 - Hello Var x na liniji 13
ERROR 23:21:21,863 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 15
INFO  23:21:21,863 - usao actParsAddOnMany na liniji 11
INFO  23:21:21,863 - 2 na liniji 11
INFO  23:21:21,863 - usao actParsAddOnMany na liniji 11
INFO  23:21:21,863 - 5 na liniji 11
INFO  23:21:21,863 - usao ActParsHas na liniji 16
INFO  23:21:21,863 - 1 na liniji 16
INFO  23:21:21,863 - usao actParsAddOnMany na liniji 11
INFO  23:21:21,863 - 2 na liniji 11
INFO  23:21:21,863 - usao actParsAddOnMany na liniji 11
INFO  23:21:21,864 - 5 na liniji 11
INFO  23:21:21,864 - usao ActParsHas na liniji 17
INFO  23:21:21,864 - 1 na liniji 17
ERROR 23:21:21,864 - Greska: Tip levo od znaka jednakosti nije bool !DesignatorStatementFindAny na liniji 19
INFO  23:21:39,013 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:21:39,036 - #2 program
INFO  23:21:39,036 - #44 MJProgram
INFO  23:21:39,036 - #3 const
INFO  23:21:39,037 - #44 bool
INFO  23:21:39,037 - #44 b
INFO  23:21:39,037 - #11 =
INFO  23:21:39,037 - #45 true
INFO  23:21:39,037 - #6 ;
INFO  23:21:39,038 - #4 {
INFO  23:21:39,038 - #44 int
INFO  23:21:39,038 - #44 func
INFO  23:21:39,038 - #7 (
INFO  23:21:39,039 - #44 int
INFO  23:21:39,039 - #44 a
INFO  23:21:39,039 - #15 ,
INFO  23:21:39,039 - #44 char
INFO  23:21:39,039 - #44 b
INFO  23:21:39,039 - #15 ,
INFO  23:21:39,039 - #44 bool
INFO  23:21:39,039 - #44 c
INFO  23:21:39,039 - #8 )
INFO  23:21:39,039 - #4 {
INFO  23:21:39,039 - #12 return
INFO  23:21:39,039 - #43 1
INFO  23:21:39,039 - #6 ;
INFO  23:21:39,040 - #5 }
INFO  23:21:39,040 - #17 void
INFO  23:21:39,041 - #44 main
INFO  23:21:39,041 - #7 (
INFO  23:21:39,041 - #8 )
INFO  23:21:39,041 - #44 int
INFO  23:21:39,041 - #44 y
INFO  23:21:39,041 - #6 ;
INFO  23:21:39,041 - #44 int
INFO  23:21:39,042 - #44 x
INFO  23:21:39,042 - #10 [
INFO  23:21:39,042 - #9 ]
INFO  23:21:39,042 - #6 ;
INFO  23:21:39,042 - #4 {
INFO  23:21:39,042 - #44 x
INFO  23:21:39,042 - #11 =
INFO  23:21:39,043 - #43 1
INFO  23:21:39,043 - #6 ;
INFO  23:21:39,043 - #44 y
INFO  23:21:39,043 - #11 =
INFO  23:21:39,043 - #44 func
INFO  23:21:39,043 - #7 (
INFO  23:21:39,043 - #43 1
INFO  23:21:39,043 - #15 ,
INFO  23:21:39,044 - #46 c
INFO  23:21:39,044 - #15 ,
INFO  23:21:39,044 - #45 true
INFO  23:21:39,044 - #8 )
INFO  23:21:39,044 - #6 ;
INFO  23:21:39,045 - #44 y
INFO  23:21:39,045 - #11 =
INFO  23:21:39,045 - #44 func
INFO  23:21:39,045 - #7 (
INFO  23:21:39,045 - #43 1
INFO  23:21:39,045 - #15 ,
INFO  23:21:39,045 - #46 c
INFO  23:21:39,045 - #15 ,
INFO  23:21:39,045 - #45 true
INFO  23:21:39,045 - #8 )
INFO  23:21:39,046 - #6 ;
INFO  23:21:39,046 - #44 b
INFO  23:21:39,046 - #11 =
INFO  23:21:39,046 - #44 y
INFO  23:21:39,046 - #18 .
INFO  23:21:39,047 - #41 findAny
INFO  23:21:39,047 - #7 (
INFO  23:21:39,048 - #43 3
INFO  23:21:39,048 - #8 )
INFO  23:21:39,048 - #6 ;
INFO  23:21:39,048 - #44 x
INFO  23:21:39,048 - #11 =
INFO  23:21:39,048 - #44 x
INFO  23:21:39,048 - #18 .
INFO  23:21:39,048 - #42 findAndReplace
INFO  23:21:39,048 - #7 (
INFO  23:21:39,048 - #43 3
INFO  23:21:39,048 - #15 ,
INFO  23:21:39,049 - #44 x
INFO  23:21:39,049 - #20 =>
INFO  23:21:39,049 - #43 4
INFO  23:21:39,049 - #8 )
INFO  23:21:39,049 - #6 ;
INFO  23:21:39,049 - #5 }
INFO  23:21:39,049 - #5 }
INFO  23:21:39,055 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               b
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               y
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           x
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:21:39,056 - ===================================
INFO  23:21:39,058 - Obradjuje se funckijafunc na liniji 6
INFO  23:21:39,058 - Hello Var a na liniji 6
INFO  23:21:39,058 - Hello Var b na liniji 6
INFO  23:21:39,059 - Hello Var c na liniji 6
INFO  23:21:39,059 - Obradjuje se funckijamain na liniji 11
INFO  23:21:39,059 - Hello Var y na liniji 12
INFO  23:21:39,059 - Hello Var x na liniji 13
ERROR 23:21:39,059 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 15
INFO  23:21:39,059 - usao actParsAddOnMany na liniji 11
INFO  23:21:39,059 - 2 na liniji 11
INFO  23:21:39,059 - usao actParsAddOnMany na liniji 11
INFO  23:21:39,059 - 5 na liniji 11
INFO  23:21:39,059 - usao ActParsHas na liniji 16
INFO  23:21:39,059 - 1 na liniji 16
INFO  23:21:39,059 - usao actParsAddOnMany na liniji 11
INFO  23:21:39,059 - 2 na liniji 11
INFO  23:21:39,059 - usao actParsAddOnMany na liniji 11
INFO  23:21:39,059 - 5 na liniji 11
INFO  23:21:39,059 - usao ActParsHas na liniji 17
INFO  23:21:39,060 - 1 na liniji 17
ERROR 23:21:39,060 - Greska: Tip desno od znaka jednakosti nije niz !DesignatorStatementFindAny na liniji 19
INFO  23:27:08,454 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:27:08,479 - #2 program
INFO  23:27:08,479 - #44 MJProgram
INFO  23:27:08,479 - #3 const
INFO  23:27:08,480 - #44 bool
INFO  23:27:08,480 - #44 b
INFO  23:27:08,480 - #11 =
INFO  23:27:08,480 - #45 true
INFO  23:27:08,480 - #6 ;
INFO  23:27:08,481 - #4 {
INFO  23:27:08,481 - #44 int
INFO  23:27:08,481 - #44 func
INFO  23:27:08,481 - #7 (
INFO  23:27:08,481 - #44 int
INFO  23:27:08,481 - #44 a
INFO  23:27:08,482 - #15 ,
INFO  23:27:08,482 - #44 char
INFO  23:27:08,482 - #44 b
INFO  23:27:08,482 - #15 ,
INFO  23:27:08,482 - #44 bool
INFO  23:27:08,482 - #44 c
INFO  23:27:08,482 - #8 )
INFO  23:27:08,482 - #4 {
INFO  23:27:08,482 - #12 return
INFO  23:27:08,482 - #43 1
INFO  23:27:08,482 - #6 ;
INFO  23:27:08,483 - #5 }
INFO  23:27:08,483 - #17 void
INFO  23:27:08,484 - #44 main
INFO  23:27:08,484 - #7 (
INFO  23:27:08,484 - #8 )
INFO  23:27:08,484 - #44 int
INFO  23:27:08,484 - #44 y
INFO  23:27:08,484 - #6 ;
INFO  23:27:08,484 - #44 int
INFO  23:27:08,485 - #44 x
INFO  23:27:08,485 - #10 [
INFO  23:27:08,485 - #9 ]
INFO  23:27:08,485 - #6 ;
INFO  23:27:08,485 - #4 {
INFO  23:27:08,485 - #44 x
INFO  23:27:08,485 - #11 =
INFO  23:27:08,486 - #43 1
INFO  23:27:08,486 - #6 ;
INFO  23:27:08,486 - #44 y
INFO  23:27:08,486 - #11 =
INFO  23:27:08,486 - #44 func
INFO  23:27:08,486 - #7 (
INFO  23:27:08,486 - #43 1
INFO  23:27:08,487 - #15 ,
INFO  23:27:08,487 - #46 c
INFO  23:27:08,487 - #15 ,
INFO  23:27:08,488 - #45 true
INFO  23:27:08,488 - #8 )
INFO  23:27:08,488 - #6 ;
INFO  23:27:08,488 - #44 y
INFO  23:27:08,488 - #11 =
INFO  23:27:08,489 - #44 func
INFO  23:27:08,489 - #7 (
INFO  23:27:08,489 - #43 1
INFO  23:27:08,489 - #15 ,
INFO  23:27:08,489 - #46 c
INFO  23:27:08,489 - #15 ,
INFO  23:27:08,489 - #45 true
INFO  23:27:08,489 - #8 )
INFO  23:27:08,489 - #6 ;
INFO  23:27:08,489 - #44 b
INFO  23:27:08,489 - #11 =
INFO  23:27:08,489 - #44 x
INFO  23:27:08,489 - #18 .
INFO  23:27:08,490 - #41 findAny
INFO  23:27:08,490 - #7 (
INFO  23:27:08,491 - #43 3
INFO  23:27:08,491 - #8 )
INFO  23:27:08,491 - #6 ;
INFO  23:27:08,491 - #44 x
INFO  23:27:08,491 - #11 =
INFO  23:27:08,491 - #44 x
INFO  23:27:08,491 - #18 .
INFO  23:27:08,491 - #42 findAndReplace
INFO  23:27:08,491 - #7 (
INFO  23:27:08,492 - #43 3
INFO  23:27:08,492 - #15 ,
INFO  23:27:08,492 - #44 cx
INFO  23:27:08,492 - #20 =>
INFO  23:27:08,492 - #43 4
INFO  23:27:08,492 - #8 )
INFO  23:27:08,492 - #6 ;
INFO  23:27:08,492 - #5 }
INFO  23:27:08,492 - #5 }
INFO  23:27:08,498 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               b
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           cx
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:27:08,499 - ===================================
INFO  23:27:08,502 - Obradjuje se funckijafunc na liniji 6
INFO  23:27:08,502 - Hello Var a na liniji 6
INFO  23:27:08,502 - Hello Var b na liniji 6
INFO  23:27:08,502 - Hello Var c na liniji 6
INFO  23:27:08,502 - Obradjuje se funckijamain na liniji 11
INFO  23:27:08,502 - Hello Var y na liniji 12
INFO  23:27:08,502 - Hello Var x na liniji 13
ERROR 23:27:08,502 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 15
INFO  23:27:08,503 - usao actParsAddOnMany na liniji 11
INFO  23:27:08,503 - 2 na liniji 11
INFO  23:27:08,503 - usao actParsAddOnMany na liniji 11
INFO  23:27:08,503 - 5 na liniji 11
INFO  23:27:08,503 - usao ActParsHas na liniji 16
INFO  23:27:08,503 - 1 na liniji 16
INFO  23:27:08,503 - usao actParsAddOnMany na liniji 11
INFO  23:27:08,503 - 2 na liniji 11
INFO  23:27:08,503 - usao actParsAddOnMany na liniji 11
INFO  23:27:08,503 - 5 na liniji 11
INFO  23:27:08,503 - usao ActParsHas na liniji 17
INFO  23:27:08,503 - 1 na liniji 17
ERROR 23:27:08,503 - Greska: Parameter nije deklarisan na liniji 21
INFO  23:27:22,341 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:27:22,364 - #2 program
INFO  23:27:22,364 - #44 MJProgram
INFO  23:27:22,364 - #3 const
INFO  23:27:22,365 - #44 bool
INFO  23:27:22,365 - #44 b
INFO  23:27:22,365 - #11 =
INFO  23:27:22,365 - #45 true
INFO  23:27:22,365 - #6 ;
INFO  23:27:22,367 - #4 {
INFO  23:27:22,367 - #44 int
INFO  23:27:22,367 - #44 func
INFO  23:27:22,367 - #7 (
INFO  23:27:22,367 - #44 int
INFO  23:27:22,367 - #44 a
INFO  23:27:22,367 - #15 ,
INFO  23:27:22,367 - #44 char
INFO  23:27:22,367 - #44 b
INFO  23:27:22,367 - #15 ,
INFO  23:27:22,367 - #44 bool
INFO  23:27:22,367 - #44 c
INFO  23:27:22,367 - #8 )
INFO  23:27:22,367 - #4 {
INFO  23:27:22,367 - #12 return
INFO  23:27:22,367 - #43 1
INFO  23:27:22,367 - #6 ;
INFO  23:27:22,368 - #5 }
INFO  23:27:22,368 - #17 void
INFO  23:27:22,368 - #44 main
INFO  23:27:22,369 - #7 (
INFO  23:27:22,369 - #8 )
INFO  23:27:22,369 - #44 int
INFO  23:27:22,369 - #44 y
INFO  23:27:22,369 - #6 ;
INFO  23:27:22,369 - #44 int
INFO  23:27:22,371 - #44 x
INFO  23:27:22,371 - #10 [
INFO  23:27:22,371 - #9 ]
INFO  23:27:22,371 - #6 ;
INFO  23:27:22,371 - #4 {
INFO  23:27:22,371 - #44 x
INFO  23:27:22,371 - #11 =
INFO  23:27:22,371 - #43 1
INFO  23:27:22,371 - #6 ;
INFO  23:27:22,371 - #44 y
INFO  23:27:22,371 - #11 =
INFO  23:27:22,371 - #44 func
INFO  23:27:22,371 - #7 (
INFO  23:27:22,371 - #43 1
INFO  23:27:22,371 - #15 ,
INFO  23:27:22,372 - #46 c
INFO  23:27:22,372 - #15 ,
INFO  23:27:22,372 - #45 true
INFO  23:27:22,372 - #8 )
INFO  23:27:22,372 - #6 ;
INFO  23:27:22,373 - #44 y
INFO  23:27:22,373 - #11 =
INFO  23:27:22,373 - #44 func
INFO  23:27:22,373 - #7 (
INFO  23:27:22,373 - #43 1
INFO  23:27:22,373 - #15 ,
INFO  23:27:22,373 - #46 c
INFO  23:27:22,373 - #15 ,
INFO  23:27:22,373 - #45 true
INFO  23:27:22,373 - #8 )
INFO  23:27:22,373 - #6 ;
INFO  23:27:22,374 - #44 b
INFO  23:27:22,374 - #11 =
INFO  23:27:22,374 - #44 x
INFO  23:27:22,374 - #18 .
INFO  23:27:22,376 - #41 findAny
INFO  23:27:22,376 - #7 (
INFO  23:27:22,376 - #43 3
INFO  23:27:22,376 - #8 )
INFO  23:27:22,376 - #6 ;
INFO  23:27:22,376 - #44 x
INFO  23:27:22,376 - #11 =
INFO  23:27:22,376 - #44 x
INFO  23:27:22,376 - #18 .
INFO  23:27:22,376 - #42 findAndReplace
INFO  23:27:22,376 - #7 (
INFO  23:27:22,376 - #43 3
INFO  23:27:22,376 - #15 ,
INFO  23:27:22,376 - #44 y
INFO  23:27:22,376 - #20 =>
INFO  23:27:22,376 - #43 4
INFO  23:27:22,376 - #8 )
INFO  23:27:22,376 - #6 ;
INFO  23:27:22,378 - #5 }
INFO  23:27:22,378 - #5 }
INFO  23:27:22,384 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               b
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           y
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:27:22,384 - ===================================
INFO  23:27:22,387 - Obradjuje se funckijafunc na liniji 6
INFO  23:27:22,387 - Hello Var a na liniji 6
INFO  23:27:22,387 - Hello Var b na liniji 6
INFO  23:27:22,387 - Hello Var c na liniji 6
INFO  23:27:22,387 - Obradjuje se funckijamain na liniji 11
INFO  23:27:22,387 - Hello Var y na liniji 12
INFO  23:27:22,387 - Hello Var x na liniji 13
ERROR 23:27:22,387 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 15
INFO  23:27:22,387 - usao actParsAddOnMany na liniji 11
INFO  23:27:22,387 - 2 na liniji 11
INFO  23:27:22,387 - usao actParsAddOnMany na liniji 11
INFO  23:27:22,388 - 5 na liniji 11
INFO  23:27:22,388 - usao ActParsHas na liniji 16
INFO  23:27:22,388 - 1 na liniji 16
INFO  23:27:22,388 - usao actParsAddOnMany na liniji 11
INFO  23:27:22,388 - 2 na liniji 11
INFO  23:27:22,388 - usao actParsAddOnMany na liniji 11
INFO  23:27:22,388 - 5 na liniji 11
INFO  23:27:22,388 - usao ActParsHas na liniji 17
INFO  23:27:22,388 - 1 na liniji 17
INFO  23:27:39,259 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:27:39,287 - #2 program
INFO  23:27:39,287 - #44 MJProgram
INFO  23:27:39,287 - #3 const
INFO  23:27:39,288 - #44 bool
INFO  23:27:39,288 - #44 b
INFO  23:27:39,288 - #11 =
INFO  23:27:39,288 - #45 true
INFO  23:27:39,288 - #6 ;
INFO  23:27:39,289 - #4 {
INFO  23:27:39,289 - #44 int
INFO  23:27:39,290 - #44 func
INFO  23:27:39,290 - #7 (
INFO  23:27:39,290 - #44 int
INFO  23:27:39,290 - #44 a
INFO  23:27:39,290 - #15 ,
INFO  23:27:39,290 - #44 char
INFO  23:27:39,290 - #44 b
INFO  23:27:39,290 - #15 ,
INFO  23:27:39,290 - #44 bool
INFO  23:27:39,290 - #44 c
INFO  23:27:39,291 - #8 )
INFO  23:27:39,291 - #4 {
INFO  23:27:39,291 - #12 return
INFO  23:27:39,291 - #43 1
INFO  23:27:39,291 - #6 ;
INFO  23:27:39,291 - #5 }
INFO  23:27:39,291 - #17 void
INFO  23:27:39,292 - #44 main
INFO  23:27:39,292 - #7 (
INFO  23:27:39,292 - #8 )
INFO  23:27:39,292 - #44 bool
INFO  23:27:39,292 - #44 y
INFO  23:27:39,293 - #6 ;
INFO  23:27:39,293 - #44 int
INFO  23:27:39,293 - #44 x
INFO  23:27:39,293 - #10 [
INFO  23:27:39,293 - #9 ]
INFO  23:27:39,293 - #6 ;
INFO  23:27:39,294 - #4 {
INFO  23:27:39,294 - #44 x
INFO  23:27:39,294 - #11 =
INFO  23:27:39,294 - #43 1
INFO  23:27:39,294 - #6 ;
INFO  23:27:39,295 - #44 y
INFO  23:27:39,295 - #11 =
INFO  23:27:39,295 - #44 func
INFO  23:27:39,295 - #7 (
INFO  23:27:39,295 - #43 1
INFO  23:27:39,295 - #15 ,
INFO  23:27:39,296 - #46 c
INFO  23:27:39,296 - #15 ,
INFO  23:27:39,297 - #45 true
INFO  23:27:39,297 - #8 )
INFO  23:27:39,297 - #6 ;
INFO  23:27:39,297 - #44 y
INFO  23:27:39,298 - #11 =
INFO  23:27:39,298 - #44 func
INFO  23:27:39,298 - #7 (
INFO  23:27:39,298 - #43 1
INFO  23:27:39,298 - #15 ,
INFO  23:27:39,298 - #46 c
INFO  23:27:39,298 - #15 ,
INFO  23:27:39,298 - #45 true
INFO  23:27:39,298 - #8 )
INFO  23:27:39,298 - #6 ;
INFO  23:27:39,298 - #44 b
INFO  23:27:39,298 - #11 =
INFO  23:27:39,298 - #44 x
INFO  23:27:39,298 - #18 .
INFO  23:27:39,299 - #41 findAny
INFO  23:27:39,299 - #7 (
INFO  23:27:39,300 - #43 3
INFO  23:27:39,300 - #8 )
INFO  23:27:39,300 - #6 ;
INFO  23:27:39,300 - #44 x
INFO  23:27:39,300 - #11 =
INFO  23:27:39,300 - #44 x
INFO  23:27:39,300 - #18 .
INFO  23:27:39,300 - #42 findAndReplace
INFO  23:27:39,300 - #7 (
INFO  23:27:39,301 - #43 3
INFO  23:27:39,301 - #15 ,
INFO  23:27:39,301 - #44 y
INFO  23:27:39,301 - #20 =>
INFO  23:27:39,301 - #43 4
INFO  23:27:39,301 - #8 )
INFO  23:27:39,301 - #6 ;
INFO  23:27:39,302 - #5 }
INFO  23:27:39,302 - #5 }
INFO  23:27:39,309 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               b
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           y
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:27:39,310 - ===================================
INFO  23:27:39,313 - Obradjuje se funckijafunc na liniji 6
INFO  23:27:39,313 - Hello Var a na liniji 6
INFO  23:27:39,313 - Hello Var b na liniji 6
INFO  23:27:39,313 - Hello Var c na liniji 6
INFO  23:27:39,313 - Obradjuje se funckijamain na liniji 11
INFO  23:27:39,314 - Hello Var y na liniji 12
INFO  23:27:39,314 - Hello Var x na liniji 13
ERROR 23:27:39,314 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 15
INFO  23:27:39,314 - usao actParsAddOnMany na liniji 11
INFO  23:27:39,314 - 2 na liniji 11
INFO  23:27:39,314 - usao actParsAddOnMany na liniji 11
INFO  23:27:39,314 - 5 na liniji 11
INFO  23:27:39,314 - usao ActParsHas na liniji 16
INFO  23:27:39,314 - 1 na liniji 16
ERROR 23:27:39,314 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 16
INFO  23:27:39,314 - usao actParsAddOnMany na liniji 11
INFO  23:27:39,314 - 2 na liniji 11
INFO  23:27:39,314 - usao actParsAddOnMany na liniji 11
INFO  23:27:39,315 - 5 na liniji 11
INFO  23:27:39,315 - usao ActParsHas na liniji 17
INFO  23:27:39,315 - 1 na liniji 17
ERROR 23:27:39,315 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 17
ERROR 23:27:39,315 - Greska: Tipovi nisu jednaki !DesignatorStatementFindAndReplace na liniji 21
INFO  23:28:06,020 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:28:06,044 - #2 program
INFO  23:28:06,044 - #44 MJProgram
INFO  23:28:06,044 - #3 const
INFO  23:28:06,045 - #44 bool
INFO  23:28:06,045 - #44 b
INFO  23:28:06,045 - #11 =
INFO  23:28:06,045 - #45 true
INFO  23:28:06,045 - #6 ;
INFO  23:28:06,046 - #4 {
INFO  23:28:06,047 - #44 int
INFO  23:28:06,047 - #44 func
INFO  23:28:06,047 - #7 (
INFO  23:28:06,047 - #44 int
INFO  23:28:06,047 - #44 a
INFO  23:28:06,047 - #15 ,
INFO  23:28:06,047 - #44 char
INFO  23:28:06,047 - #44 b
INFO  23:28:06,047 - #15 ,
INFO  23:28:06,047 - #44 bool
INFO  23:28:06,047 - #44 c
INFO  23:28:06,047 - #8 )
INFO  23:28:06,047 - #4 {
INFO  23:28:06,048 - #12 return
INFO  23:28:06,048 - #43 1
INFO  23:28:06,048 - #6 ;
INFO  23:28:06,048 - #5 }
INFO  23:28:06,048 - #17 void
INFO  23:28:06,049 - #44 main
INFO  23:28:06,049 - #7 (
INFO  23:28:06,049 - #8 )
INFO  23:28:06,049 - #44 bool
INFO  23:28:06,049 - #44 y
INFO  23:28:06,049 - #6 ;
INFO  23:28:06,049 - #44 bool
INFO  23:28:06,050 - #44 x
INFO  23:28:06,050 - #10 [
INFO  23:28:06,050 - #9 ]
INFO  23:28:06,050 - #6 ;
INFO  23:28:06,050 - #4 {
INFO  23:28:06,050 - #44 x
INFO  23:28:06,050 - #11 =
INFO  23:28:06,051 - #43 1
INFO  23:28:06,051 - #6 ;
INFO  23:28:06,051 - #44 y
INFO  23:28:06,051 - #11 =
INFO  23:28:06,051 - #44 func
INFO  23:28:06,051 - #7 (
INFO  23:28:06,051 - #43 1
INFO  23:28:06,051 - #15 ,
INFO  23:28:06,052 - #46 c
INFO  23:28:06,052 - #15 ,
INFO  23:28:06,052 - #45 true
INFO  23:28:06,052 - #8 )
INFO  23:28:06,052 - #6 ;
INFO  23:28:06,053 - #44 y
INFO  23:28:06,053 - #11 =
INFO  23:28:06,053 - #44 func
INFO  23:28:06,053 - #7 (
INFO  23:28:06,053 - #43 1
INFO  23:28:06,053 - #15 ,
INFO  23:28:06,053 - #46 c
INFO  23:28:06,053 - #15 ,
INFO  23:28:06,053 - #45 true
INFO  23:28:06,053 - #8 )
INFO  23:28:06,053 - #6 ;
INFO  23:28:06,053 - #44 b
INFO  23:28:06,053 - #11 =
INFO  23:28:06,054 - #44 x
INFO  23:28:06,054 - #18 .
INFO  23:28:06,055 - #41 findAny
INFO  23:28:06,055 - #7 (
INFO  23:28:06,055 - #43 3
INFO  23:28:06,055 - #8 )
INFO  23:28:06,055 - #6 ;
INFO  23:28:06,055 - #44 x
INFO  23:28:06,055 - #11 =
INFO  23:28:06,055 - #44 x
INFO  23:28:06,055 - #18 .
INFO  23:28:06,055 - #42 findAndReplace
INFO  23:28:06,055 - #7 (
INFO  23:28:06,056 - #43 3
INFO  23:28:06,056 - #15 ,
INFO  23:28:06,056 - #44 y
INFO  23:28:06,056 - #20 =>
INFO  23:28:06,056 - #43 4
INFO  23:28:06,056 - #8 )
INFO  23:28:06,056 - #6 ;
INFO  23:28:06,056 - #5 }
INFO  23:28:06,056 - #5 }
INFO  23:28:06,063 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             bool
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               b
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           y
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:28:06,063 - ===================================
INFO  23:28:06,066 - Obradjuje se funckijafunc na liniji 6
INFO  23:28:06,066 - Hello Var a na liniji 6
INFO  23:28:06,066 - Hello Var b na liniji 6
INFO  23:28:06,066 - Hello Var c na liniji 6
INFO  23:28:06,066 - Obradjuje se funckijamain na liniji 11
INFO  23:28:06,066 - Hello Var y na liniji 12
INFO  23:28:06,066 - Hello Var x na liniji 13
ERROR 23:28:06,066 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 15
INFO  23:28:06,066 - usao actParsAddOnMany na liniji 11
INFO  23:28:06,066 - 2 na liniji 11
INFO  23:28:06,068 - usao actParsAddOnMany na liniji 11
INFO  23:28:06,068 - 5 na liniji 11
INFO  23:28:06,068 - usao ActParsHas na liniji 16
INFO  23:28:06,068 - 1 na liniji 16
ERROR 23:28:06,068 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 16
INFO  23:28:06,068 - usao actParsAddOnMany na liniji 11
INFO  23:28:06,068 - 2 na liniji 11
INFO  23:28:06,068 - usao actParsAddOnMany na liniji 11
INFO  23:28:06,068 - 5 na liniji 11
INFO  23:28:06,068 - usao ActParsHas na liniji 17
INFO  23:28:06,068 - 1 na liniji 17
ERROR 23:28:06,068 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 17
INFO  23:28:33,491 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:28:33,515 - #2 program
INFO  23:28:33,515 - #44 MJProgram
INFO  23:28:33,515 - #3 const
INFO  23:28:33,515 - #44 bool
INFO  23:28:33,516 - #44 b
INFO  23:28:33,516 - #11 =
INFO  23:28:33,516 - #45 true
INFO  23:28:33,516 - #6 ;
INFO  23:28:33,517 - #4 {
INFO  23:28:33,517 - #44 int
INFO  23:28:33,517 - #44 func
INFO  23:28:33,517 - #7 (
INFO  23:28:33,517 - #44 int
INFO  23:28:33,517 - #44 a
INFO  23:28:33,517 - #15 ,
INFO  23:28:33,518 - #44 char
INFO  23:28:33,518 - #44 b
INFO  23:28:33,518 - #15 ,
INFO  23:28:33,518 - #44 bool
INFO  23:28:33,518 - #44 c
INFO  23:28:33,518 - #8 )
INFO  23:28:33,518 - #4 {
INFO  23:28:33,518 - #12 return
INFO  23:28:33,518 - #43 1
INFO  23:28:33,518 - #6 ;
INFO  23:28:33,519 - #5 }
INFO  23:28:33,519 - #17 void
INFO  23:28:33,519 - #44 main
INFO  23:28:33,519 - #7 (
INFO  23:28:33,519 - #8 )
INFO  23:28:33,520 - #44 int
INFO  23:28:33,520 - #44 y
INFO  23:28:33,520 - #6 ;
INFO  23:28:33,520 - #44 int
INFO  23:28:33,520 - #44 x
INFO  23:28:33,520 - #10 [
INFO  23:28:33,521 - #9 ]
INFO  23:28:33,521 - #6 ;
INFO  23:28:33,521 - #4 {
INFO  23:28:33,521 - #44 x
INFO  23:28:33,521 - #11 =
INFO  23:28:33,521 - #43 1
INFO  23:28:33,521 - #6 ;
INFO  23:28:33,522 - #44 y
INFO  23:28:33,522 - #11 =
INFO  23:28:33,522 - #44 func
INFO  23:28:33,522 - #7 (
INFO  23:28:33,522 - #43 1
INFO  23:28:33,522 - #15 ,
INFO  23:28:33,523 - #46 c
INFO  23:28:33,523 - #15 ,
INFO  23:28:33,523 - #45 true
INFO  23:28:33,523 - #8 )
INFO  23:28:33,523 - #6 ;
INFO  23:28:33,524 - #44 y
INFO  23:28:33,524 - #11 =
INFO  23:28:33,524 - #44 func
INFO  23:28:33,524 - #7 (
INFO  23:28:33,524 - #43 1
INFO  23:28:33,524 - #15 ,
INFO  23:28:33,524 - #46 c
INFO  23:28:33,524 - #15 ,
INFO  23:28:33,524 - #45 true
INFO  23:28:33,524 - #8 )
INFO  23:28:33,524 - #6 ;
INFO  23:28:33,524 - #44 b
INFO  23:28:33,524 - #11 =
INFO  23:28:33,524 - #44 x
INFO  23:28:33,524 - #18 .
INFO  23:28:33,525 - #41 findAny
INFO  23:28:33,525 - #7 (
INFO  23:28:33,526 - #43 3
INFO  23:28:33,526 - #8 )
INFO  23:28:33,526 - #6 ;
INFO  23:28:33,526 - #44 x
INFO  23:28:33,526 - #11 =
INFO  23:28:33,526 - #44 x
INFO  23:28:33,526 - #18 .
INFO  23:28:33,526 - #42 findAndReplace
INFO  23:28:33,526 - #7 (
INFO  23:28:33,527 - #43 3
INFO  23:28:33,527 - #15 ,
INFO  23:28:33,527 - #44 y
INFO  23:28:33,527 - #20 =>
INFO  23:28:33,527 - #43 4
INFO  23:28:33,527 - #8 )
INFO  23:28:33,527 - #6 ;
INFO  23:28:33,527 - #5 }
INFO  23:28:33,527 - #5 }
INFO  23:28:33,533 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               b
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           y
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:28:33,534 - ===================================
INFO  23:28:33,536 - Obradjuje se funckijafunc na liniji 6
INFO  23:28:33,536 - Hello Var a na liniji 6
INFO  23:28:33,538 - Hello Var b na liniji 6
INFO  23:28:33,538 - Hello Var c na liniji 6
INFO  23:28:33,538 - Obradjuje se funckijamain na liniji 11
INFO  23:28:33,538 - Hello Var y na liniji 12
INFO  23:28:33,538 - Hello Var x na liniji 13
ERROR 23:28:33,538 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 15
INFO  23:28:33,538 - usao actParsAddOnMany na liniji 11
INFO  23:28:33,538 - 2 na liniji 11
INFO  23:28:33,538 - usao actParsAddOnMany na liniji 11
INFO  23:28:33,538 - 5 na liniji 11
INFO  23:28:33,538 - usao ActParsHas na liniji 16
INFO  23:28:33,538 - 1 na liniji 16
INFO  23:28:33,539 - usao actParsAddOnMany na liniji 11
INFO  23:28:33,539 - 2 na liniji 11
INFO  23:28:33,539 - usao actParsAddOnMany na liniji 11
INFO  23:28:33,539 - 5 na liniji 11
INFO  23:28:33,539 - usao ActParsHas na liniji 17
INFO  23:28:33,539 - 1 na liniji 17
INFO  23:28:43,992 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:28:44,016 - #2 program
INFO  23:28:44,016 - #44 MJProgram
INFO  23:28:44,016 - #3 const
INFO  23:28:44,017 - #44 bool
INFO  23:28:44,017 - #44 b
INFO  23:28:44,017 - #11 =
INFO  23:28:44,017 - #45 true
INFO  23:28:44,017 - #6 ;
INFO  23:28:44,018 - #4 {
INFO  23:28:44,018 - #44 int
INFO  23:28:44,018 - #44 func
INFO  23:28:44,018 - #7 (
INFO  23:28:44,019 - #44 int
INFO  23:28:44,019 - #44 a
INFO  23:28:44,019 - #15 ,
INFO  23:28:44,019 - #44 char
INFO  23:28:44,019 - #44 b
INFO  23:28:44,019 - #15 ,
INFO  23:28:44,019 - #44 bool
INFO  23:28:44,019 - #44 c
INFO  23:28:44,019 - #8 )
INFO  23:28:44,019 - #4 {
INFO  23:28:44,019 - #12 return
INFO  23:28:44,019 - #43 1
INFO  23:28:44,020 - #6 ;
INFO  23:28:44,020 - #5 }
INFO  23:28:44,020 - #17 void
INFO  23:28:44,021 - #44 main
INFO  23:28:44,021 - #7 (
INFO  23:28:44,021 - #8 )
INFO  23:28:44,021 - #44 int
INFO  23:28:44,021 - #44 y
INFO  23:28:44,021 - #6 ;
INFO  23:28:44,021 - #44 int
INFO  23:28:44,022 - #44 x
INFO  23:28:44,022 - #10 [
INFO  23:28:44,022 - #9 ]
INFO  23:28:44,022 - #6 ;
INFO  23:28:44,022 - #4 {
INFO  23:28:44,022 - #44 x
INFO  23:28:44,022 - #11 =
INFO  23:28:44,023 - #43 1
INFO  23:28:44,023 - #6 ;
INFO  23:28:44,023 - #44 y
INFO  23:28:44,023 - #11 =
INFO  23:28:44,023 - #44 func
INFO  23:28:44,023 - #7 (
INFO  23:28:44,023 - #43 1
INFO  23:28:44,023 - #15 ,
INFO  23:28:44,024 - #46 c
INFO  23:28:44,024 - #15 ,
INFO  23:28:44,024 - #45 true
INFO  23:28:44,024 - #8 )
INFO  23:28:44,024 - #6 ;
INFO  23:28:44,025 - #44 y
INFO  23:28:44,025 - #11 =
INFO  23:28:44,025 - #44 func
INFO  23:28:44,025 - #7 (
INFO  23:28:44,025 - #43 1
INFO  23:28:44,025 - #15 ,
INFO  23:28:44,025 - #46 c
INFO  23:28:44,025 - #15 ,
INFO  23:28:44,025 - #45 true
INFO  23:28:44,026 - #8 )
INFO  23:28:44,026 - #6 ;
INFO  23:28:44,026 - #44 b
INFO  23:28:44,026 - #11 =
INFO  23:28:44,026 - #44 x
INFO  23:28:44,026 - #18 .
INFO  23:28:44,027 - #41 findAny
INFO  23:28:44,027 - #7 (
INFO  23:28:44,028 - #43 3
INFO  23:28:44,028 - #8 )
INFO  23:28:44,028 - #6 ;
INFO  23:28:44,028 - #44 x
INFO  23:28:44,028 - #11 =
INFO  23:28:44,028 - #44 x
INFO  23:28:44,028 - #18 .
INFO  23:28:44,028 - #42 findAndReplace
INFO  23:28:44,028 - #7 (
INFO  23:28:44,029 - #43 3
INFO  23:28:44,029 - #15 ,
INFO  23:28:44,029 - #44 c
INFO  23:28:44,029 - #20 =>
INFO  23:28:44,029 - #43 4
INFO  23:28:44,029 - #8 )
INFO  23:28:44,029 - #6 ;
INFO  23:28:44,029 - #5 }
INFO  23:28:44,029 - #5 }
INFO  23:28:44,035 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               b
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           c
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:28:44,036 - ===================================
INFO  23:28:44,038 - Obradjuje se funckijafunc na liniji 6
INFO  23:28:44,038 - Hello Var a na liniji 6
INFO  23:28:44,039 - Hello Var b na liniji 6
INFO  23:28:44,039 - Hello Var c na liniji 6
INFO  23:28:44,039 - Obradjuje se funckijamain na liniji 11
INFO  23:28:44,039 - Hello Var y na liniji 12
INFO  23:28:44,039 - Hello Var x na liniji 13
ERROR 23:28:44,039 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 15
INFO  23:28:44,039 - usao actParsAddOnMany na liniji 11
INFO  23:28:44,039 - 2 na liniji 11
INFO  23:28:44,039 - usao actParsAddOnMany na liniji 11
INFO  23:28:44,039 - 5 na liniji 11
INFO  23:28:44,039 - usao ActParsHas na liniji 16
INFO  23:28:44,039 - 1 na liniji 16
INFO  23:28:44,040 - usao actParsAddOnMany na liniji 11
INFO  23:28:44,040 - 2 na liniji 11
INFO  23:28:44,040 - usao actParsAddOnMany na liniji 11
INFO  23:28:44,040 - 5 na liniji 11
INFO  23:28:44,040 - usao ActParsHas na liniji 17
INFO  23:28:44,040 - 1 na liniji 17
ERROR 23:28:44,040 - Greska: Parameter nije deklarisan na liniji 21
INFO  23:29:28,614 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:29:28,639 - #2 program
INFO  23:29:28,639 - #44 MJProgram
INFO  23:29:28,639 - #3 const
INFO  23:29:28,640 - #44 bool
INFO  23:29:28,640 - #44 b
INFO  23:29:28,640 - #11 =
INFO  23:29:28,641 - #45 true
INFO  23:29:28,641 - #6 ;
INFO  23:29:28,641 - #4 {
INFO  23:29:28,642 - #44 int
INFO  23:29:28,642 - #44 func
INFO  23:29:28,642 - #7 (
INFO  23:29:28,642 - #44 int
INFO  23:29:28,642 - #44 a
INFO  23:29:28,642 - #15 ,
INFO  23:29:28,642 - #44 char
INFO  23:29:28,642 - #44 b
INFO  23:29:28,642 - #15 ,
INFO  23:29:28,642 - #44 bool
INFO  23:29:28,642 - #44 c
INFO  23:29:28,643 - #8 )
INFO  23:29:28,643 - #4 {
INFO  23:29:28,643 - #12 return
INFO  23:29:28,643 - #43 1
INFO  23:29:28,643 - #6 ;
INFO  23:29:28,643 - #5 }
INFO  23:29:28,643 - #17 void
INFO  23:29:28,644 - #44 main
INFO  23:29:28,644 - #7 (
INFO  23:29:28,644 - #8 )
INFO  23:29:28,644 - #44 int
INFO  23:29:28,644 - #44 y
INFO  23:29:28,645 - #6 ;
INFO  23:29:28,645 - #44 int
INFO  23:29:28,645 - #44 x
INFO  23:29:28,645 - #10 [
INFO  23:29:28,645 - #9 ]
INFO  23:29:28,645 - #6 ;
INFO  23:29:28,645 - #4 {
INFO  23:29:28,645 - #44 x
INFO  23:29:28,645 - #11 =
INFO  23:29:28,646 - #43 1
INFO  23:29:28,646 - #6 ;
INFO  23:29:28,646 - #44 y
INFO  23:29:28,646 - #11 =
INFO  23:29:28,647 - #44 func
INFO  23:29:28,647 - #7 (
INFO  23:29:28,647 - #43 1
INFO  23:29:28,647 - #15 ,
INFO  23:29:28,647 - #46 c
INFO  23:29:28,647 - #15 ,
INFO  23:29:28,648 - #45 true
INFO  23:29:28,648 - #8 )
INFO  23:29:28,648 - #6 ;
INFO  23:29:28,648 - #44 y
INFO  23:29:28,648 - #11 =
INFO  23:29:28,649 - #44 func
INFO  23:29:28,649 - #7 (
INFO  23:29:28,649 - #43 1
INFO  23:29:28,649 - #15 ,
INFO  23:29:28,649 - #46 c
INFO  23:29:28,649 - #15 ,
INFO  23:29:28,649 - #45 true
INFO  23:29:28,649 - #8 )
INFO  23:29:28,649 - #6 ;
INFO  23:29:28,649 - #44 b
INFO  23:29:28,649 - #11 =
INFO  23:29:28,649 - #44 x
INFO  23:29:28,649 - #18 .
INFO  23:29:28,650 - #41 findAny
INFO  23:29:28,650 - #7 (
INFO  23:29:28,651 - #43 3
INFO  23:29:28,651 - #8 )
INFO  23:29:28,651 - #6 ;
INFO  23:29:28,651 - #44 x
INFO  23:29:28,651 - #11 =
INFO  23:29:28,651 - #44 x
INFO  23:29:28,651 - #18 .
INFO  23:29:28,651 - #42 findAndReplace
INFO  23:29:28,651 - #7 (
INFO  23:29:28,652 - #43 3
INFO  23:29:28,652 - #15 ,
INFO  23:29:28,652 - #44 c
INFO  23:29:28,652 - #20 =>
INFO  23:29:28,652 - #43 4
INFO  23:29:28,652 - #8 )
INFO  23:29:28,652 - #6 ;
INFO  23:29:28,653 - #5 }
INFO  23:29:28,653 - #5 }
INFO  23:29:28,659 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             b
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               int
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 y
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             int
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               b
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           c
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:29:28,660 - ===================================
INFO  23:29:28,662 - Obradjuje se funckijafunc na liniji 6
INFO  23:29:28,663 - Hello Var a na liniji 6
INFO  23:29:28,663 - Hello Var b na liniji 6
INFO  23:29:28,663 - Hello Var c na liniji 6
INFO  23:29:28,663 - Obradjuje se funckijamain na liniji 11
INFO  23:29:28,663 - Hello Var y na liniji 12
INFO  23:29:28,663 - Hello Var x na liniji 13
ERROR 23:29:28,663 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 15
INFO  23:29:28,663 - usao actParsAddOnMany na liniji 11
INFO  23:29:28,663 - 2 na liniji 11
INFO  23:29:28,663 - usao actParsAddOnMany na liniji 11
INFO  23:29:28,663 - 5 na liniji 11
INFO  23:29:28,663 - usao ActParsHas na liniji 16
INFO  23:29:28,663 - 1 na liniji 16
INFO  23:29:28,664 - usao actParsAddOnMany na liniji 11
INFO  23:29:28,664 - 2 na liniji 11
INFO  23:29:28,664 - usao actParsAddOnMany na liniji 11
INFO  23:29:28,664 - 5 na liniji 11
INFO  23:29:28,664 - usao ActParsHas na liniji 17
INFO  23:29:28,664 - 1 na liniji 17
ERROR 23:29:28,664 - Greska: Parameter nije deklarisan !DesignatorStatementFindAndReplace na liniji 21
INFO  23:30:42,369 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:30:42,392 - #2 program
INFO  23:30:42,392 - #44 MJProgram
INFO  23:30:42,392 - #3 const
INFO  23:30:42,393 - #44 bool
INFO  23:30:42,393 - #44 b
INFO  23:30:42,393 - #11 =
INFO  23:30:42,393 - #45 true
INFO  23:30:42,393 - #6 ;
INFO  23:30:42,394 - #4 {
INFO  23:30:42,395 - #44 int
INFO  23:30:42,395 - #44 func
INFO  23:30:42,395 - #7 (
INFO  23:30:42,395 - #44 int
INFO  23:30:42,395 - #44 a
INFO  23:30:42,395 - #15 ,
INFO  23:30:42,395 - #44 char
INFO  23:30:42,395 - #44 w
INFO  23:30:42,395 - #15 ,
INFO  23:30:42,395 - #44 bool
INFO  23:30:42,395 - #44 c
INFO  23:30:42,395 - #8 )
INFO  23:30:42,396 - #4 {
INFO  23:30:42,396 - #12 return
INFO  23:30:42,396 - #43 1
INFO  23:30:42,396 - #6 ;
INFO  23:30:42,396 - #5 }
INFO  23:30:42,396 - #17 void
INFO  23:30:42,397 - #44 main
INFO  23:30:42,397 - #7 (
INFO  23:30:42,397 - #8 )
INFO  23:30:42,397 - #44 int
INFO  23:30:42,397 - #44 y
INFO  23:30:42,397 - #6 ;
INFO  23:30:42,397 - #44 char
INFO  23:30:42,398 - #44 u
INFO  23:30:42,398 - #6 ;
INFO  23:30:42,398 - #44 char
INFO  23:30:42,398 - #44 x
INFO  23:30:42,398 - #10 [
INFO  23:30:42,398 - #9 ]
INFO  23:30:42,398 - #6 ;
INFO  23:30:42,398 - #4 {
INFO  23:30:42,398 - #44 x
INFO  23:30:42,398 - #11 =
INFO  23:30:42,399 - #43 1
INFO  23:30:42,399 - #6 ;
INFO  23:30:42,399 - #44 y
INFO  23:30:42,399 - #11 =
INFO  23:30:42,399 - #44 func
INFO  23:30:42,399 - #7 (
INFO  23:30:42,399 - #43 1
INFO  23:30:42,399 - #15 ,
INFO  23:30:42,400 - #46 c
INFO  23:30:42,400 - #15 ,
INFO  23:30:42,400 - #45 true
INFO  23:30:42,400 - #8 )
INFO  23:30:42,400 - #6 ;
INFO  23:30:42,401 - #44 y
INFO  23:30:42,401 - #11 =
INFO  23:30:42,401 - #44 func
INFO  23:30:42,401 - #7 (
INFO  23:30:42,401 - #43 1
INFO  23:30:42,401 - #15 ,
INFO  23:30:42,401 - #46 c
INFO  23:30:42,401 - #15 ,
INFO  23:30:42,401 - #45 true
INFO  23:30:42,401 - #8 )
INFO  23:30:42,401 - #6 ;
INFO  23:30:42,402 - #44 u
INFO  23:30:42,403 - #11 =
INFO  23:30:42,403 - #44 x
INFO  23:30:42,403 - #18 .
INFO  23:30:42,403 - #41 findAny
INFO  23:30:42,403 - #7 (
INFO  23:30:42,403 - #43 3
INFO  23:30:42,403 - #8 )
INFO  23:30:42,403 - #6 ;
INFO  23:30:42,403 - #44 x
INFO  23:30:42,403 - #11 =
INFO  23:30:42,404 - #44 x
INFO  23:30:42,404 - #18 .
INFO  23:30:42,404 - #42 findAndReplace
INFO  23:30:42,404 - #7 (
INFO  23:30:42,404 - #43 3
INFO  23:30:42,404 - #15 ,
INFO  23:30:42,404 - #44 w
INFO  23:30:42,404 - #20 =>
INFO  23:30:42,404 - #43 4
INFO  23:30:42,404 - #8 )
INFO  23:30:42,404 - #6 ;
INFO  23:30:42,404 - #5 }
INFO  23:30:42,404 - #5 }
INFO  23:30:42,411 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   y
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 u
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               u
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           w
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:30:42,412 - ===================================
INFO  23:30:42,414 - Obradjuje se funckijafunc na liniji 6
INFO  23:30:42,415 - Hello Var a na liniji 6
INFO  23:30:42,415 - Hello Var w na liniji 6
INFO  23:30:42,415 - Hello Var c na liniji 6
INFO  23:30:42,415 - Obradjuje se funckijamain na liniji 11
INFO  23:30:42,415 - Hello Var y na liniji 12
INFO  23:30:42,415 - Hello Var u na liniji 13
INFO  23:30:42,415 - Hello Var x na liniji 14
ERROR 23:30:42,415 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 16
INFO  23:30:42,415 - usao actParsAddOnMany na liniji 11
INFO  23:30:42,415 - 2 na liniji 11
INFO  23:30:42,415 - usao actParsAddOnMany na liniji 11
INFO  23:30:42,415 - 5 na liniji 11
INFO  23:30:42,415 - usao ActParsHas na liniji 17
INFO  23:30:42,415 - 1 na liniji 17
INFO  23:30:42,416 - usao actParsAddOnMany na liniji 11
INFO  23:30:42,416 - 2 na liniji 11
INFO  23:30:42,416 - usao actParsAddOnMany na liniji 11
INFO  23:30:42,416 - 5 na liniji 11
INFO  23:30:42,416 - usao ActParsHas na liniji 18
INFO  23:30:42,416 - 1 na liniji 18
ERROR 23:30:42,416 - Greska: Tip levo od znaka jednakosti nije bool !DesignatorStatementFindAny na liniji 20
ERROR 23:30:42,416 - Greska: Parameter nije deklarisan !DesignatorStatementFindAndReplace na liniji 22
INFO  23:31:10,414 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:31:10,438 - #2 program
INFO  23:31:10,438 - #44 MJProgram
INFO  23:31:10,438 - #3 const
INFO  23:31:10,439 - #44 bool
INFO  23:31:10,439 - #44 b
INFO  23:31:10,439 - #11 =
INFO  23:31:10,439 - #45 true
INFO  23:31:10,439 - #6 ;
INFO  23:31:10,440 - #4 {
INFO  23:31:10,440 - #44 int
INFO  23:31:10,440 - #44 func
INFO  23:31:10,440 - #7 (
INFO  23:31:10,440 - #44 int
INFO  23:31:10,440 - #44 a
INFO  23:31:10,441 - #15 ,
INFO  23:31:10,441 - #44 char
INFO  23:31:10,441 - #44 w
INFO  23:31:10,441 - #15 ,
INFO  23:31:10,441 - #44 bool
INFO  23:31:10,441 - #44 c
INFO  23:31:10,441 - #8 )
INFO  23:31:10,441 - #4 {
INFO  23:31:10,441 - #12 return
INFO  23:31:10,441 - #43 1
INFO  23:31:10,441 - #6 ;
INFO  23:31:10,442 - #5 }
INFO  23:31:10,442 - #17 void
INFO  23:31:10,443 - #44 main
INFO  23:31:10,443 - #7 (
INFO  23:31:10,443 - #8 )
INFO  23:31:10,443 - #44 int
INFO  23:31:10,443 - #44 y
INFO  23:31:10,443 - #6 ;
INFO  23:31:10,443 - #44 char
INFO  23:31:10,444 - #44 u
INFO  23:31:10,444 - #6 ;
INFO  23:31:10,444 - #44 char
INFO  23:31:10,444 - #44 x
INFO  23:31:10,444 - #10 [
INFO  23:31:10,444 - #9 ]
INFO  23:31:10,444 - #6 ;
INFO  23:31:10,444 - #4 {
INFO  23:31:10,444 - #44 x
INFO  23:31:10,444 - #11 =
INFO  23:31:10,445 - #43 1
INFO  23:31:10,445 - #6 ;
INFO  23:31:10,445 - #44 y
INFO  23:31:10,445 - #11 =
INFO  23:31:10,445 - #44 func
INFO  23:31:10,445 - #7 (
INFO  23:31:10,445 - #43 1
INFO  23:31:10,445 - #15 ,
INFO  23:31:10,446 - #46 c
INFO  23:31:10,446 - #15 ,
INFO  23:31:10,446 - #45 true
INFO  23:31:10,446 - #8 )
INFO  23:31:10,446 - #6 ;
INFO  23:31:10,447 - #44 y
INFO  23:31:10,447 - #11 =
INFO  23:31:10,447 - #44 func
INFO  23:31:10,447 - #7 (
INFO  23:31:10,447 - #43 1
INFO  23:31:10,447 - #15 ,
INFO  23:31:10,447 - #46 c
INFO  23:31:10,447 - #15 ,
INFO  23:31:10,447 - #45 true
INFO  23:31:10,447 - #8 )
INFO  23:31:10,447 - #6 ;
INFO  23:31:10,447 - #44 b
INFO  23:31:10,447 - #11 =
INFO  23:31:10,448 - #44 x
INFO  23:31:10,448 - #18 .
INFO  23:31:10,448 - #41 findAny
INFO  23:31:10,448 - #7 (
INFO  23:31:10,448 - #43 3
INFO  23:31:10,448 - #8 )
INFO  23:31:10,448 - #6 ;
INFO  23:31:10,448 - #44 x
INFO  23:31:10,448 - #11 =
INFO  23:31:10,448 - #44 x
INFO  23:31:10,449 - #18 .
INFO  23:31:10,449 - #42 findAndReplace
INFO  23:31:10,449 - #7 (
INFO  23:31:10,449 - #43 3
INFO  23:31:10,449 - #15 ,
INFO  23:31:10,449 - #44 w
INFO  23:31:10,449 - #20 =>
INFO  23:31:10,449 - #43 4
INFO  23:31:10,449 - #8 )
INFO  23:31:10,449 - #6 ;
INFO  23:31:10,449 - #5 }
INFO  23:31:10,449 - #5 }
INFO  23:31:10,455 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   y
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 u
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               b
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           w
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:31:10,456 - ===================================
INFO  23:31:10,458 - Obradjuje se funckijafunc na liniji 6
INFO  23:31:10,458 - Hello Var a na liniji 6
INFO  23:31:10,459 - Hello Var w na liniji 6
INFO  23:31:10,459 - Hello Var c na liniji 6
INFO  23:31:10,459 - Obradjuje se funckijamain na liniji 11
INFO  23:31:10,459 - Hello Var y na liniji 12
INFO  23:31:10,459 - Hello Var u na liniji 13
INFO  23:31:10,459 - Hello Var x na liniji 14
ERROR 23:31:10,459 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 16
INFO  23:31:10,459 - usao actParsAddOnMany na liniji 11
INFO  23:31:10,459 - 2 na liniji 11
INFO  23:31:10,459 - usao actParsAddOnMany na liniji 11
INFO  23:31:10,459 - 5 na liniji 11
INFO  23:31:10,459 - usao ActParsHas na liniji 17
INFO  23:31:10,459 - 1 na liniji 17
INFO  23:31:10,460 - usao actParsAddOnMany na liniji 11
INFO  23:31:10,460 - 2 na liniji 11
INFO  23:31:10,460 - usao actParsAddOnMany na liniji 11
INFO  23:31:10,460 - 5 na liniji 11
INFO  23:31:10,460 - usao ActParsHas na liniji 18
INFO  23:31:10,460 - 1 na liniji 18
ERROR 23:31:10,460 - Greska: Parameter nije deklarisan !DesignatorStatementFindAndReplace na liniji 22
INFO  23:31:56,644 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:31:56,669 - #2 program
INFO  23:31:56,669 - #44 MJProgram
INFO  23:31:56,669 - #3 const
INFO  23:31:56,670 - #44 bool
INFO  23:31:56,670 - #44 b
INFO  23:31:56,670 - #11 =
INFO  23:31:56,670 - #45 true
INFO  23:31:56,670 - #6 ;
INFO  23:31:56,671 - #4 {
INFO  23:31:56,671 - #44 int
INFO  23:31:56,671 - #44 func
INFO  23:31:56,671 - #7 (
INFO  23:31:56,672 - #44 int
INFO  23:31:56,672 - #44 a
INFO  23:31:56,672 - #15 ,
INFO  23:31:56,672 - #44 char
INFO  23:31:56,672 - #44 w
INFO  23:31:56,672 - #15 ,
INFO  23:31:56,672 - #44 bool
INFO  23:31:56,672 - #44 c
INFO  23:31:56,672 - #8 )
INFO  23:31:56,672 - #4 {
INFO  23:31:56,672 - #12 return
INFO  23:31:56,673 - #43 1
INFO  23:31:56,673 - #6 ;
INFO  23:31:56,673 - #5 }
INFO  23:31:56,673 - #17 void
INFO  23:31:56,674 - #44 main
INFO  23:31:56,674 - #7 (
INFO  23:31:56,674 - #8 )
INFO  23:31:56,674 - #44 int
INFO  23:31:56,674 - #44 y
INFO  23:31:56,674 - #6 ;
INFO  23:31:56,674 - #44 char
INFO  23:31:56,675 - #44 u
INFO  23:31:56,675 - #6 ;
INFO  23:31:56,675 - #44 char
INFO  23:31:56,675 - #44 x
INFO  23:31:56,675 - #10 [
INFO  23:31:56,675 - #9 ]
INFO  23:31:56,675 - #6 ;
INFO  23:31:56,675 - #4 {
INFO  23:31:56,675 - #44 x
INFO  23:31:56,675 - #11 =
INFO  23:31:56,676 - #43 1
INFO  23:31:56,676 - #6 ;
INFO  23:31:56,676 - #44 y
INFO  23:31:56,676 - #11 =
INFO  23:31:56,676 - #44 func
INFO  23:31:56,676 - #7 (
INFO  23:31:56,676 - #43 1
INFO  23:31:56,676 - #15 ,
INFO  23:31:56,677 - #46 c
INFO  23:31:56,677 - #15 ,
INFO  23:31:56,677 - #45 true
INFO  23:31:56,677 - #8 )
INFO  23:31:56,677 - #6 ;
INFO  23:31:56,678 - #44 y
INFO  23:31:56,678 - #11 =
INFO  23:31:56,678 - #44 func
INFO  23:31:56,678 - #7 (
INFO  23:31:56,678 - #43 1
INFO  23:31:56,678 - #15 ,
INFO  23:31:56,678 - #46 c
INFO  23:31:56,678 - #15 ,
INFO  23:31:56,678 - #45 true
INFO  23:31:56,678 - #8 )
INFO  23:31:56,678 - #6 ;
INFO  23:31:56,679 - #44 b
INFO  23:31:56,680 - #11 =
INFO  23:31:56,680 - #44 x
INFO  23:31:56,680 - #18 .
INFO  23:31:56,680 - #41 findAny
INFO  23:31:56,680 - #7 (
INFO  23:31:56,680 - #43 3
INFO  23:31:56,680 - #8 )
INFO  23:31:56,680 - #6 ;
INFO  23:31:56,680 - #44 x
INFO  23:31:56,680 - #11 =
INFO  23:31:56,680 - #44 x
INFO  23:31:56,681 - #18 .
INFO  23:31:56,681 - #42 findAndReplace
INFO  23:31:56,681 - #7 (
INFO  23:31:56,681 - #43 3
INFO  23:31:56,681 - #15 ,
INFO  23:31:56,681 - #44 u
INFO  23:31:56,681 - #20 =>
INFO  23:31:56,681 - #43 4
INFO  23:31:56,681 - #8 )
INFO  23:31:56,681 - #6 ;
INFO  23:31:56,681 - #5 }
INFO  23:31:56,681 - #5 }
INFO  23:31:56,687 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        NoDeclarationList(
        ) [NoDeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   y
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 u
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               b
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           u
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:31:56,688 - ===================================
INFO  23:31:56,690 - Obradjuje se funckijafunc na liniji 6
INFO  23:31:56,691 - Hello Var a na liniji 6
INFO  23:31:56,691 - Hello Var w na liniji 6
INFO  23:31:56,691 - Hello Var c na liniji 6
INFO  23:31:56,691 - Obradjuje se funckijamain na liniji 11
INFO  23:31:56,691 - Hello Var y na liniji 12
INFO  23:31:56,691 - Hello Var u na liniji 13
INFO  23:31:56,691 - Hello Var x na liniji 14
ERROR 23:31:56,691 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 16
INFO  23:31:56,691 - usao actParsAddOnMany na liniji 11
INFO  23:31:56,691 - 2 na liniji 11
INFO  23:31:56,691 - usao actParsAddOnMany na liniji 11
INFO  23:31:56,691 - 5 na liniji 11
INFO  23:31:56,692 - usao ActParsHas na liniji 17
INFO  23:31:56,692 - 1 na liniji 17
INFO  23:31:56,692 - usao actParsAddOnMany na liniji 11
INFO  23:31:56,692 - 2 na liniji 11
INFO  23:31:56,692 - usao actParsAddOnMany na liniji 11
INFO  23:31:56,692 - 5 na liniji 11
INFO  23:31:56,692 - usao ActParsHas na liniji 18
INFO  23:31:56,692 - 1 na liniji 18
INFO  23:33:32,537 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:33:32,561 - #2 program
INFO  23:33:32,561 - #44 MJProgram
INFO  23:33:32,561 - #3 const
INFO  23:33:32,561 - #44 bool
INFO  23:33:32,561 - #44 b
INFO  23:33:32,562 - #11 =
INFO  23:33:32,562 - #45 true
INFO  23:33:32,562 - #6 ;
INFO  23:33:32,562 - #4 {
INFO  23:33:32,563 - #44 int
INFO  23:33:32,563 - #44 func
INFO  23:33:32,563 - #7 (
INFO  23:33:32,563 - #44 int
INFO  23:33:32,563 - #44 a
INFO  23:33:32,563 - #15 ,
INFO  23:33:32,564 - #44 char
INFO  23:33:32,564 - #44 w
INFO  23:33:32,564 - #15 ,
INFO  23:33:32,564 - #44 bool
INFO  23:33:32,564 - #44 c
INFO  23:33:32,564 - #8 )
INFO  23:33:32,564 - #44 char
INFO  23:33:32,564 - #44 ww
INFO  23:33:32,564 - #6 ;
INFO  23:33:32,564 - #4 {
INFO  23:33:32,565 - #12 return
INFO  23:33:32,565 - #43 1
INFO  23:33:32,565 - #6 ;
INFO  23:33:32,565 - #5 }
INFO  23:33:32,565 - #17 void
INFO  23:33:32,566 - #44 main
INFO  23:33:32,566 - #7 (
INFO  23:33:32,566 - #8 )
INFO  23:33:32,566 - #44 int
INFO  23:33:32,566 - #44 y
INFO  23:33:32,566 - #6 ;
INFO  23:33:32,566 - #44 char
INFO  23:33:32,566 - #44 u
INFO  23:33:32,566 - #6 ;
INFO  23:33:32,567 - #44 char
INFO  23:33:32,567 - #44 x
INFO  23:33:32,567 - #10 [
INFO  23:33:32,567 - #9 ]
INFO  23:33:32,567 - #6 ;
INFO  23:33:32,567 - #4 {
INFO  23:33:32,567 - #44 x
INFO  23:33:32,567 - #11 =
INFO  23:33:32,568 - #43 1
INFO  23:33:32,568 - #6 ;
INFO  23:33:32,568 - #44 y
INFO  23:33:32,568 - #11 =
INFO  23:33:32,568 - #44 func
INFO  23:33:32,568 - #7 (
INFO  23:33:32,568 - #43 1
INFO  23:33:32,568 - #15 ,
INFO  23:33:32,569 - #46 c
INFO  23:33:32,569 - #15 ,
INFO  23:33:32,569 - #45 true
INFO  23:33:32,569 - #8 )
INFO  23:33:32,569 - #6 ;
INFO  23:33:32,570 - #44 y
INFO  23:33:32,570 - #11 =
INFO  23:33:32,570 - #44 func
INFO  23:33:32,570 - #7 (
INFO  23:33:32,570 - #43 1
INFO  23:33:32,570 - #15 ,
INFO  23:33:32,570 - #46 c
INFO  23:33:32,570 - #15 ,
INFO  23:33:32,570 - #45 true
INFO  23:33:32,571 - #8 )
INFO  23:33:32,571 - #6 ;
INFO  23:33:32,571 - #44 b
INFO  23:33:32,571 - #11 =
INFO  23:33:32,571 - #44 x
INFO  23:33:32,571 - #18 .
INFO  23:33:32,571 - #41 findAny
INFO  23:33:32,572 - #7 (
INFO  23:33:32,572 - #43 3
INFO  23:33:32,572 - #8 )
INFO  23:33:32,572 - #6 ;
INFO  23:33:32,572 - #44 x
INFO  23:33:32,572 - #11 =
INFO  23:33:32,573 - #44 x
INFO  23:33:32,573 - #18 .
INFO  23:33:32,573 - #42 findAndReplace
INFO  23:33:32,573 - #7 (
INFO  23:33:32,573 - #43 3
INFO  23:33:32,573 - #15 ,
INFO  23:33:32,573 - #44 ww
INFO  23:33:32,573 - #20 =>
INFO  23:33:32,573 - #43 4
INFO  23:33:32,573 - #8 )
INFO  23:33:32,573 - #6 ;
INFO  23:33:32,573 - #5 }
INFO  23:33:32,573 - #5 }
INFO  23:33:32,579 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   y
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 u
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               b
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           ww
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:33:32,580 - ===================================
INFO  23:33:32,582 - Obradjuje se funckijafunc na liniji 6
INFO  23:33:32,582 - Hello Var a na liniji 6
INFO  23:33:32,583 - Hello Var w na liniji 6
INFO  23:33:32,583 - Hello Var c na liniji 6
INFO  23:33:32,583 - Hello Var ww na liniji 7
INFO  23:33:32,583 - Obradjuje se funckijamain na liniji 12
INFO  23:33:32,583 - Hello Var y na liniji 13
INFO  23:33:32,583 - Hello Var u na liniji 14
INFO  23:33:32,583 - Hello Var x na liniji 15
ERROR 23:33:32,583 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 17
INFO  23:33:32,583 - usao actParsAddOnMany na liniji 11
INFO  23:33:32,583 - 2 na liniji 11
INFO  23:33:32,583 - usao actParsAddOnMany na liniji 11
INFO  23:33:32,583 - 5 na liniji 11
INFO  23:33:32,584 - usao ActParsHas na liniji 18
INFO  23:33:32,584 - 1 na liniji 18
INFO  23:33:32,584 - usao actParsAddOnMany na liniji 11
INFO  23:33:32,584 - 2 na liniji 11
INFO  23:33:32,584 - usao actParsAddOnMany na liniji 11
INFO  23:33:32,584 - 5 na liniji 11
INFO  23:33:32,584 - usao ActParsHas na liniji 19
INFO  23:33:32,584 - 1 na liniji 19
ERROR 23:33:32,584 - Greska: Parameter nije deklarisan !DesignatorStatementFindAndReplace na liniji 23
INFO  23:34:53,700 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:34:53,725 - #2 program
INFO  23:34:53,725 - #44 MJProgram
INFO  23:34:53,725 - #3 const
INFO  23:34:53,726 - #44 bool
INFO  23:34:53,726 - #44 b
INFO  23:34:53,726 - #11 =
INFO  23:34:53,726 - #45 true
INFO  23:34:53,726 - #6 ;
INFO  23:34:53,727 - #4 {
INFO  23:34:53,727 - #44 int
INFO  23:34:53,728 - #44 func
INFO  23:34:53,728 - #7 (
INFO  23:34:53,728 - #44 int
INFO  23:34:53,728 - #44 a
INFO  23:34:53,728 - #15 ,
INFO  23:34:53,728 - #44 char
INFO  23:34:53,728 - #44 w
INFO  23:34:53,728 - #15 ,
INFO  23:34:53,728 - #44 bool
INFO  23:34:53,728 - #44 c
INFO  23:34:53,729 - #8 )
INFO  23:34:53,729 - #44 char
INFO  23:34:53,729 - #44 ww
INFO  23:34:53,729 - #6 ;
INFO  23:34:53,729 - #4 {
INFO  23:34:53,729 - #12 return
INFO  23:34:53,729 - #43 1
INFO  23:34:53,730 - #6 ;
INFO  23:34:53,730 - #5 }
INFO  23:34:53,730 - #17 void
INFO  23:34:53,731 - #44 main
INFO  23:34:53,731 - #7 (
INFO  23:34:53,731 - #8 )
INFO  23:34:53,731 - #44 int
INFO  23:34:53,731 - #44 y
INFO  23:34:53,731 - #6 ;
INFO  23:34:53,731 - #44 char
INFO  23:34:53,731 - #44 u
INFO  23:34:53,731 - #6 ;
INFO  23:34:53,731 - #44 char
INFO  23:34:53,731 - #44 x
INFO  23:34:53,731 - #10 [
INFO  23:34:53,731 - #9 ]
INFO  23:34:53,731 - #6 ;
INFO  23:34:53,732 - #4 {
INFO  23:34:53,732 - #44 x
INFO  23:34:53,732 - #11 =
INFO  23:34:53,732 - #43 1
INFO  23:34:53,732 - #6 ;
INFO  23:34:53,733 - #44 y
INFO  23:34:53,733 - #11 =
INFO  23:34:53,733 - #44 func
INFO  23:34:53,733 - #7 (
INFO  23:34:53,733 - #43 1
INFO  23:34:53,733 - #15 ,
INFO  23:34:53,734 - #46 c
INFO  23:34:53,734 - #15 ,
INFO  23:34:53,734 - #45 true
INFO  23:34:53,734 - #8 )
INFO  23:34:53,734 - #6 ;
INFO  23:34:53,735 - #44 y
INFO  23:34:53,735 - #11 =
INFO  23:34:53,735 - #44 func
INFO  23:34:53,735 - #7 (
INFO  23:34:53,735 - #43 1
INFO  23:34:53,735 - #15 ,
INFO  23:34:53,735 - #46 c
INFO  23:34:53,735 - #15 ,
INFO  23:34:53,735 - #45 true
INFO  23:34:53,736 - #8 )
INFO  23:34:53,736 - #6 ;
INFO  23:34:53,736 - #44 b
INFO  23:34:53,736 - #11 =
INFO  23:34:53,737 - #44 x
INFO  23:34:53,737 - #18 .
INFO  23:34:53,737 - #41 findAny
INFO  23:34:53,737 - #7 (
INFO  23:34:53,737 - #43 3
INFO  23:34:53,737 - #8 )
INFO  23:34:53,737 - #6 ;
INFO  23:34:53,737 - #44 x
INFO  23:34:53,738 - #11 =
INFO  23:34:53,738 - #44 x
INFO  23:34:53,738 - #18 .
INFO  23:34:53,738 - #42 findAndReplace
INFO  23:34:53,738 - #7 (
INFO  23:34:53,738 - #43 3
INFO  23:34:53,738 - #15 ,
INFO  23:34:53,738 - #44 ww
INFO  23:34:53,738 - #20 =>
INFO  23:34:53,738 - #43 4
INFO  23:34:53,738 - #8 )
INFO  23:34:53,738 - #6 ;
INFO  23:34:53,739 - #5 }
INFO  23:34:53,739 - #5 }
INFO  23:34:53,745 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   y
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 u
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     x
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               b
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           ww
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:34:53,745 - ===================================
INFO  23:34:53,748 - Obradjuje se funckijafunc na liniji 6
INFO  23:34:53,748 - Hello Var a na liniji 6
INFO  23:34:53,748 - Hello Var w na liniji 6
INFO  23:34:53,748 - Hello Var c na liniji 6
INFO  23:34:53,748 - Hello Var ww na liniji 7
INFO  23:34:53,748 - Obradjuje se funckijamain na liniji 12
INFO  23:34:53,749 - Hello Var y na liniji 13
INFO  23:34:53,749 - Hello Var u na liniji 14
INFO  23:34:53,749 - Hello Var x na liniji 15
ERROR 23:34:53,749 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 17
INFO  23:34:53,749 - usao actParsAddOnMany na liniji 11
INFO  23:34:53,749 - 2 na liniji 11
INFO  23:34:53,749 - usao actParsAddOnMany na liniji 11
INFO  23:34:53,749 - 5 na liniji 11
INFO  23:34:53,749 - usao ActParsHas na liniji 18
INFO  23:34:53,749 - 1 na liniji 18
INFO  23:34:53,749 - usao actParsAddOnMany na liniji 11
INFO  23:34:53,749 - 2 na liniji 11
INFO  23:34:53,749 - usao actParsAddOnMany na liniji 11
INFO  23:34:53,749 - 5 na liniji 11
INFO  23:34:53,749 - usao ActParsHas na liniji 19
INFO  23:34:53,749 - 1 na liniji 19
ERROR 23:34:53,750 - Greska: Parameter nije deklarisan !DesignatorStatementFindAndReplace na liniji 23
INFO  23:40:44,302 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:40:44,327 - #2 program
INFO  23:40:44,327 - #44 MJProgram
INFO  23:40:44,327 - #3 const
INFO  23:40:44,328 - #44 bool
INFO  23:40:44,328 - #44 b
INFO  23:40:44,328 - #11 =
INFO  23:40:44,328 - #45 true
INFO  23:40:44,328 - #6 ;
INFO  23:40:44,329 - #4 {
INFO  23:40:44,329 - #44 int
INFO  23:40:44,329 - #44 func
INFO  23:40:44,329 - #7 (
INFO  23:40:44,330 - #44 int
INFO  23:40:44,330 - #44 a
INFO  23:40:44,330 - #15 ,
INFO  23:40:44,330 - #44 char
INFO  23:40:44,330 - #44 w
INFO  23:40:44,330 - #15 ,
INFO  23:40:44,330 - #44 bool
INFO  23:40:44,330 - #44 c
INFO  23:40:44,330 - #8 )
INFO  23:40:44,330 - #44 char
INFO  23:40:44,330 - #44 ww
INFO  23:40:44,330 - #6 ;
INFO  23:40:44,331 - #4 {
INFO  23:40:44,331 - #12 return
INFO  23:40:44,331 - #43 1
INFO  23:40:44,331 - #6 ;
INFO  23:40:44,332 - #5 }
INFO  23:40:44,332 - #17 void
INFO  23:40:44,332 - #44 main
INFO  23:40:44,332 - #7 (
INFO  23:40:44,332 - #8 )
INFO  23:40:44,333 - #44 int
INFO  23:40:44,333 - #44 y
INFO  23:40:44,333 - #6 ;
INFO  23:40:44,333 - #44 char
INFO  23:40:44,333 - #44 u
INFO  23:40:44,333 - #6 ;
INFO  23:40:44,333 - #44 char
INFO  23:40:44,333 - #44 x
INFO  23:40:44,333 - #10 [
INFO  23:40:44,333 - #9 ]
INFO  23:40:44,333 - #6 ;
INFO  23:40:44,333 - #4 {
INFO  23:40:44,333 - #44 b
INFO  23:40:44,333 - #11 =
INFO  23:40:44,334 - #45 false
INFO  23:40:44,334 - #6 ;
INFO  23:40:44,335 - #44 y
INFO  23:40:44,335 - #11 =
INFO  23:40:44,335 - #44 func
INFO  23:40:44,335 - #7 (
INFO  23:40:44,335 - #43 1
INFO  23:40:44,335 - #15 ,
INFO  23:40:44,335 - #46 c
INFO  23:40:44,336 - #15 ,
INFO  23:40:44,336 - #45 true
INFO  23:40:44,336 - #8 )
INFO  23:40:44,336 - #6 ;
INFO  23:40:44,336 - #44 y
INFO  23:40:44,337 - #11 =
INFO  23:40:44,337 - #44 func
INFO  23:40:44,337 - #7 (
INFO  23:40:44,337 - #43 1
INFO  23:40:44,337 - #15 ,
INFO  23:40:44,337 - #46 c
INFO  23:40:44,337 - #15 ,
INFO  23:40:44,337 - #45 true
INFO  23:40:44,338 - #8 )
INFO  23:40:44,338 - #6 ;
INFO  23:40:44,338 - #44 b
INFO  23:40:44,338 - #11 =
INFO  23:40:44,338 - #44 x
INFO  23:40:44,338 - #18 .
INFO  23:40:44,338 - #41 findAny
INFO  23:40:44,338 - #7 (
INFO  23:40:44,339 - #43 3
INFO  23:40:44,339 - #8 )
INFO  23:40:44,339 - #6 ;
INFO  23:40:44,339 - #44 x
INFO  23:40:44,339 - #11 =
INFO  23:40:44,339 - #44 x
INFO  23:40:44,339 - #18 .
INFO  23:40:44,339 - #42 findAndReplace
INFO  23:40:44,339 - #7 (
INFO  23:40:44,340 - #43 3
INFO  23:40:44,340 - #15 ,
INFO  23:40:44,340 - #44 u
INFO  23:40:44,340 - #20 =>
INFO  23:40:44,340 - #43 4
INFO  23:40:44,340 - #8 )
INFO  23:40:44,340 - #6 ;
INFO  23:40:44,340 - #5 }
INFO  23:40:44,340 - #5 }
INFO  23:40:44,346 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   y
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 u
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     b
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorBool(
                           false
                          ) [FactorBool]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               b
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           u
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:40:44,347 - ===================================
INFO  23:40:44,349 - Obradjuje se funckijafunc na liniji 6
INFO  23:40:44,349 - Hello Var a na liniji 6
INFO  23:40:44,350 - Hello Var w na liniji 6
INFO  23:40:44,350 - Hello Var c na liniji 6
INFO  23:40:44,350 - Hello Var ww na liniji 7
INFO  23:40:44,350 - Obradjuje se funckijamain na liniji 12
INFO  23:40:44,350 - Hello Var y na liniji 13
INFO  23:40:44,350 - Hello Var u na liniji 14
INFO  23:40:44,350 - Hello Var x na liniji 15
INFO  23:40:44,350 - usao actParsAddOnMany na liniji 11
INFO  23:40:44,351 - 2 na liniji 11
INFO  23:40:44,351 - usao actParsAddOnMany na liniji 11
INFO  23:40:44,351 - 5 na liniji 11
INFO  23:40:44,351 - usao ActParsHas na liniji 18
INFO  23:40:44,351 - 1 na liniji 18
INFO  23:40:44,351 - usao actParsAddOnMany na liniji 11
INFO  23:40:44,351 - 2 na liniji 11
INFO  23:40:44,351 - usao actParsAddOnMany na liniji 11
INFO  23:40:44,351 - 5 na liniji 11
INFO  23:40:44,351 - usao ActParsHas na liniji 19
INFO  23:40:44,351 - 1 na liniji 19
INFO  23:43:26,436 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:43:26,460 - #2 program
INFO  23:43:26,460 - #44 MJProgram
INFO  23:43:26,460 - #3 const
INFO  23:43:26,460 - #44 bool
INFO  23:43:26,461 - #44 b
INFO  23:43:26,461 - #11 =
INFO  23:43:26,461 - #45 true
INFO  23:43:26,461 - #6 ;
INFO  23:43:26,461 - #4 {
INFO  23:43:26,462 - #44 int
INFO  23:43:26,462 - #44 func
INFO  23:43:26,462 - #7 (
INFO  23:43:26,462 - #44 int
INFO  23:43:26,462 - #44 a
INFO  23:43:26,462 - #15 ,
INFO  23:43:26,463 - #44 char
INFO  23:43:26,463 - #44 w
INFO  23:43:26,463 - #15 ,
INFO  23:43:26,463 - #44 bool
INFO  23:43:26,463 - #44 c
INFO  23:43:26,463 - #8 )
INFO  23:43:26,463 - #44 char
INFO  23:43:26,463 - #44 ww
INFO  23:43:26,463 - #6 ;
INFO  23:43:26,463 - #4 {
INFO  23:43:26,464 - #12 return
INFO  23:43:26,464 - #43 1
INFO  23:43:26,464 - #6 ;
INFO  23:43:26,464 - #5 }
INFO  23:43:26,464 - #17 void
INFO  23:43:26,465 - #44 main
INFO  23:43:26,465 - #7 (
INFO  23:43:26,465 - #8 )
INFO  23:43:26,465 - #44 int
INFO  23:43:26,465 - #44 y
INFO  23:43:26,465 - #6 ;
INFO  23:43:26,465 - #44 char
INFO  23:43:26,465 - #44 u
INFO  23:43:26,465 - #6 ;
INFO  23:43:26,465 - #44 char
INFO  23:43:26,465 - #44 x
INFO  23:43:26,466 - #10 [
INFO  23:43:26,466 - #9 ]
INFO  23:43:26,466 - #6 ;
INFO  23:43:26,466 - #4 {
INFO  23:43:26,466 - #44 b
INFO  23:43:26,466 - #11 =
INFO  23:43:26,466 - #45 false
INFO  23:43:26,467 - #6 ;
INFO  23:43:26,467 - #44 y
INFO  23:43:26,467 - #11 =
INFO  23:43:26,467 - #44 func
INFO  23:43:26,467 - #7 (
INFO  23:43:26,467 - #43 1
INFO  23:43:26,467 - #15 ,
INFO  23:43:26,468 - #46 c
INFO  23:43:26,468 - #15 ,
INFO  23:43:26,468 - #45 true
INFO  23:43:26,468 - #8 )
INFO  23:43:26,468 - #6 ;
INFO  23:43:26,469 - #44 y
INFO  23:43:26,469 - #11 =
INFO  23:43:26,469 - #44 func
INFO  23:43:26,469 - #7 (
INFO  23:43:26,469 - #43 1
INFO  23:43:26,469 - #15 ,
INFO  23:43:26,469 - #46 c
INFO  23:43:26,469 - #15 ,
INFO  23:43:26,469 - #45 true
INFO  23:43:26,470 - #8 )
INFO  23:43:26,470 - #6 ;
INFO  23:43:26,470 - #44 b
INFO  23:43:26,470 - #11 =
INFO  23:43:26,470 - #44 x
INFO  23:43:26,470 - #18 .
INFO  23:43:26,470 - #41 findAny
INFO  23:43:26,470 - #7 (
INFO  23:43:26,471 - #43 3
INFO  23:43:26,471 - #8 )
INFO  23:43:26,471 - #6 ;
INFO  23:43:26,471 - #44 x
INFO  23:43:26,471 - #11 =
INFO  23:43:26,471 - #44 x
INFO  23:43:26,471 - #18 .
INFO  23:43:26,471 - #42 findAndReplace
INFO  23:43:26,471 - #7 (
INFO  23:43:26,472 - #43 3
INFO  23:43:26,472 - #15 ,
INFO  23:43:26,472 - #44 u
INFO  23:43:26,472 - #20 =>
INFO  23:43:26,472 - #43 4
INFO  23:43:26,472 - #8 )
INFO  23:43:26,472 - #6 ;
INFO  23:43:26,472 - #5 }
INFO  23:43:26,472 - #5 }
INFO  23:43:26,478 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   y
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 u
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     b
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorBool(
                           false
                          ) [FactorBool]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               b
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           u
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:43:26,479 - ===================================
INFO  23:43:26,482 - Obradjuje se funckijafunc na liniji 6
INFO  23:43:26,482 - Hello Var a na liniji 6
INFO  23:43:26,482 - Hello Var w na liniji 6
INFO  23:43:26,482 - Hello Var c na liniji 6
INFO  23:43:26,482 - Hello Var ww na liniji 7
INFO  23:43:26,482 - Obradjuje se funckijamain na liniji 12
INFO  23:43:26,482 - Hello Var y na liniji 13
INFO  23:43:26,482 - Hello Var u na liniji 14
INFO  23:43:26,482 - Hello Var x na liniji 15
ERROR 23:43:26,482 - Greska: Identifikator je const!Designator na liniji 17
INFO  23:44:50,502 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:44:50,526 - #2 program
INFO  23:44:50,526 - #44 MJProgram
INFO  23:44:50,526 - #3 const
INFO  23:44:50,527 - #44 bool
INFO  23:44:50,527 - #44 b
INFO  23:44:50,527 - #11 =
INFO  23:44:50,527 - #45 true
INFO  23:44:50,527 - #6 ;
INFO  23:44:50,528 - #4 {
INFO  23:44:50,528 - #44 int
INFO  23:44:50,528 - #44 func
INFO  23:44:50,528 - #7 (
INFO  23:44:50,529 - #44 int
INFO  23:44:50,529 - #44 a
INFO  23:44:50,529 - #15 ,
INFO  23:44:50,529 - #44 char
INFO  23:44:50,529 - #44 w
INFO  23:44:50,529 - #15 ,
INFO  23:44:50,529 - #44 bool
INFO  23:44:50,529 - #44 c
INFO  23:44:50,529 - #8 )
INFO  23:44:50,529 - #44 char
INFO  23:44:50,529 - #44 ww
INFO  23:44:50,529 - #6 ;
INFO  23:44:50,530 - #4 {
INFO  23:44:50,530 - #12 return
INFO  23:44:50,530 - #43 1
INFO  23:44:50,530 - #6 ;
INFO  23:44:50,530 - #5 }
INFO  23:44:50,531 - #17 void
INFO  23:44:50,531 - #44 main
INFO  23:44:50,531 - #7 (
INFO  23:44:50,531 - #8 )
INFO  23:44:50,532 - #44 int
INFO  23:44:50,532 - #44 y
INFO  23:44:50,532 - #6 ;
INFO  23:44:50,532 - #44 char
INFO  23:44:50,532 - #44 u
INFO  23:44:50,532 - #6 ;
INFO  23:44:50,532 - #44 char
INFO  23:44:50,532 - #44 x
INFO  23:44:50,532 - #10 [
INFO  23:44:50,532 - #9 ]
INFO  23:44:50,532 - #6 ;
INFO  23:44:50,532 - #4 {
INFO  23:44:50,532 - #44 b
INFO  23:44:50,532 - #11 =
INFO  23:44:50,533 - #45 false
INFO  23:44:50,533 - #6 ;
INFO  23:44:50,533 - #44 y
INFO  23:44:50,533 - #11 =
INFO  23:44:50,534 - #44 func
INFO  23:44:50,534 - #7 (
INFO  23:44:50,534 - #43 1
INFO  23:44:50,534 - #15 ,
INFO  23:44:50,534 - #46 c
INFO  23:44:50,534 - #15 ,
INFO  23:44:50,534 - #45 true
INFO  23:44:50,535 - #8 )
INFO  23:44:50,535 - #6 ;
INFO  23:44:50,535 - #44 y
INFO  23:44:50,535 - #11 =
INFO  23:44:50,535 - #44 func
INFO  23:44:50,535 - #7 (
INFO  23:44:50,536 - #43 1
INFO  23:44:50,536 - #15 ,
INFO  23:44:50,536 - #46 c
INFO  23:44:50,536 - #15 ,
INFO  23:44:50,536 - #45 true
INFO  23:44:50,537 - #8 )
INFO  23:44:50,537 - #6 ;
INFO  23:44:50,537 - #44 b
INFO  23:44:50,537 - #11 =
INFO  23:44:50,537 - #44 x
INFO  23:44:50,537 - #18 .
INFO  23:44:50,537 - #41 findAny
INFO  23:44:50,537 - #7 (
INFO  23:44:50,537 - #43 3
INFO  23:44:50,537 - #8 )
INFO  23:44:50,538 - #6 ;
INFO  23:44:50,538 - #44 x
INFO  23:44:50,538 - #11 =
INFO  23:44:50,538 - #44 x
INFO  23:44:50,538 - #18 .
INFO  23:44:50,538 - #42 findAndReplace
INFO  23:44:50,538 - #7 (
INFO  23:44:50,538 - #43 3
INFO  23:44:50,538 - #15 ,
INFO  23:44:50,538 - #44 u
INFO  23:44:50,538 - #20 =>
INFO  23:44:50,538 - #43 4
INFO  23:44:50,538 - #8 )
INFO  23:44:50,539 - #6 ;
INFO  23:44:50,539 - #5 }
INFO  23:44:50,539 - #5 }
INFO  23:44:50,546 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   y
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 u
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     b
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorBool(
                           false
                          ) [FactorBool]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               b
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           u
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:44:50,546 - ===================================
INFO  23:44:50,549 - Obradjuje se funckijafunc na liniji 6
INFO  23:44:50,549 - Hello Var a na liniji 6
INFO  23:44:50,549 - Hello Var w na liniji 6
INFO  23:44:50,549 - Hello Var c na liniji 6
INFO  23:44:50,549 - Hello Var ww na liniji 7
INFO  23:44:50,549 - Obradjuje se funckijamain na liniji 12
INFO  23:44:50,549 - Hello Var y na liniji 13
INFO  23:44:50,549 - Hello Var u na liniji 14
INFO  23:44:50,549 - Hello Var x na liniji 15
ERROR 23:44:50,549 - Greska: Identifikator je const!Designator na liniji 17
INFO  23:44:50,550 - usao actParsAddOnMany na liniji 11
INFO  23:44:50,550 - 2 na liniji 11
INFO  23:44:50,550 - usao actParsAddOnMany na liniji 11
INFO  23:44:50,550 - 5 na liniji 11
INFO  23:44:50,550 - usao ActParsHas na liniji 18
INFO  23:44:50,550 - 1 na liniji 18
INFO  23:44:50,550 - usao actParsAddOnMany na liniji 11
INFO  23:44:50,550 - 2 na liniji 11
INFO  23:44:50,550 - usao actParsAddOnMany na liniji 11
INFO  23:44:50,550 - 5 na liniji 11
INFO  23:44:50,550 - usao ActParsHas na liniji 19
INFO  23:44:50,550 - 1 na liniji 19
ERROR 23:44:50,550 - Greska: Identifikator je const!Designator na liniji 21
INFO  23:45:09,702 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:45:09,726 - #2 program
INFO  23:45:09,726 - #44 MJProgram
INFO  23:45:09,726 - #3 const
INFO  23:45:09,727 - #44 bool
INFO  23:45:09,727 - #44 b
INFO  23:45:09,727 - #11 =
INFO  23:45:09,727 - #45 true
INFO  23:45:09,727 - #6 ;
INFO  23:45:09,729 - #4 {
INFO  23:45:09,730 - #44 int
INFO  23:45:09,730 - #44 func
INFO  23:45:09,730 - #7 (
INFO  23:45:09,730 - #44 int
INFO  23:45:09,730 - #44 a
INFO  23:45:09,730 - #15 ,
INFO  23:45:09,730 - #44 char
INFO  23:45:09,730 - #44 w
INFO  23:45:09,730 - #15 ,
INFO  23:45:09,730 - #44 bool
INFO  23:45:09,730 - #44 c
INFO  23:45:09,730 - #8 )
INFO  23:45:09,730 - #44 char
INFO  23:45:09,731 - #44 ww
INFO  23:45:09,731 - #6 ;
INFO  23:45:09,731 - #4 {
INFO  23:45:09,731 - #12 return
INFO  23:45:09,731 - #43 1
INFO  23:45:09,731 - #6 ;
INFO  23:45:09,732 - #5 }
INFO  23:45:09,732 - #17 void
INFO  23:45:09,732 - #44 main
INFO  23:45:09,732 - #7 (
INFO  23:45:09,732 - #8 )
INFO  23:45:09,733 - #44 int
INFO  23:45:09,733 - #44 y
INFO  23:45:09,733 - #6 ;
INFO  23:45:09,733 - #44 char
INFO  23:45:09,733 - #44 u
INFO  23:45:09,733 - #6 ;
INFO  23:45:09,733 - #44 char
INFO  23:45:09,733 - #44 x
INFO  23:45:09,733 - #10 [
INFO  23:45:09,733 - #9 ]
INFO  23:45:09,733 - #6 ;
INFO  23:45:09,733 - #4 {
INFO  23:45:09,733 - #44 b
INFO  23:45:09,733 - #11 =
INFO  23:45:09,734 - #45 false
INFO  23:45:09,734 - #6 ;
INFO  23:45:09,734 - #44 y
INFO  23:45:09,735 - #11 =
INFO  23:45:09,735 - #44 func
INFO  23:45:09,735 - #7 (
INFO  23:45:09,735 - #43 1
INFO  23:45:09,735 - #15 ,
INFO  23:45:09,735 - #46 c
INFO  23:45:09,736 - #15 ,
INFO  23:45:09,736 - #45 true
INFO  23:45:09,736 - #8 )
INFO  23:45:09,736 - #6 ;
INFO  23:45:09,737 - #44 y
INFO  23:45:09,737 - #11 =
INFO  23:45:09,737 - #44 func
INFO  23:45:09,737 - #7 (
INFO  23:45:09,737 - #43 1
INFO  23:45:09,737 - #15 ,
INFO  23:45:09,737 - #46 c
INFO  23:45:09,737 - #15 ,
INFO  23:45:09,737 - #45 true
INFO  23:45:09,738 - #8 )
INFO  23:45:09,738 - #6 ;
INFO  23:45:09,738 - #44 u
INFO  23:45:09,738 - #11 =
INFO  23:45:09,738 - #44 x
INFO  23:45:09,738 - #18 .
INFO  23:45:09,739 - #41 findAny
INFO  23:45:09,739 - #7 (
INFO  23:45:09,739 - #43 3
INFO  23:45:09,739 - #8 )
INFO  23:45:09,739 - #6 ;
INFO  23:45:09,739 - #44 x
INFO  23:45:09,739 - #11 =
INFO  23:45:09,740 - #44 x
INFO  23:45:09,740 - #18 .
INFO  23:45:09,740 - #42 findAndReplace
INFO  23:45:09,740 - #7 (
INFO  23:45:09,740 - #43 3
INFO  23:45:09,740 - #15 ,
INFO  23:45:09,740 - #44 u
INFO  23:45:09,740 - #20 =>
INFO  23:45:09,740 - #43 4
INFO  23:45:09,740 - #8 )
INFO  23:45:09,740 - #6 ;
INFO  23:45:09,740 - #5 }
INFO  23:45:09,740 - #5 }
INFO  23:45:09,747 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   y
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 u
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     b
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorBool(
                           false
                          ) [FactorBool]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               u
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           u
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:45:09,747 - ===================================
INFO  23:45:09,750 - Obradjuje se funckijafunc na liniji 6
INFO  23:45:09,750 - Hello Var a na liniji 6
INFO  23:45:09,750 - Hello Var w na liniji 6
INFO  23:45:09,750 - Hello Var c na liniji 6
INFO  23:45:09,750 - Hello Var ww na liniji 7
INFO  23:45:09,751 - Obradjuje se funckijamain na liniji 12
INFO  23:45:09,751 - Hello Var y na liniji 13
INFO  23:45:09,751 - Hello Var u na liniji 14
INFO  23:45:09,751 - Hello Var x na liniji 15
ERROR 23:45:09,751 - Greska: Identifikator je const!Designator na liniji 17
INFO  23:45:09,751 - usao actParsAddOnMany na liniji 11
INFO  23:45:09,751 - 2 na liniji 11
INFO  23:45:09,751 - usao actParsAddOnMany na liniji 11
INFO  23:45:09,751 - 5 na liniji 11
INFO  23:45:09,751 - usao ActParsHas na liniji 18
INFO  23:45:09,751 - 1 na liniji 18
INFO  23:45:09,751 - usao actParsAddOnMany na liniji 11
INFO  23:45:09,751 - 2 na liniji 11
INFO  23:45:09,751 - usao actParsAddOnMany na liniji 11
INFO  23:45:09,751 - 5 na liniji 11
INFO  23:45:09,751 - usao ActParsHas na liniji 19
INFO  23:45:09,751 - 1 na liniji 19
ERROR 23:45:09,752 - Greska: Tip levo od znaka jednakosti nije bool !DesignatorStatementFindAny na liniji 21
INFO  23:45:28,580 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:45:28,604 - #2 program
INFO  23:45:28,604 - #44 MJProgram
INFO  23:45:28,604 - #3 const
INFO  23:45:28,604 - #44 bool
INFO  23:45:28,604 - #44 b
INFO  23:45:28,605 - #11 =
INFO  23:45:28,605 - #45 true
INFO  23:45:28,605 - #6 ;
INFO  23:45:28,605 - #4 {
INFO  23:45:28,606 - #44 int
INFO  23:45:28,606 - #44 func
INFO  23:45:28,606 - #7 (
INFO  23:45:28,606 - #44 int
INFO  23:45:28,606 - #44 a
INFO  23:45:28,606 - #15 ,
INFO  23:45:28,606 - #44 char
INFO  23:45:28,606 - #44 w
INFO  23:45:28,606 - #15 ,
INFO  23:45:28,607 - #44 bool
INFO  23:45:28,607 - #44 c
INFO  23:45:28,607 - #8 )
INFO  23:45:28,607 - #44 char
INFO  23:45:28,607 - #44 ww
INFO  23:45:28,607 - #6 ;
INFO  23:45:28,607 - #4 {
INFO  23:45:28,607 - #12 return
INFO  23:45:28,608 - #43 1
INFO  23:45:28,608 - #6 ;
INFO  23:45:28,608 - #5 }
INFO  23:45:28,608 - #17 void
INFO  23:45:28,609 - #44 main
INFO  23:45:28,609 - #7 (
INFO  23:45:28,609 - #8 )
INFO  23:45:28,609 - #44 int
INFO  23:45:28,609 - #44 y
INFO  23:45:28,609 - #6 ;
INFO  23:45:28,609 - #44 bool
INFO  23:45:28,609 - #44 u
INFO  23:45:28,609 - #6 ;
INFO  23:45:28,609 - #44 char
INFO  23:45:28,609 - #44 x
INFO  23:45:28,609 - #10 [
INFO  23:45:28,609 - #9 ]
INFO  23:45:28,610 - #6 ;
INFO  23:45:28,610 - #4 {
INFO  23:45:28,610 - #44 b
INFO  23:45:28,610 - #11 =
INFO  23:45:28,610 - #45 false
INFO  23:45:28,610 - #6 ;
INFO  23:45:28,611 - #44 y
INFO  23:45:28,611 - #11 =
INFO  23:45:28,611 - #44 func
INFO  23:45:28,611 - #7 (
INFO  23:45:28,611 - #43 1
INFO  23:45:28,611 - #15 ,
INFO  23:45:28,612 - #46 c
INFO  23:45:28,612 - #15 ,
INFO  23:45:28,612 - #45 true
INFO  23:45:28,612 - #8 )
INFO  23:45:28,612 - #6 ;
INFO  23:45:28,613 - #44 y
INFO  23:45:28,613 - #11 =
INFO  23:45:28,613 - #44 func
INFO  23:45:28,613 - #7 (
INFO  23:45:28,613 - #43 1
INFO  23:45:28,613 - #15 ,
INFO  23:45:28,613 - #46 c
INFO  23:45:28,613 - #15 ,
INFO  23:45:28,613 - #45 true
INFO  23:45:28,614 - #8 )
INFO  23:45:28,614 - #6 ;
INFO  23:45:28,614 - #44 u
INFO  23:45:28,614 - #11 =
INFO  23:45:28,614 - #44 x
INFO  23:45:28,614 - #18 .
INFO  23:45:28,614 - #41 findAny
INFO  23:45:28,614 - #7 (
INFO  23:45:28,615 - #43 3
INFO  23:45:28,615 - #8 )
INFO  23:45:28,615 - #6 ;
INFO  23:45:28,615 - #44 x
INFO  23:45:28,615 - #11 =
INFO  23:45:28,615 - #44 x
INFO  23:45:28,615 - #18 .
INFO  23:45:28,615 - #42 findAndReplace
INFO  23:45:28,615 - #7 (
INFO  23:45:28,616 - #43 3
INFO  23:45:28,616 - #15 ,
INFO  23:45:28,616 - #44 u
INFO  23:45:28,616 - #20 =>
INFO  23:45:28,616 - #43 4
INFO  23:45:28,616 - #8 )
INFO  23:45:28,616 - #6 ;
INFO  23:45:28,616 - #5 }
INFO  23:45:28,616 - #5 }
INFO  23:45:28,623 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 int
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   y
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               bool
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 u
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     b
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorBool(
                           false
                          ) [FactorBool]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               u
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           u
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:45:28,623 - ===================================
INFO  23:45:28,626 - Obradjuje se funckijafunc na liniji 6
INFO  23:45:28,626 - Hello Var a na liniji 6
INFO  23:45:28,626 - Hello Var w na liniji 6
INFO  23:45:28,626 - Hello Var c na liniji 6
INFO  23:45:28,626 - Hello Var ww na liniji 7
INFO  23:45:28,627 - Obradjuje se funckijamain na liniji 12
INFO  23:45:28,627 - Hello Var y na liniji 13
INFO  23:45:28,627 - Hello Var u na liniji 14
INFO  23:45:28,627 - Hello Var x na liniji 15
ERROR 23:45:28,627 - Greska: Identifikator je const!Designator na liniji 17
INFO  23:45:28,627 - usao actParsAddOnMany na liniji 11
INFO  23:45:28,627 - 2 na liniji 11
INFO  23:45:28,627 - usao actParsAddOnMany na liniji 11
INFO  23:45:28,627 - 5 na liniji 11
INFO  23:45:28,627 - usao ActParsHas na liniji 18
INFO  23:45:28,627 - 1 na liniji 18
INFO  23:45:28,627 - usao actParsAddOnMany na liniji 11
INFO  23:45:28,627 - 2 na liniji 11
INFO  23:45:28,627 - usao actParsAddOnMany na liniji 11
INFO  23:45:28,627 - 5 na liniji 11
INFO  23:45:28,627 - usao ActParsHas na liniji 19
INFO  23:45:28,627 - 1 na liniji 19
ERROR 23:45:28,628 - Greska: Tipovi nisu jednaki !DesignatorStatementFindAndReplace na liniji 23
INFO  23:48:00,114 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:48:00,139 - #2 program
INFO  23:48:00,139 - #44 MJProgram
INFO  23:48:00,139 - #3 const
INFO  23:48:00,139 - #44 bool
INFO  23:48:00,139 - #44 b
INFO  23:48:00,140 - #11 =
INFO  23:48:00,140 - #45 true
INFO  23:48:00,140 - #6 ;
INFO  23:48:00,140 - #4 {
INFO  23:48:00,141 - #44 int
INFO  23:48:00,141 - #44 func
INFO  23:48:00,141 - #7 (
INFO  23:48:00,141 - #44 int
INFO  23:48:00,141 - #44 a
INFO  23:48:00,141 - #15 ,
INFO  23:48:00,141 - #44 char
INFO  23:48:00,141 - #44 w
INFO  23:48:00,142 - #15 ,
INFO  23:48:00,142 - #44 bool
INFO  23:48:00,142 - #44 c
INFO  23:48:00,142 - #8 )
INFO  23:48:00,142 - #44 char
INFO  23:48:00,142 - #44 ww
INFO  23:48:00,142 - #6 ;
INFO  23:48:00,142 - #4 {
INFO  23:48:00,143 - #12 return
INFO  23:48:00,143 - #43 1
INFO  23:48:00,143 - #6 ;
INFO  23:48:00,143 - #5 }
INFO  23:48:00,143 - #17 void
INFO  23:48:00,144 - #44 main
INFO  23:48:00,144 - #7 (
INFO  23:48:00,144 - #8 )
INFO  23:48:00,144 - #44 int
INFO  23:48:00,144 - #44 y
INFO  23:48:00,144 - #6 ;
INFO  23:48:00,144 - #44 bool
INFO  23:48:00,144 - #44 u
INFO  23:48:00,144 - #6 ;
INFO  23:48:00,144 - #44 char
INFO  23:48:00,144 - #44 cu
INFO  23:48:00,144 - #6 ;
INFO  23:48:00,145 - #44 char
INFO  23:48:00,145 - #44 x
INFO  23:48:00,145 - #10 [
INFO  23:48:00,145 - #9 ]
INFO  23:48:00,145 - #6 ;
INFO  23:48:00,145 - #4 {
INFO  23:48:00,145 - #44 b
INFO  23:48:00,145 - #11 =
INFO  23:48:00,146 - #45 false
INFO  23:48:00,146 - #6 ;
INFO  23:48:00,146 - #44 y
INFO  23:48:00,146 - #11 =
INFO  23:48:00,146 - #44 func
INFO  23:48:00,146 - #7 (
INFO  23:48:00,146 - #43 1
INFO  23:48:00,146 - #15 ,
INFO  23:48:00,147 - #46 c
INFO  23:48:00,147 - #15 ,
INFO  23:48:00,147 - #45 true
INFO  23:48:00,147 - #8 )
INFO  23:48:00,147 - #6 ;
INFO  23:48:00,148 - #44 y
INFO  23:48:00,148 - #11 =
INFO  23:48:00,148 - #44 func
INFO  23:48:00,148 - #7 (
INFO  23:48:00,148 - #43 1
INFO  23:48:00,148 - #15 ,
INFO  23:48:00,148 - #46 c
INFO  23:48:00,148 - #15 ,
INFO  23:48:00,148 - #45 true
INFO  23:48:00,148 - #8 )
INFO  23:48:00,148 - #6 ;
INFO  23:48:00,148 - #44 u
INFO  23:48:00,149 - #11 =
INFO  23:48:00,149 - #44 x
INFO  23:48:00,149 - #18 .
INFO  23:48:00,149 - #41 findAny
INFO  23:48:00,149 - #7 (
INFO  23:48:00,149 - #43 3
INFO  23:48:00,149 - #8 )
INFO  23:48:00,149 - #6 ;
INFO  23:48:00,149 - #44 x
INFO  23:48:00,149 - #11 =
INFO  23:48:00,149 - #44 x
INFO  23:48:00,149 - #18 .
INFO  23:48:00,150 - #42 findAndReplace
INFO  23:48:00,150 - #7 (
INFO  23:48:00,150 - #43 3
INFO  23:48:00,150 - #15 ,
INFO  23:48:00,150 - #44 cu
INFO  23:48:00,150 - #20 =>
INFO  23:48:00,150 - #43 4
INFO  23:48:00,150 - #8 )
INFO  23:48:00,150 - #6 ;
INFO  23:48:00,150 - #5 }
INFO  23:48:00,150 - #5 }
INFO  23:48:00,156 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              NoDeclarationList(
              ) [NoDeclarationList]
              OneDeclDerived1(
                VarDecl(
                  Type(
                   int
                  ) [Type]
                  OneIdent(
                    IdentOptionsElem(
                     y
                    ) [IdentOptionsElem]
                  ) [OneIdent]
                ) [VarDecl]
              ) [OneDeclDerived1]
            ) [DeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 bool
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   u
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 cu
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     b
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorBool(
                           false
                          ) [FactorBool]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               u
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           cu
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:48:00,157 - ===================================
INFO  23:48:00,159 - Obradjuje se funckijafunc na liniji 6
INFO  23:48:00,159 - Hello Var a na liniji 6
INFO  23:48:00,160 - Hello Var w na liniji 6
INFO  23:48:00,160 - Hello Var c na liniji 6
INFO  23:48:00,160 - Hello Var ww na liniji 7
INFO  23:48:00,160 - Obradjuje se funckijamain na liniji 12
INFO  23:48:00,160 - Hello Var y na liniji 13
INFO  23:48:00,160 - Hello Var u na liniji 14
INFO  23:48:00,160 - Hello Var cu na liniji 15
INFO  23:48:00,160 - Hello Var x na liniji 16
ERROR 23:48:00,160 - Greska: Identifikator je const!Designator na liniji 18
INFO  23:48:00,160 - usao actParsAddOnMany na liniji 11
INFO  23:48:00,160 - 2 na liniji 11
INFO  23:48:00,160 - usao actParsAddOnMany na liniji 11
INFO  23:48:00,160 - 5 na liniji 11
INFO  23:48:00,160 - usao ActParsHas na liniji 19
INFO  23:48:00,160 - 1 na liniji 19
INFO  23:48:00,161 - usao actParsAddOnMany na liniji 11
INFO  23:48:00,161 - 2 na liniji 11
INFO  23:48:00,161 - usao actParsAddOnMany na liniji 11
INFO  23:48:00,161 - 5 na liniji 11
INFO  23:48:00,161 - usao ActParsHas na liniji 20
INFO  23:48:00,161 - 1 na liniji 20
INFO  23:48:23,487 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:48:23,510 - #2 program
INFO  23:48:23,510 - #44 MJProgram
INFO  23:48:23,510 - #3 const
INFO  23:48:23,511 - #44 bool
INFO  23:48:23,511 - #44 b
INFO  23:48:23,511 - #11 =
INFO  23:48:23,511 - #45 true
INFO  23:48:23,511 - #6 ;
INFO  23:48:23,512 - #4 {
INFO  23:48:23,512 - #44 int
INFO  23:48:23,512 - #44 func
INFO  23:48:23,513 - #7 (
INFO  23:48:23,513 - #44 int
INFO  23:48:23,513 - #44 a
INFO  23:48:23,513 - #15 ,
INFO  23:48:23,513 - #44 char
INFO  23:48:23,513 - #44 w
INFO  23:48:23,513 - #15 ,
INFO  23:48:23,513 - #44 bool
INFO  23:48:23,513 - #44 c
INFO  23:48:23,513 - #8 )
INFO  23:48:23,513 - #44 char
INFO  23:48:23,514 - #44 ww
INFO  23:48:23,514 - #6 ;
INFO  23:48:23,514 - #4 {
INFO  23:48:23,514 - #12 return
INFO  23:48:23,514 - #43 1
INFO  23:48:23,514 - #6 ;
INFO  23:48:23,515 - #5 }
INFO  23:48:23,515 - #17 void
INFO  23:48:23,515 - #44 main
INFO  23:48:23,515 - #7 (
INFO  23:48:23,516 - #8 )
INFO  23:48:23,516 - #44 int
INFO  23:48:23,516 - #44 y
INFO  23:48:23,516 - #6 ;
INFO  23:48:23,516 - #44 bool
INFO  23:48:23,516 - #44 u
INFO  23:48:23,516 - #6 ;
INFO  23:48:23,516 - #44 char
INFO  23:48:23,516 - #44 cu
INFO  23:48:23,516 - #6 ;
INFO  23:48:23,516 - #44 char
INFO  23:48:23,516 - #44 x
INFO  23:48:23,516 - #10 [
INFO  23:48:23,516 - #9 ]
INFO  23:48:23,517 - #6 ;
INFO  23:48:23,517 - #4 {
INFO  23:48:23,517 - #44 b
INFO  23:48:23,517 - #11 =
INFO  23:48:23,517 - #45 false
INFO  23:48:23,518 - #6 ;
INFO  23:48:23,518 - #44 y
INFO  23:48:23,518 - #11 =
INFO  23:48:23,518 - #44 func
INFO  23:48:23,518 - #7 (
INFO  23:48:23,518 - #43 1
INFO  23:48:23,518 - #15 ,
INFO  23:48:23,519 - #46 c
INFO  23:48:23,519 - #15 ,
INFO  23:48:23,519 - #45 true
INFO  23:48:23,519 - #8 )
INFO  23:48:23,519 - #6 ;
INFO  23:48:23,520 - #44 y
INFO  23:48:23,520 - #11 =
INFO  23:48:23,520 - #44 func
INFO  23:48:23,520 - #7 (
INFO  23:48:23,520 - #43 1
INFO  23:48:23,520 - #15 ,
INFO  23:48:23,520 - #46 c
INFO  23:48:23,520 - #15 ,
INFO  23:48:23,520 - #45 true
INFO  23:48:23,520 - #8 )
INFO  23:48:23,520 - #6 ;
INFO  23:48:23,520 - #44 u
INFO  23:48:23,520 - #11 =
INFO  23:48:23,521 - #44 x
INFO  23:48:23,521 - #18 .
INFO  23:48:23,521 - #41 findAny
INFO  23:48:23,521 - #7 (
INFO  23:48:23,521 - #43 3
INFO  23:48:23,521 - #8 )
INFO  23:48:23,521 - #6 ;
INFO  23:48:23,521 - #44 x
INFO  23:48:23,521 - #11 =
INFO  23:48:23,521 - #44 x
INFO  23:48:23,522 - #18 .
INFO  23:48:23,522 - #42 findAndReplace
INFO  23:48:23,522 - #7 (
INFO  23:48:23,522 - #43 3
INFO  23:48:23,522 - #15 ,
INFO  23:48:23,522 - #44 cu
INFO  23:48:23,522 - #20 =>
INFO  23:48:23,522 - #43 4
INFO  23:48:23,522 - #8 )
INFO  23:48:23,522 - #6 ;
INFO  23:48:23,522 - #5 }
INFO  23:48:23,522 - #5 }
INFO  23:48:23,528 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              NoDeclarationList(
              ) [NoDeclarationList]
              OneDeclDerived1(
                VarDecl(
                  Type(
                   int
                  ) [Type]
                  OneIdent(
                    IdentOptionsElem(
                     y
                    ) [IdentOptionsElem]
                  ) [OneIdent]
                ) [VarDecl]
              ) [OneDeclDerived1]
            ) [DeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 bool
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   u
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 cu
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     b
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorBool(
                           false
                          ) [FactorBool]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               u
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           cu
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:48:23,529 - ===================================
INFO  23:48:23,531 - Obradjuje se funckijafunc na liniji 6
INFO  23:48:23,531 - Hello Var a na liniji 6
INFO  23:48:23,532 - Hello Var w na liniji 6
INFO  23:48:23,532 - Hello Var c na liniji 6
INFO  23:48:23,532 - Hello Var ww na liniji 7
INFO  23:48:23,532 - Obradjuje se funckijamain na liniji 12
INFO  23:48:23,532 - Hello Var y na liniji 13
INFO  23:48:23,532 - Hello Var u na liniji 14
INFO  23:48:23,532 - Hello Var cu na liniji 15
INFO  23:48:23,532 - Hello Var x na liniji 16
ERROR 23:48:23,532 - Greska: Identifikator je const!Designator na liniji 18
INFO  23:48:23,532 - usao actParsAddOnMany na liniji 11
INFO  23:48:23,532 - 2 na liniji 11
INFO  23:48:23,532 - usao actParsAddOnMany na liniji 11
INFO  23:48:23,532 - 5 na liniji 11
INFO  23:48:23,532 - usao ActParsHas na liniji 19
INFO  23:48:23,532 - 1 na liniji 19
INFO  23:48:23,533 - usao actParsAddOnMany na liniji 11
INFO  23:48:23,533 - 2 na liniji 11
INFO  23:48:23,533 - usao actParsAddOnMany na liniji 11
INFO  23:48:23,533 - 5 na liniji 11
INFO  23:48:23,533 - usao ActParsHas na liniji 20
INFO  23:48:23,533 - 1 na liniji 20
INFO  23:49:28,080 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:49:28,103 - #2 program
INFO  23:49:28,103 - #44 MJProgram
INFO  23:49:28,103 - #3 const
INFO  23:49:28,104 - #44 bool
INFO  23:49:28,104 - #44 b
INFO  23:49:28,104 - #11 =
INFO  23:49:28,104 - #45 true
INFO  23:49:28,104 - #6 ;
INFO  23:49:28,105 - #4 {
INFO  23:49:28,105 - #44 int
INFO  23:49:28,105 - #44 func
INFO  23:49:28,105 - #7 (
INFO  23:49:28,106 - #44 int
INFO  23:49:28,106 - #44 a
INFO  23:49:28,106 - #15 ,
INFO  23:49:28,106 - #44 char
INFO  23:49:28,106 - #44 w
INFO  23:49:28,106 - #15 ,
INFO  23:49:28,106 - #44 bool
INFO  23:49:28,106 - #44 c
INFO  23:49:28,106 - #8 )
INFO  23:49:28,106 - #44 char
INFO  23:49:28,106 - #44 ww
INFO  23:49:28,106 - #6 ;
INFO  23:49:28,107 - #4 {
INFO  23:49:28,107 - #12 return
INFO  23:49:28,107 - #43 1
INFO  23:49:28,107 - #6 ;
INFO  23:49:28,107 - #5 }
INFO  23:49:28,108 - #17 void
INFO  23:49:28,108 - #44 main
INFO  23:49:28,108 - #7 (
INFO  23:49:28,108 - #8 )
INFO  23:49:28,108 - #44 int
INFO  23:49:28,109 - #44 y
INFO  23:49:28,109 - #6 ;
INFO  23:49:28,109 - #44 bool
INFO  23:49:28,109 - #44 u
INFO  23:49:28,109 - #6 ;
INFO  23:49:28,109 - #44 char
INFO  23:49:28,109 - #44 cu
INFO  23:49:28,109 - #6 ;
INFO  23:49:28,109 - #44 char
INFO  23:49:28,109 - #44 x
INFO  23:49:28,109 - #10 [
INFO  23:49:28,109 - #9 ]
INFO  23:49:28,109 - #6 ;
INFO  23:49:28,109 - #4 {
INFO  23:49:28,109 - #44 b
INFO  23:49:28,109 - #11 =
INFO  23:49:28,110 - #45 false
INFO  23:49:28,110 - #6 ;
INFO  23:49:28,110 - #44 y
INFO  23:49:28,110 - #11 =
INFO  23:49:28,110 - #44 func
INFO  23:49:28,110 - #7 (
INFO  23:49:28,111 - #43 1
INFO  23:49:28,111 - #15 ,
INFO  23:49:28,111 - #46 c
INFO  23:49:28,111 - #15 ,
INFO  23:49:28,111 - #45 true
INFO  23:49:28,112 - #8 )
INFO  23:49:28,112 - #6 ;
INFO  23:49:28,112 - #44 y
INFO  23:49:28,112 - #11 =
INFO  23:49:28,112 - #44 func
INFO  23:49:28,112 - #7 (
INFO  23:49:28,112 - #43 1
INFO  23:49:28,112 - #15 ,
INFO  23:49:28,113 - #46 c
INFO  23:49:28,113 - #15 ,
INFO  23:49:28,113 - #45 true
INFO  23:49:28,113 - #8 )
INFO  23:49:28,113 - #6 ;
INFO  23:49:28,113 - #44 u
INFO  23:49:28,113 - #11 =
INFO  23:49:28,113 - #44 x
INFO  23:49:28,113 - #18 .
INFO  23:49:28,113 - #41 findAny
INFO  23:49:28,113 - #7 (
INFO  23:49:28,114 - #43 3
INFO  23:49:28,114 - #8 )
INFO  23:49:28,114 - #6 ;
INFO  23:49:28,114 - #44 y
INFO  23:49:28,114 - #11 =
INFO  23:49:28,114 - #44 x
INFO  23:49:28,114 - #18 .
INFO  23:49:28,114 - #42 findAndReplace
INFO  23:49:28,114 - #7 (
INFO  23:49:28,114 - #43 3
INFO  23:49:28,114 - #15 ,
INFO  23:49:28,114 - #44 cu
INFO  23:49:28,114 - #20 =>
INFO  23:49:28,114 - #43 4
INFO  23:49:28,115 - #8 )
INFO  23:49:28,115 - #6 ;
INFO  23:49:28,115 - #5 }
INFO  23:49:28,115 - #5 }
INFO  23:49:28,121 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              NoDeclarationList(
              ) [NoDeclarationList]
              OneDeclDerived1(
                VarDecl(
                  Type(
                   int
                  ) [Type]
                  OneIdent(
                    IdentOptionsElem(
                     y
                    ) [IdentOptionsElem]
                  ) [OneIdent]
                ) [VarDecl]
              ) [OneDeclDerived1]
            ) [DeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 bool
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   u
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 cu
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     b
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorBool(
                           false
                          ) [FactorBool]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               u
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           cu
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:49:28,122 - ===================================
INFO  23:49:28,124 - Obradjuje se funckijafunc na liniji 6
INFO  23:49:28,124 - Hello Var a na liniji 6
INFO  23:49:28,124 - Hello Var w na liniji 6
INFO  23:49:28,124 - Hello Var c na liniji 6
INFO  23:49:28,124 - Hello Var ww na liniji 7
INFO  23:49:28,125 - Obradjuje se funckijamain na liniji 12
INFO  23:49:28,125 - Hello Var y na liniji 13
INFO  23:49:28,125 - Hello Var u na liniji 14
INFO  23:49:28,125 - Hello Var cu na liniji 15
INFO  23:49:28,125 - Hello Var x na liniji 16
ERROR 23:49:28,125 - Greska: Identifikator je const!Designator na liniji 18
INFO  23:49:28,125 - usao actParsAddOnMany na liniji 11
INFO  23:49:28,125 - 2 na liniji 11
INFO  23:49:28,125 - usao actParsAddOnMany na liniji 11
INFO  23:49:28,125 - 5 na liniji 11
INFO  23:49:28,125 - usao ActParsHas na liniji 19
INFO  23:49:28,125 - 1 na liniji 19
INFO  23:49:28,125 - usao actParsAddOnMany na liniji 11
INFO  23:49:28,125 - 2 na liniji 11
INFO  23:49:28,125 - usao actParsAddOnMany na liniji 11
INFO  23:49:28,125 - 5 na liniji 11
INFO  23:49:28,126 - usao ActParsHas na liniji 20
INFO  23:49:28,126 - 1 na liniji 20
ERROR 23:49:28,126 - Greska: Tip levo od znaka jednakosti nije niz !DesignatorStatementFindAny na liniji 24
INFO  23:49:44,691 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:49:44,716 - #2 program
INFO  23:49:44,716 - #44 MJProgram
INFO  23:49:44,716 - #3 const
INFO  23:49:44,716 - #44 bool
INFO  23:49:44,716 - #44 b
INFO  23:49:44,716 - #11 =
INFO  23:49:44,716 - #45 true
INFO  23:49:44,716 - #6 ;
INFO  23:49:44,716 - #4 {
INFO  23:49:44,718 - #44 int
INFO  23:49:44,718 - #44 func
INFO  23:49:44,718 - #7 (
INFO  23:49:44,718 - #44 int
INFO  23:49:44,718 - #44 a
INFO  23:49:44,718 - #15 ,
INFO  23:49:44,718 - #44 char
INFO  23:49:44,718 - #44 w
INFO  23:49:44,718 - #15 ,
INFO  23:49:44,718 - #44 bool
INFO  23:49:44,718 - #44 c
INFO  23:49:44,718 - #8 )
INFO  23:49:44,718 - #44 char
INFO  23:49:44,718 - #44 ww
INFO  23:49:44,718 - #6 ;
INFO  23:49:44,718 - #4 {
INFO  23:49:44,719 - #12 return
INFO  23:49:44,719 - #43 1
INFO  23:49:44,719 - #6 ;
INFO  23:49:44,719 - #5 }
INFO  23:49:44,719 - #17 void
INFO  23:49:44,720 - #44 main
INFO  23:49:44,720 - #7 (
INFO  23:49:44,720 - #8 )
INFO  23:49:44,720 - #44 int
INFO  23:49:44,720 - #44 y
INFO  23:49:44,720 - #10 [
INFO  23:49:44,720 - #9 ]
INFO  23:49:44,720 - #6 ;
INFO  23:49:44,721 - #44 bool
INFO  23:49:44,721 - #44 u
INFO  23:49:44,721 - #6 ;
INFO  23:49:44,721 - #44 char
INFO  23:49:44,721 - #44 cu
INFO  23:49:44,721 - #6 ;
INFO  23:49:44,721 - #44 char
INFO  23:49:44,721 - #44 x
INFO  23:49:44,721 - #10 [
INFO  23:49:44,721 - #9 ]
INFO  23:49:44,721 - #6 ;
INFO  23:49:44,721 - #4 {
INFO  23:49:44,721 - #44 b
INFO  23:49:44,721 - #11 =
INFO  23:49:44,722 - #45 false
INFO  23:49:44,722 - #6 ;
INFO  23:49:44,722 - #44 y
INFO  23:49:44,722 - #11 =
INFO  23:49:44,722 - #44 func
INFO  23:49:44,722 - #7 (
INFO  23:49:44,722 - #43 1
INFO  23:49:44,722 - #15 ,
INFO  23:49:44,724 - #46 c
INFO  23:49:44,724 - #15 ,
INFO  23:49:44,724 - #45 true
INFO  23:49:44,724 - #8 )
INFO  23:49:44,725 - #6 ;
INFO  23:49:44,725 - #44 y
INFO  23:49:44,725 - #11 =
INFO  23:49:44,725 - #44 func
INFO  23:49:44,725 - #7 (
INFO  23:49:44,725 - #43 1
INFO  23:49:44,725 - #15 ,
INFO  23:49:44,725 - #46 c
INFO  23:49:44,725 - #15 ,
INFO  23:49:44,725 - #45 true
INFO  23:49:44,725 - #8 )
INFO  23:49:44,726 - #6 ;
INFO  23:49:44,726 - #44 u
INFO  23:49:44,726 - #11 =
INFO  23:49:44,726 - #44 x
INFO  23:49:44,726 - #18 .
INFO  23:49:44,726 - #41 findAny
INFO  23:49:44,726 - #7 (
INFO  23:49:44,726 - #43 3
INFO  23:49:44,726 - #8 )
INFO  23:49:44,726 - #6 ;
INFO  23:49:44,726 - #44 y
INFO  23:49:44,727 - #11 =
INFO  23:49:44,727 - #44 x
INFO  23:49:44,727 - #18 .
INFO  23:49:44,727 - #42 findAndReplace
INFO  23:49:44,727 - #7 (
INFO  23:49:44,727 - #43 3
INFO  23:49:44,727 - #15 ,
INFO  23:49:44,727 - #44 cu
INFO  23:49:44,727 - #20 =>
INFO  23:49:44,727 - #43 4
INFO  23:49:44,727 - #8 )
INFO  23:49:44,727 - #6 ;
INFO  23:49:44,727 - #5 }
INFO  23:49:44,727 - #5 }
INFO  23:49:44,733 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              NoDeclarationList(
              ) [NoDeclarationList]
              OneDeclDerived1(
                VarDecl(
                  Type(
                   int
                  ) [Type]
                  OneIdent(
                    IdentOptionsArray(
                     y
                    ) [IdentOptionsArray]
                  ) [OneIdent]
                ) [VarDecl]
              ) [OneDeclDerived1]
            ) [DeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 bool
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   u
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 cu
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     b
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorBool(
                           false
                          ) [FactorBool]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               u
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             y
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           cu
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:49:44,734 - ===================================
INFO  23:49:44,736 - Obradjuje se funckijafunc na liniji 6
INFO  23:49:44,736 - Hello Var a na liniji 6
INFO  23:49:44,737 - Hello Var w na liniji 6
INFO  23:49:44,737 - Hello Var c na liniji 6
INFO  23:49:44,737 - Hello Var ww na liniji 7
INFO  23:49:44,737 - Obradjuje se funckijamain na liniji 12
INFO  23:49:44,737 - Hello Var y na liniji 13
INFO  23:49:44,737 - Hello Var u na liniji 14
INFO  23:49:44,737 - Hello Var cu na liniji 15
INFO  23:49:44,737 - Hello Var x na liniji 16
ERROR 23:49:44,737 - Greska: Identifikator je const!Designator na liniji 18
INFO  23:49:44,737 - usao actParsAddOnMany na liniji 11
INFO  23:49:44,737 - 2 na liniji 11
INFO  23:49:44,737 - usao actParsAddOnMany na liniji 11
INFO  23:49:44,737 - 5 na liniji 11
INFO  23:49:44,738 - usao ActParsHas na liniji 19
INFO  23:49:44,738 - 1 na liniji 19
ERROR 23:49:44,738 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 19
INFO  23:49:44,738 - usao actParsAddOnMany na liniji 11
INFO  23:49:44,738 - 2 na liniji 11
INFO  23:49:44,738 - usao actParsAddOnMany na liniji 11
INFO  23:49:44,738 - 5 na liniji 11
INFO  23:49:44,738 - usao ActParsHas na liniji 20
INFO  23:49:44,738 - 1 na liniji 20
ERROR 23:49:44,738 - Greska: Tipovi nisu ekvivalentni !DesignatorStatementIs na liniji 20
INFO  23:50:01,942 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  23:50:01,966 - #2 program
INFO  23:50:01,966 - #44 MJProgram
INFO  23:50:01,966 - #3 const
INFO  23:50:01,967 - #44 bool
INFO  23:50:01,967 - #44 b
INFO  23:50:01,967 - #11 =
INFO  23:50:01,967 - #45 true
INFO  23:50:01,967 - #6 ;
INFO  23:50:01,968 - #4 {
INFO  23:50:01,968 - #44 int
INFO  23:50:01,968 - #44 func
INFO  23:50:01,968 - #7 (
INFO  23:50:01,969 - #44 int
INFO  23:50:01,969 - #44 a
INFO  23:50:01,969 - #15 ,
INFO  23:50:01,969 - #44 char
INFO  23:50:01,969 - #44 w
INFO  23:50:01,969 - #15 ,
INFO  23:50:01,969 - #44 bool
INFO  23:50:01,970 - #44 c
INFO  23:50:01,970 - #8 )
INFO  23:50:01,970 - #44 char
INFO  23:50:01,970 - #44 ww
INFO  23:50:01,970 - #6 ;
INFO  23:50:01,970 - #4 {
INFO  23:50:01,971 - #12 return
INFO  23:50:01,971 - #43 1
INFO  23:50:01,971 - #6 ;
INFO  23:50:01,971 - #5 }
INFO  23:50:01,971 - #17 void
INFO  23:50:01,972 - #44 main
INFO  23:50:01,972 - #7 (
INFO  23:50:01,972 - #8 )
INFO  23:50:01,972 - #44 int
INFO  23:50:01,972 - #44 y
INFO  23:50:01,972 - #6 ;
INFO  23:50:01,972 - #44 bool
INFO  23:50:01,972 - #44 u
INFO  23:50:01,972 - #6 ;
INFO  23:50:01,973 - #44 char
INFO  23:50:01,973 - #44 cu
INFO  23:50:01,973 - #6 ;
INFO  23:50:01,973 - #44 char
INFO  23:50:01,973 - #44 x
INFO  23:50:01,973 - #10 [
INFO  23:50:01,973 - #9 ]
INFO  23:50:01,973 - #6 ;
INFO  23:50:01,973 - #4 {
INFO  23:50:01,973 - #44 b
INFO  23:50:01,973 - #11 =
INFO  23:50:01,974 - #45 false
INFO  23:50:01,974 - #6 ;
INFO  23:50:01,974 - #44 y
INFO  23:50:01,974 - #11 =
INFO  23:50:01,974 - #44 func
INFO  23:50:01,974 - #7 (
INFO  23:50:01,974 - #43 1
INFO  23:50:01,975 - #15 ,
INFO  23:50:01,975 - #46 c
INFO  23:50:01,975 - #15 ,
INFO  23:50:01,976 - #45 true
INFO  23:50:01,976 - #8 )
INFO  23:50:01,976 - #6 ;
INFO  23:50:01,976 - #44 y
INFO  23:50:01,977 - #11 =
INFO  23:50:01,977 - #44 func
INFO  23:50:01,977 - #7 (
INFO  23:50:01,977 - #43 1
INFO  23:50:01,977 - #15 ,
INFO  23:50:01,977 - #46 c
INFO  23:50:01,977 - #15 ,
INFO  23:50:01,977 - #45 true
INFO  23:50:01,977 - #8 )
INFO  23:50:01,977 - #6 ;
INFO  23:50:01,977 - #44 u
INFO  23:50:01,977 - #11 =
INFO  23:50:01,977 - #44 x
INFO  23:50:01,977 - #18 .
INFO  23:50:01,977 - #41 findAny
INFO  23:50:01,977 - #7 (
INFO  23:50:01,978 - #43 3
INFO  23:50:01,978 - #8 )
INFO  23:50:01,978 - #6 ;
INFO  23:50:01,978 - #44 x
INFO  23:50:01,978 - #11 =
INFO  23:50:01,978 - #44 x
INFO  23:50:01,978 - #18 .
INFO  23:50:01,978 - #42 findAndReplace
INFO  23:50:01,978 - #7 (
INFO  23:50:01,979 - #43 3
INFO  23:50:01,979 - #15 ,
INFO  23:50:01,979 - #44 cu
INFO  23:50:01,979 - #20 =>
INFO  23:50:01,979 - #43 4
INFO  23:50:01,979 - #8 )
INFO  23:50:01,979 - #6 ;
INFO  23:50:01,979 - #5 }
INFO  23:50:01,979 - #5 }
INFO  23:50:01,985 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              NoDeclarationList(
              ) [NoDeclarationList]
              OneDeclDerived1(
                VarDecl(
                  Type(
                   int
                  ) [Type]
                  OneIdent(
                    IdentOptionsElem(
                     y
                    ) [IdentOptionsElem]
                  ) [OneIdent]
                ) [VarDecl]
              ) [OneDeclDerived1]
            ) [DeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 bool
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   u
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 cu
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     b
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorBool(
                           false
                          ) [FactorBool]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementIs(
                Designator(
                 y
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorDesActPar(
                        Designator(
                         func
                          NoAddOns(
                          ) [NoAddOns]
                        ) [Designator]
                        OptActPars(
                          ActParsHas(
                            ExprNormal(
                              ExprOne(
                                TermOne(
                                  FactorNumber(
                                   1
                                  ) [FactorNumber]
                                ) [TermOne]
                              ) [ExprOne]
                            ) [ExprNormal]
                            ActParsAddOnMany(
                              ActParsAddOnMany(
                                ActParsAddOnNone(
                                ) [ActParsAddOnNone]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorChar(
                                       c
                                      ) [FactorChar]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorBool(
                                     true
                                    ) [FactorBool]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                            ) [ActParsAddOnMany]
                          ) [ActParsHas]
                        ) [OptActPars]
                      ) [FactorDesActPar]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementIs]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAny(
              Designator(
               u
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAnyBegin(
              ) [FindAnyBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAny]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementDesignator(
          DesignatorStatementFindAndReplace(
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            Designator(
             x
              NoAddOns(
              ) [NoAddOns]
            ) [Designator]
            FindAndReplaceBegin(
            ) [FindAndReplaceBegin]
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
           cu
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   4
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [DesignatorStatementFindAndReplace]
        ) [StatementDesignator]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  23:50:01,986 - ===================================
INFO  23:50:01,988 - Obradjuje se funckijafunc na liniji 6
INFO  23:50:01,988 - Hello Var a na liniji 6
INFO  23:50:01,989 - Hello Var w na liniji 6
INFO  23:50:01,989 - Hello Var c na liniji 6
INFO  23:50:01,989 - Hello Var ww na liniji 7
INFO  23:50:01,989 - Obradjuje se funckijamain na liniji 12
INFO  23:50:01,989 - Hello Var y na liniji 13
INFO  23:50:01,989 - Hello Var u na liniji 14
INFO  23:50:01,989 - Hello Var cu na liniji 15
INFO  23:50:01,989 - Hello Var x na liniji 16
ERROR 23:50:01,989 - Greska: Identifikator je const!Designator na liniji 18
INFO  23:50:01,989 - usao actParsAddOnMany na liniji 11
INFO  23:50:01,989 - 2 na liniji 11
INFO  23:50:01,989 - usao actParsAddOnMany na liniji 11
INFO  23:50:01,989 - 5 na liniji 11
INFO  23:50:01,990 - usao ActParsHas na liniji 19
INFO  23:50:01,990 - 1 na liniji 19
INFO  23:50:01,990 - usao actParsAddOnMany na liniji 11
INFO  23:50:01,990 - 2 na liniji 11
INFO  23:50:01,990 - usao actParsAddOnMany na liniji 11
INFO  23:50:01,990 - 5 na liniji 11
INFO  23:50:01,990 - usao ActParsHas na liniji 20
INFO  23:50:01,990 - 1 na liniji 20
INFO  01:27:55,110 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  01:27:55,135 - #2 program
INFO  01:27:55,135 - #44 MJProgram
INFO  01:27:55,135 - #3 const
INFO  01:27:55,136 - #44 bool
INFO  01:27:55,136 - #44 b
INFO  01:27:55,136 - #11 =
INFO  01:27:55,136 - #45 true
INFO  01:27:55,136 - #6 ;
INFO  01:27:55,137 - #4 {
INFO  01:27:55,137 - #44 int
INFO  01:27:55,137 - #44 func
INFO  01:27:55,138 - #7 (
INFO  01:27:55,138 - #44 int
INFO  01:27:55,138 - #44 a
INFO  01:27:55,138 - #15 ,
INFO  01:27:55,138 - #44 char
INFO  01:27:55,138 - #44 w
INFO  01:27:55,138 - #15 ,
INFO  01:27:55,138 - #44 bool
INFO  01:27:55,138 - #44 c
INFO  01:27:55,138 - #8 )
INFO  01:27:55,138 - #44 char
INFO  01:27:55,138 - #44 ww
INFO  01:27:55,138 - #6 ;
INFO  01:27:55,139 - #4 {
INFO  01:27:55,139 - #12 return
INFO  01:27:55,139 - #43 1
INFO  01:27:55,139 - #6 ;
INFO  01:27:55,139 - #5 }
INFO  01:27:55,140 - #17 void
INFO  01:27:55,140 - #44 main
INFO  01:27:55,140 - #7 (
INFO  01:27:55,140 - #8 )
INFO  01:27:55,141 - #44 int
INFO  01:27:55,141 - #44 y
INFO  01:27:55,141 - #6 ;
INFO  01:27:55,141 - #44 bool
INFO  01:27:55,141 - #44 u
INFO  01:27:55,141 - #6 ;
INFO  01:27:55,141 - #44 char
INFO  01:27:55,141 - #44 cu
INFO  01:27:55,141 - #6 ;
INFO  01:27:55,141 - #12 return
ERROR 01:27:55,141 - 
Sintaksna greska na liniji 16
ERROR 01:27:55,141 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 16
INFO  01:28:47,989 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  01:28:48,013 - #2 program
INFO  01:28:48,013 - #44 MJProgram
INFO  01:28:48,013 - #3 const
INFO  01:28:48,013 - #44 bool
INFO  01:28:48,013 - #44 b
INFO  01:28:48,014 - #11 =
INFO  01:28:48,014 - #45 true
INFO  01:28:48,014 - #6 ;
INFO  01:28:48,015 - #4 {
INFO  01:28:48,015 - #44 int
INFO  01:28:48,015 - #44 func
INFO  01:28:48,015 - #7 (
INFO  01:28:48,015 - #44 int
INFO  01:28:48,015 - #44 a
INFO  01:28:48,016 - #15 ,
INFO  01:28:48,016 - #44 char
INFO  01:28:48,016 - #44 w
INFO  01:28:48,016 - #15 ,
INFO  01:28:48,016 - #44 bool
INFO  01:28:48,016 - #44 c
INFO  01:28:48,016 - #8 )
INFO  01:28:48,016 - #44 char
INFO  01:28:48,016 - #44 ww
INFO  01:28:48,016 - #6 ;
INFO  01:28:48,016 - #4 {
INFO  01:28:48,017 - #12 return
INFO  01:28:48,017 - #43 1
INFO  01:28:48,017 - #6 ;
INFO  01:28:48,017 - #5 }
INFO  01:28:48,018 - #17 void
INFO  01:28:48,018 - #44 main
INFO  01:28:48,018 - #7 (
INFO  01:28:48,018 - #8 )
INFO  01:28:48,018 - #44 int
INFO  01:28:48,018 - #44 y
INFO  01:28:48,019 - #6 ;
INFO  01:28:48,019 - #44 bool
INFO  01:28:48,019 - #44 u
INFO  01:28:48,019 - #6 ;
INFO  01:28:48,019 - #44 char
INFO  01:28:48,019 - #44 cu
INFO  01:28:48,019 - #6 ;
INFO  01:28:48,019 - #44 char
INFO  01:28:48,019 - #44 x
INFO  01:28:48,019 - #10 [
INFO  01:28:48,019 - #9 ]
INFO  01:28:48,019 - #6 ;
INFO  01:28:48,019 - #4 {
INFO  01:28:48,019 - #44 b
INFO  01:28:48,019 - #11 =
INFO  01:28:48,020 - #45 false
INFO  01:28:48,020 - #6 ;
INFO  01:28:48,020 - #44 y
INFO  01:28:48,020 - #11 =
INFO  01:28:48,020 - #44 func
INFO  01:28:48,020 - #7 (
INFO  01:28:48,020 - #43 1
INFO  01:28:48,021 - #15 ,
INFO  01:28:48,021 - #46 c
INFO  01:28:48,021 - #15 ,
INFO  01:28:48,021 - #45 true
INFO  01:28:48,021 - #8 )
INFO  01:28:48,022 - #6 ;
INFO  01:28:48,022 - #44 y
INFO  01:28:48,022 - #11 =
INFO  01:28:48,022 - #44 func
INFO  01:28:48,022 - #7 (
INFO  01:28:48,022 - #43 1
INFO  01:28:48,022 - #15 ,
INFO  01:28:48,023 - #46 c
INFO  01:28:48,023 - #15 ,
INFO  01:28:48,023 - #45 true
INFO  01:28:48,023 - #8 )
INFO  01:28:48,023 - #6 ;
INFO  01:28:48,023 - #44 u
INFO  01:28:48,023 - #11 =
INFO  01:28:48,023 - #44 x
INFO  01:28:48,023 - #18 .
INFO  01:28:48,023 - #41 findAny
INFO  01:28:48,023 - #7 (
INFO  01:28:48,024 - #43 3
INFO  01:28:48,024 - #8 )
INFO  01:28:48,024 - #6 ;
INFO  01:28:48,024 - #44 x
INFO  01:28:48,024 - #11 =
INFO  01:28:48,024 - #44 x
INFO  01:28:48,024 - #18 .
INFO  01:28:48,024 - #42 findAndReplace
INFO  01:28:48,024 - #7 (
INFO  01:28:48,024 - #43 3
INFO  01:28:48,024 - #15 ,
INFO  01:28:48,024 - #44 cu
INFO  01:28:48,025 - #20 =>
INFO  01:28:48,025 - #43 4
INFO  01:28:48,025 - #8 )
INFO  01:28:48,025 - #6 ;
INFO  01:28:48,025 - #12 return
INFO  01:28:48,025 - #6 ;
INFO  01:28:48,025 - #5 }
INFO  01:28:48,025 - #5 }
INFO  01:28:48,031 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              NoDeclarationList(
              ) [NoDeclarationList]
              OneDeclDerived1(
                VarDecl(
                  Type(
                   int
                  ) [Type]
                  OneIdent(
                    IdentOptionsElem(
                     y
                    ) [IdentOptionsElem]
                  ) [OneIdent]
                ) [VarDecl]
              ) [OneDeclDerived1]
            ) [DeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 bool
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   u
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 cu
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       b
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorBool(
                             false
                            ) [FactorBool]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     y
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             func
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActPars(
                              ActParsHas(
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorNumber(
                                       1
                                      ) [FactorNumber]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                                ActParsAddOnMany(
                                  ActParsAddOnMany(
                                    ActParsAddOnNone(
                                    ) [ActParsAddOnNone]
                                    ExprNormal(
                                      ExprOne(
                                        TermOne(
                                          FactorChar(
                                           c
                                          ) [FactorChar]
                                        ) [TermOne]
                                      ) [ExprOne]
                                    ) [ExprNormal]
                                  ) [ActParsAddOnMany]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorBool(
                                         true
                                        ) [FactorBool]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                              ) [ActParsHas]
                            ) [OptActPars]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementFindAny(
                Designator(
                 u
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                FindAnyBegin(
                ) [FindAnyBegin]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       3
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementFindAny]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAndReplace(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAndReplaceBegin(
              ) [FindAndReplaceBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
             cu
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     4
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAndReplace]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementReturnNoExpr(
        ) [StatementReturnNoExpr]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  01:28:48,032 - ===================================
INFO  01:28:48,034 - Obradjuje se funckijafunc na liniji 6
INFO  01:28:48,034 - Hello Var a na liniji 6
INFO  01:28:48,035 - Hello Var w na liniji 6
INFO  01:28:48,035 - Hello Var c na liniji 6
INFO  01:28:48,035 - Hello Var ww na liniji 7
INFO  01:28:48,035 - Obradjuje se funckijamain na liniji 12
INFO  01:28:48,035 - Hello Var y na liniji 13
INFO  01:28:48,035 - Hello Var u na liniji 14
INFO  01:28:48,035 - Hello Var cu na liniji 15
INFO  01:28:48,035 - Hello Var x na liniji 16
ERROR 01:28:48,035 - Greska: Identifikator je const!Designator na liniji 18
INFO  01:28:48,035 - usao actParsAddOnMany na liniji 11
INFO  01:28:48,035 - 2 na liniji 11
INFO  01:28:48,035 - usao actParsAddOnMany na liniji 11
INFO  01:28:48,035 - 5 na liniji 11
INFO  01:28:48,035 - usao ActParsHas na liniji 19
INFO  01:28:48,035 - 1 na liniji 19
INFO  01:28:48,035 - usao actParsAddOnMany na liniji 11
INFO  01:28:48,036 - 2 na liniji 11
INFO  01:28:48,036 - usao actParsAddOnMany na liniji 11
INFO  01:28:48,036 - 5 na liniji 11
INFO  01:28:48,036 - usao ActParsHas na liniji 20
INFO  01:28:48,036 - 1 na liniji 20
INFO  01:29:03,643 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  01:29:03,668 - #2 program
INFO  01:29:03,668 - #44 MJProgram
INFO  01:29:03,668 - #3 const
INFO  01:29:03,669 - #44 bool
INFO  01:29:03,669 - #44 b
INFO  01:29:03,669 - #11 =
INFO  01:29:03,669 - #45 true
INFO  01:29:03,669 - #6 ;
INFO  01:29:03,670 - #4 {
INFO  01:29:03,670 - #44 int
INFO  01:29:03,670 - #44 func
INFO  01:29:03,670 - #7 (
INFO  01:29:03,670 - #44 int
INFO  01:29:03,670 - #44 a
INFO  01:29:03,670 - #15 ,
INFO  01:29:03,671 - #44 char
INFO  01:29:03,671 - #44 w
INFO  01:29:03,671 - #15 ,
INFO  01:29:03,671 - #44 bool
INFO  01:29:03,671 - #44 c
INFO  01:29:03,671 - #8 )
INFO  01:29:03,671 - #44 char
INFO  01:29:03,671 - #44 ww
INFO  01:29:03,671 - #6 ;
INFO  01:29:03,671 - #4 {
INFO  01:29:03,672 - #12 return
INFO  01:29:03,672 - #43 1
INFO  01:29:03,672 - #6 ;
INFO  01:29:03,672 - #5 }
INFO  01:29:03,672 - #17 void
INFO  01:29:03,673 - #44 main
INFO  01:29:03,673 - #7 (
INFO  01:29:03,673 - #8 )
INFO  01:29:03,673 - #44 int
INFO  01:29:03,673 - #44 y
INFO  01:29:03,673 - #6 ;
INFO  01:29:03,674 - #44 bool
INFO  01:29:03,674 - #44 u
INFO  01:29:03,674 - #6 ;
INFO  01:29:03,674 - #44 char
INFO  01:29:03,674 - #44 cu
INFO  01:29:03,674 - #6 ;
INFO  01:29:03,674 - #44 char
INFO  01:29:03,674 - #44 x
INFO  01:29:03,674 - #10 [
INFO  01:29:03,674 - #9 ]
INFO  01:29:03,674 - #6 ;
INFO  01:29:03,674 - #4 {
INFO  01:29:03,674 - #44 y
INFO  01:29:03,674 - #11 =
INFO  01:29:03,675 - #44 func
INFO  01:29:03,675 - #7 (
INFO  01:29:03,675 - #43 1
INFO  01:29:03,675 - #15 ,
INFO  01:29:03,676 - #46 c
INFO  01:29:03,676 - #15 ,
INFO  01:29:03,676 - #45 true
INFO  01:29:03,676 - #8 )
INFO  01:29:03,676 - #6 ;
INFO  01:29:03,677 - #44 y
INFO  01:29:03,677 - #11 =
INFO  01:29:03,677 - #44 func
INFO  01:29:03,677 - #7 (
INFO  01:29:03,677 - #43 1
INFO  01:29:03,677 - #15 ,
INFO  01:29:03,677 - #46 c
INFO  01:29:03,677 - #15 ,
INFO  01:29:03,677 - #45 true
INFO  01:29:03,677 - #8 )
INFO  01:29:03,678 - #6 ;
INFO  01:29:03,678 - #44 u
INFO  01:29:03,678 - #11 =
INFO  01:29:03,678 - #44 x
INFO  01:29:03,678 - #18 .
INFO  01:29:03,678 - #41 findAny
INFO  01:29:03,678 - #7 (
INFO  01:29:03,678 - #43 3
INFO  01:29:03,678 - #8 )
INFO  01:29:03,678 - #6 ;
INFO  01:29:03,679 - #44 x
INFO  01:29:03,679 - #11 =
INFO  01:29:03,679 - #44 x
INFO  01:29:03,679 - #18 .
INFO  01:29:03,679 - #42 findAndReplace
INFO  01:29:03,679 - #7 (
INFO  01:29:03,679 - #43 3
INFO  01:29:03,679 - #15 ,
INFO  01:29:03,679 - #44 cu
INFO  01:29:03,679 - #20 =>
INFO  01:29:03,679 - #43 4
INFO  01:29:03,680 - #8 )
INFO  01:29:03,680 - #6 ;
INFO  01:29:03,680 - #12 return
INFO  01:29:03,680 - #6 ;
INFO  01:29:03,680 - #5 }
INFO  01:29:03,680 - #5 }
INFO  01:29:03,685 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              NoDeclarationList(
              ) [NoDeclarationList]
              OneDeclDerived1(
                VarDecl(
                  Type(
                   int
                  ) [Type]
                  OneIdent(
                    IdentOptionsElem(
                     y
                    ) [IdentOptionsElem]
                  ) [OneIdent]
                ) [VarDecl]
              ) [OneDeclDerived1]
            ) [DeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 bool
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   u
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 cu
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     y
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             func
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActPars(
                              ActParsHas(
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorNumber(
                                       1
                                      ) [FactorNumber]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                                ActParsAddOnMany(
                                  ActParsAddOnMany(
                                    ActParsAddOnNone(
                                    ) [ActParsAddOnNone]
                                    ExprNormal(
                                      ExprOne(
                                        TermOne(
                                          FactorChar(
                                           c
                                          ) [FactorChar]
                                        ) [TermOne]
                                      ) [ExprOne]
                                    ) [ExprNormal]
                                  ) [ActParsAddOnMany]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorBool(
                                         true
                                        ) [FactorBool]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                              ) [ActParsHas]
                            ) [OptActPars]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementFindAny(
                Designator(
                 u
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                FindAnyBegin(
                ) [FindAnyBegin]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       3
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementFindAny]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAndReplace(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAndReplaceBegin(
              ) [FindAndReplaceBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
             cu
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     4
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAndReplace]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementReturnNoExpr(
        ) [StatementReturnNoExpr]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  01:29:03,686 - ===================================
INFO  01:29:03,689 - Obradjuje se funckijafunc na liniji 6
INFO  01:29:03,689 - Hello Var a na liniji 6
INFO  01:29:03,689 - Hello Var w na liniji 6
INFO  01:29:03,689 - Hello Var c na liniji 6
INFO  01:29:03,689 - Hello Var ww na liniji 7
INFO  01:29:03,689 - Obradjuje se funckijamain na liniji 12
INFO  01:29:03,689 - Hello Var y na liniji 13
INFO  01:29:03,689 - Hello Var u na liniji 14
INFO  01:29:03,689 - Hello Var cu na liniji 15
INFO  01:29:03,689 - Hello Var x na liniji 16
INFO  01:29:03,689 - usao actParsAddOnMany na liniji 11
INFO  01:29:03,690 - 2 na liniji 11
INFO  01:29:03,690 - usao actParsAddOnMany na liniji 11
INFO  01:29:03,690 - 5 na liniji 11
INFO  01:29:03,690 - usao ActParsHas na liniji 19
INFO  01:29:03,690 - 1 na liniji 19
INFO  01:29:03,690 - usao actParsAddOnMany na liniji 11
INFO  01:29:03,690 - 2 na liniji 11
INFO  01:29:03,690 - usao actParsAddOnMany na liniji 11
INFO  01:29:03,690 - 5 na liniji 11
INFO  01:29:03,690 - usao ActParsHas na liniji 20
INFO  01:29:03,690 - 1 na liniji 20
INFO  01:31:45,807 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  01:31:45,833 - #2 program
INFO  01:31:45,833 - #44 MJProgram
INFO  01:31:45,833 - #3 const
INFO  01:31:45,833 - #44 bool
INFO  01:31:45,833 - #44 b
INFO  01:31:45,834 - #11 =
INFO  01:31:45,834 - #45 true
INFO  01:31:45,834 - #6 ;
INFO  01:31:45,834 - #4 {
INFO  01:31:45,835 - #44 int
INFO  01:31:45,835 - #44 func
INFO  01:31:45,835 - #7 (
INFO  01:31:45,835 - #44 int
INFO  01:31:45,835 - #44 a
INFO  01:31:45,835 - #15 ,
INFO  01:31:45,835 - #44 char
INFO  01:31:45,835 - #44 w
INFO  01:31:45,836 - #15 ,
INFO  01:31:45,836 - #44 bool
INFO  01:31:45,836 - #44 c
INFO  01:31:45,836 - #8 )
INFO  01:31:45,836 - #44 char
INFO  01:31:45,836 - #44 ww
INFO  01:31:45,836 - #6 ;
INFO  01:31:45,836 - #4 {
INFO  01:31:45,837 - #12 return
INFO  01:31:45,837 - #43 1
INFO  01:31:45,837 - #6 ;
INFO  01:31:45,837 - #5 }
INFO  01:31:45,837 - #17 void
INFO  01:31:45,838 - #44 main
INFO  01:31:45,838 - #7 (
INFO  01:31:45,838 - #8 )
INFO  01:31:45,838 - #44 int
INFO  01:31:45,838 - #44 y
INFO  01:31:45,838 - #6 ;
INFO  01:31:45,838 - #44 bool
INFO  01:31:45,838 - #44 u
INFO  01:31:45,838 - #6 ;
INFO  01:31:45,838 - #44 char
INFO  01:31:45,839 - #44 cu
INFO  01:31:45,839 - #6 ;
INFO  01:31:45,839 - #44 char
INFO  01:31:45,839 - #44 x
INFO  01:31:45,839 - #10 [
INFO  01:31:45,839 - #9 ]
INFO  01:31:45,839 - #6 ;
INFO  01:31:45,839 - #4 {
INFO  01:31:45,839 - #44 y
INFO  01:31:45,839 - #11 =
INFO  01:31:45,840 - #44 func
INFO  01:31:45,840 - #7 (
INFO  01:31:45,840 - #43 1
INFO  01:31:45,840 - #15 ,
INFO  01:31:45,840 - #46 c
INFO  01:31:45,841 - #15 ,
INFO  01:31:45,841 - #45 true
INFO  01:31:45,841 - #8 )
INFO  01:31:45,841 - #6 ;
INFO  01:31:45,841 - #44 y
INFO  01:31:45,842 - #11 =
INFO  01:31:45,842 - #44 func
INFO  01:31:45,842 - #7 (
INFO  01:31:45,842 - #43 1
INFO  01:31:45,842 - #15 ,
INFO  01:31:45,842 - #46 c
INFO  01:31:45,842 - #15 ,
INFO  01:31:45,842 - #45 true
INFO  01:31:45,842 - #8 )
INFO  01:31:45,842 - #6 ;
INFO  01:31:45,842 - #44 u
INFO  01:31:45,842 - #11 =
INFO  01:31:45,842 - #44 x
INFO  01:31:45,842 - #18 .
INFO  01:31:45,842 - #41 findAny
INFO  01:31:45,842 - #7 (
INFO  01:31:45,843 - #43 3
INFO  01:31:45,843 - #8 )
INFO  01:31:45,843 - #6 ;
INFO  01:31:45,843 - #44 x
INFO  01:31:45,843 - #11 =
INFO  01:31:45,844 - #44 x
INFO  01:31:45,844 - #18 .
INFO  01:31:45,844 - #42 findAndReplace
INFO  01:31:45,844 - #7 (
INFO  01:31:45,844 - #43 3
INFO  01:31:45,844 - #15 ,
INFO  01:31:45,844 - #44 cu
INFO  01:31:45,844 - #20 =>
INFO  01:31:45,844 - #43 4
INFO  01:31:45,844 - #8 )
INFO  01:31:45,844 - #6 ;
INFO  01:31:45,845 - #36 read
INFO  01:31:45,845 - #7 (
INFO  01:31:45,845 - #44 x
INFO  01:31:45,845 - #10 [
INFO  01:31:45,845 - #43 1
INFO  01:31:45,845 - #9 ]
INFO  01:31:45,845 - #8 )
INFO  01:31:45,845 - #5 }
ERROR 01:31:45,845 - 
Sintaksna greska na liniji 27
ERROR 01:31:45,845 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 27
INFO  01:31:51,998 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  01:31:52,021 - #2 program
INFO  01:31:52,021 - #44 MJProgram
INFO  01:31:52,021 - #3 const
INFO  01:31:52,022 - #44 bool
INFO  01:31:52,022 - #44 b
INFO  01:31:52,022 - #11 =
INFO  01:31:52,022 - #45 true
INFO  01:31:52,022 - #6 ;
INFO  01:31:52,023 - #4 {
INFO  01:31:52,024 - #44 int
INFO  01:31:52,024 - #44 func
INFO  01:31:52,024 - #7 (
INFO  01:31:52,024 - #44 int
INFO  01:31:52,024 - #44 a
INFO  01:31:52,024 - #15 ,
INFO  01:31:52,024 - #44 char
INFO  01:31:52,024 - #44 w
INFO  01:31:52,024 - #15 ,
INFO  01:31:52,024 - #44 bool
INFO  01:31:52,024 - #44 c
INFO  01:31:52,024 - #8 )
INFO  01:31:52,024 - #44 char
INFO  01:31:52,025 - #44 ww
INFO  01:31:52,025 - #6 ;
INFO  01:31:52,025 - #4 {
INFO  01:31:52,025 - #12 return
INFO  01:31:52,025 - #43 1
INFO  01:31:52,025 - #6 ;
INFO  01:31:52,026 - #5 }
INFO  01:31:52,026 - #17 void
INFO  01:31:52,026 - #44 main
INFO  01:31:52,026 - #7 (
INFO  01:31:52,027 - #8 )
INFO  01:31:52,027 - #44 int
INFO  01:31:52,027 - #44 y
INFO  01:31:52,027 - #6 ;
INFO  01:31:52,027 - #44 bool
INFO  01:31:52,027 - #44 u
INFO  01:31:52,027 - #6 ;
INFO  01:31:52,027 - #44 char
INFO  01:31:52,027 - #44 cu
INFO  01:31:52,027 - #6 ;
INFO  01:31:52,027 - #44 char
INFO  01:31:52,027 - #44 x
INFO  01:31:52,027 - #10 [
INFO  01:31:52,027 - #9 ]
INFO  01:31:52,027 - #6 ;
INFO  01:31:52,028 - #4 {
INFO  01:31:52,028 - #44 y
INFO  01:31:52,028 - #11 =
INFO  01:31:52,028 - #44 func
INFO  01:31:52,028 - #7 (
INFO  01:31:52,028 - #43 1
INFO  01:31:52,028 - #15 ,
INFO  01:31:52,029 - #46 c
INFO  01:31:52,029 - #15 ,
INFO  01:31:52,029 - #45 true
INFO  01:31:52,029 - #8 )
INFO  01:31:52,030 - #6 ;
INFO  01:31:52,030 - #44 y
INFO  01:31:52,030 - #11 =
INFO  01:31:52,030 - #44 func
INFO  01:31:52,030 - #7 (
INFO  01:31:52,030 - #43 1
INFO  01:31:52,030 - #15 ,
INFO  01:31:52,030 - #46 c
INFO  01:31:52,031 - #15 ,
INFO  01:31:52,031 - #45 true
INFO  01:31:52,031 - #8 )
INFO  01:31:52,031 - #6 ;
INFO  01:31:52,031 - #44 u
INFO  01:31:52,031 - #11 =
INFO  01:31:52,031 - #44 x
INFO  01:31:52,031 - #18 .
INFO  01:31:52,031 - #41 findAny
INFO  01:31:52,031 - #7 (
INFO  01:31:52,032 - #43 3
INFO  01:31:52,032 - #8 )
INFO  01:31:52,032 - #6 ;
INFO  01:31:52,032 - #44 x
INFO  01:31:52,032 - #11 =
INFO  01:31:52,032 - #44 x
INFO  01:31:52,032 - #18 .
INFO  01:31:52,033 - #42 findAndReplace
INFO  01:31:52,033 - #7 (
INFO  01:31:52,033 - #43 3
INFO  01:31:52,033 - #15 ,
INFO  01:31:52,033 - #44 cu
INFO  01:31:52,033 - #20 =>
INFO  01:31:52,033 - #43 4
INFO  01:31:52,033 - #8 )
INFO  01:31:52,033 - #6 ;
INFO  01:31:52,034 - #36 read
INFO  01:31:52,034 - #7 (
INFO  01:31:52,034 - #44 x
INFO  01:31:52,034 - #10 [
INFO  01:31:52,034 - #43 1
INFO  01:31:52,034 - #9 ]
INFO  01:31:52,034 - #8 )
INFO  01:31:52,034 - #6 ;
INFO  01:31:52,034 - #5 }
INFO  01:31:52,035 - #5 }
INFO  01:31:52,040 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              NoDeclarationList(
              ) [NoDeclarationList]
              OneDeclDerived1(
                VarDecl(
                  Type(
                   int
                  ) [Type]
                  OneIdent(
                    IdentOptionsElem(
                     y
                    ) [IdentOptionsElem]
                  ) [OneIdent]
                ) [VarDecl]
              ) [OneDeclDerived1]
            ) [DeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 bool
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   u
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 cu
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementOne(
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     y
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             func
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActPars(
                              ActParsHas(
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorNumber(
                                       1
                                      ) [FactorNumber]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                                ActParsAddOnMany(
                                  ActParsAddOnMany(
                                    ActParsAddOnNone(
                                    ) [ActParsAddOnNone]
                                    ExprNormal(
                                      ExprOne(
                                        TermOne(
                                          FactorChar(
                                           c
                                          ) [FactorChar]
                                        ) [TermOne]
                                      ) [ExprOne]
                                    ) [ExprNormal]
                                  ) [ActParsAddOnMany]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorBool(
                                         true
                                        ) [FactorBool]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                              ) [ActParsHas]
                            ) [OptActPars]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementOne]
              StatementDesignator(
                DesignatorStatementIs(
                  Designator(
                   y
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesActPar(
                          Designator(
                           func
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                          OptActPars(
                            ActParsHas(
                              ExprNormal(
                                ExprOne(
                                  TermOne(
                                    FactorNumber(
                                     1
                                    ) [FactorNumber]
                                  ) [TermOne]
                                ) [ExprOne]
                              ) [ExprNormal]
                              ActParsAddOnMany(
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorBool(
                                       true
                                      ) [FactorBool]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                              ) [ActParsAddOnMany]
                            ) [ActParsHas]
                          ) [OptActPars]
                        ) [FactorDesActPar]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementIs]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementFindAny(
                Designator(
                 u
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                FindAnyBegin(
                ) [FindAnyBegin]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       3
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementFindAny]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementDesignator(
            DesignatorStatementFindAndReplace(
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              Designator(
               x
                NoAddOns(
                ) [NoAddOns]
              ) [Designator]
              FindAndReplaceBegin(
              ) [FindAndReplaceBegin]
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     3
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
             cu
              ExprNormal(
                ExprOne(
                  TermOne(
                    FactorNumber(
                     4
                    ) [FactorNumber]
                  ) [TermOne]
                ) [ExprOne]
              ) [ExprNormal]
            ) [DesignatorStatementFindAndReplace]
          ) [StatementDesignator]
        ) [StatementsMany]
        StatementRead(
          Designator(
           x
            AddOns(
              NoAddOns(
              ) [NoAddOns]
              DesignatorAddOn(
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       1
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorAddOn]
            ) [AddOns]
          ) [Designator]
        ) [StatementRead]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  01:31:52,040 - ===================================
INFO  01:31:52,043 - Obradjuje se funckijafunc na liniji 6
INFO  01:31:52,043 - Hello Var a na liniji 6
INFO  01:31:52,043 - Hello Var w na liniji 6
INFO  01:31:52,043 - Hello Var c na liniji 6
INFO  01:31:52,043 - Hello Var ww na liniji 7
INFO  01:31:52,043 - Obradjuje se funckijamain na liniji 12
INFO  01:31:52,043 - Hello Var y na liniji 13
INFO  01:31:52,044 - Hello Var u na liniji 14
INFO  01:31:52,044 - Hello Var cu na liniji 15
INFO  01:31:52,044 - Hello Var x na liniji 16
INFO  01:31:52,044 - usao actParsAddOnMany na liniji 11
INFO  01:31:52,044 - 2 na liniji 11
INFO  01:31:52,044 - usao actParsAddOnMany na liniji 11
INFO  01:31:52,044 - 5 na liniji 11
INFO  01:31:52,044 - usao ActParsHas na liniji 19
INFO  01:31:52,044 - 1 na liniji 19
INFO  01:31:52,044 - usao actParsAddOnMany na liniji 11
INFO  01:31:52,044 - 2 na liniji 11
INFO  01:31:52,044 - usao actParsAddOnMany na liniji 11
INFO  01:31:52,044 - 5 na liniji 11
INFO  01:31:52,044 - usao ActParsHas na liniji 20
INFO  01:31:52,045 - 1 na liniji 20
INFO  01:32:21,023 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  01:32:21,046 - #2 program
INFO  01:32:21,046 - #44 MJProgram
INFO  01:32:21,046 - #3 const
INFO  01:32:21,047 - #44 bool
INFO  01:32:21,047 - #44 b
INFO  01:32:21,047 - #11 =
INFO  01:32:21,047 - #45 true
INFO  01:32:21,048 - #6 ;
INFO  01:32:21,048 - #4 {
INFO  01:32:21,049 - #44 int
INFO  01:32:21,049 - #44 func
INFO  01:32:21,049 - #7 (
INFO  01:32:21,049 - #44 int
INFO  01:32:21,049 - #44 a
INFO  01:32:21,049 - #15 ,
INFO  01:32:21,049 - #44 char
INFO  01:32:21,049 - #44 w
INFO  01:32:21,049 - #15 ,
INFO  01:32:21,049 - #44 bool
INFO  01:32:21,049 - #44 c
INFO  01:32:21,049 - #8 )
INFO  01:32:21,050 - #44 char
INFO  01:32:21,050 - #44 ww
INFO  01:32:21,050 - #6 ;
INFO  01:32:21,050 - #4 {
INFO  01:32:21,051 - #12 return
INFO  01:32:21,051 - #43 1
INFO  01:32:21,051 - #6 ;
INFO  01:32:21,051 - #5 }
INFO  01:32:21,051 - #17 void
INFO  01:32:21,052 - #44 main
INFO  01:32:21,052 - #7 (
INFO  01:32:21,052 - #8 )
INFO  01:32:21,052 - #44 int
INFO  01:32:21,052 - #44 y
INFO  01:32:21,052 - #6 ;
INFO  01:32:21,052 - #44 bool
INFO  01:32:21,052 - #44 u
INFO  01:32:21,052 - #6 ;
INFO  01:32:21,053 - #44 char
INFO  01:32:21,053 - #44 cu
INFO  01:32:21,053 - #6 ;
INFO  01:32:21,053 - #44 char
INFO  01:32:21,053 - #44 x
INFO  01:32:21,053 - #10 [
INFO  01:32:21,053 - #9 ]
INFO  01:32:21,053 - #6 ;
INFO  01:32:21,053 - #4 {
INFO  01:32:21,053 - #44 y
INFO  01:32:21,053 - #11 =
INFO  01:32:21,054 - #44 func
INFO  01:32:21,054 - #7 (
INFO  01:32:21,054 - #43 1
INFO  01:32:21,054 - #15 ,
INFO  01:32:21,054 - #46 c
INFO  01:32:21,055 - #15 ,
INFO  01:32:21,055 - #45 true
INFO  01:32:21,055 - #8 )
INFO  01:32:21,055 - #6 ;
INFO  01:32:21,055 - #44 y
INFO  01:32:21,056 - #11 =
INFO  01:32:21,056 - #44 func
INFO  01:32:21,056 - #7 (
INFO  01:32:21,056 - #43 1
INFO  01:32:21,056 - #15 ,
INFO  01:32:21,056 - #46 c
INFO  01:32:21,056 - #15 ,
INFO  01:32:21,056 - #45 true
INFO  01:32:21,056 - #8 )
INFO  01:32:21,056 - #6 ;
INFO  01:32:21,056 - #44 u
INFO  01:32:21,056 - #11 =
INFO  01:32:21,056 - #44 x
INFO  01:32:21,056 - #18 .
INFO  01:32:21,056 - #41 findAny
INFO  01:32:21,056 - #7 (
INFO  01:32:21,057 - #43 3
INFO  01:32:21,057 - #8 )
INFO  01:32:21,057 - #6 ;
INFO  01:32:21,057 - #44 x
INFO  01:32:21,057 - #11 =
INFO  01:32:21,057 - #44 x
INFO  01:32:21,057 - #18 .
INFO  01:32:21,057 - #42 findAndReplace
INFO  01:32:21,057 - #7 (
INFO  01:32:21,058 - #43 3
INFO  01:32:21,058 - #15 ,
INFO  01:32:21,058 - #44 cu
INFO  01:32:21,058 - #20 =>
INFO  01:32:21,058 - #43 4
INFO  01:32:21,058 - #8 )
INFO  01:32:21,058 - #6 ;
INFO  01:32:21,058 - #36 read
INFO  01:32:21,058 - #7 (
INFO  01:32:21,058 - #44 x
INFO  01:32:21,058 - #10 [
INFO  01:32:21,058 - #43 1
INFO  01:32:21,058 - #9 ]
INFO  01:32:21,058 - #8 )
INFO  01:32:21,059 - #6 ;
INFO  01:32:21,059 - #16 print
INFO  01:32:21,059 - #7 (
INFO  01:32:21,059 - #43 3
INFO  01:32:21,059 - #38 *
INFO  01:32:21,059 - #43 3
INFO  01:32:21,060 - #8 )
INFO  01:32:21,060 - #6 ;
INFO  01:32:21,060 - #5 }
INFO  01:32:21,060 - #5 }
INFO  01:32:21,065 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              NoDeclarationList(
              ) [NoDeclarationList]
              OneDeclDerived1(
                VarDecl(
                  Type(
                   int
                  ) [Type]
                  OneIdent(
                    IdentOptionsElem(
                     y
                    ) [IdentOptionsElem]
                  ) [OneIdent]
                ) [VarDecl]
              ) [OneDeclDerived1]
            ) [DeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 bool
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   u
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 cu
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       y
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorDesActPar(
                              Designator(
                               func
                                NoAddOns(
                                ) [NoAddOns]
                              ) [Designator]
                              OptActPars(
                                ActParsHas(
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorNumber(
                                         1
                                        ) [FactorNumber]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                  ActParsAddOnMany(
                                    ActParsAddOnMany(
                                      ActParsAddOnNone(
                                      ) [ActParsAddOnNone]
                                      ExprNormal(
                                        ExprOne(
                                          TermOne(
                                            FactorChar(
                                             c
                                            ) [FactorChar]
                                          ) [TermOne]
                                        ) [ExprOne]
                                      ) [ExprNormal]
                                    ) [ActParsAddOnMany]
                                    ExprNormal(
                                      ExprOne(
                                        TermOne(
                                          FactorBool(
                                           true
                                          ) [FactorBool]
                                        ) [TermOne]
                                      ) [ExprOne]
                                    ) [ExprNormal]
                                  ) [ActParsAddOnMany]
                                ) [ActParsHas]
                              ) [OptActPars]
                            ) [FactorDesActPar]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     y
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             func
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActPars(
                              ActParsHas(
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorNumber(
                                       1
                                      ) [FactorNumber]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                                ActParsAddOnMany(
                                  ActParsAddOnMany(
                                    ActParsAddOnNone(
                                    ) [ActParsAddOnNone]
                                    ExprNormal(
                                      ExprOne(
                                        TermOne(
                                          FactorChar(
                                           c
                                          ) [FactorChar]
                                        ) [TermOne]
                                      ) [ExprOne]
                                    ) [ExprNormal]
                                  ) [ActParsAddOnMany]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorBool(
                                         true
                                        ) [FactorBool]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                              ) [ActParsHas]
                            ) [OptActPars]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
              StatementDesignator(
                DesignatorStatementFindAny(
                  Designator(
                   u
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  FindAnyBegin(
                  ) [FindAnyBegin]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         3
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementFindAny]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementFindAndReplace(
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                FindAndReplaceBegin(
                ) [FindAndReplaceBegin]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       3
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
               cu
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       4
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementFindAndReplace]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementRead(
            Designator(
             x
              AddOns(
                NoAddOns(
                ) [NoAddOns]
                DesignatorAddOn(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         1
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorAddOn]
              ) [AddOns]
            ) [Designator]
          ) [StatementRead]
        ) [StatementsMany]
        StatementPrint(
          ExprNormal(
            ExprOne(
              TermMany(
                TermOne(
                  FactorNumber(
                   3
                  ) [FactorNumber]
                ) [TermOne]
                MulopM(
                ) [MulopM]
                FactorNumber(
                 3
                ) [FactorNumber]
              ) [TermMany]
            ) [ExprOne]
          ) [ExprNormal]
          NumConstOptNone(
          ) [NumConstOptNone]
        ) [StatementPrint]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  01:32:21,066 - ===================================
INFO  01:32:21,069 - Obradjuje se funckijafunc na liniji 6
INFO  01:32:21,069 - Hello Var a na liniji 6
INFO  01:32:21,069 - Hello Var w na liniji 6
INFO  01:32:21,069 - Hello Var c na liniji 6
INFO  01:32:21,069 - Hello Var ww na liniji 7
INFO  01:32:21,069 - Obradjuje se funckijamain na liniji 12
INFO  01:32:21,069 - Hello Var y na liniji 13
INFO  01:32:21,069 - Hello Var u na liniji 14
INFO  01:32:21,069 - Hello Var cu na liniji 15
INFO  01:32:21,069 - Hello Var x na liniji 16
INFO  01:32:21,069 - usao actParsAddOnMany na liniji 11
INFO  01:32:21,070 - 2 na liniji 11
INFO  01:32:21,070 - usao actParsAddOnMany na liniji 11
INFO  01:32:21,070 - 5 na liniji 11
INFO  01:32:21,070 - usao ActParsHas na liniji 19
INFO  01:32:21,070 - 1 na liniji 19
INFO  01:32:21,070 - usao actParsAddOnMany na liniji 11
INFO  01:32:21,070 - 2 na liniji 11
INFO  01:32:21,070 - usao actParsAddOnMany na liniji 11
INFO  01:32:21,070 - 5 na liniji 11
INFO  01:32:21,070 - usao ActParsHas na liniji 20
INFO  01:32:21,071 - 1 na liniji 20
INFO  01:32:41,098 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  01:32:41,122 - #2 program
INFO  01:32:41,122 - #44 MJProgram
INFO  01:32:41,122 - #3 const
INFO  01:32:41,123 - #44 bool
INFO  01:32:41,123 - #44 b
INFO  01:32:41,123 - #11 =
INFO  01:32:41,123 - #45 true
INFO  01:32:41,123 - #6 ;
INFO  01:32:41,124 - #4 {
INFO  01:32:41,124 - #44 int
INFO  01:32:41,125 - #44 func
INFO  01:32:41,125 - #7 (
INFO  01:32:41,125 - #44 int
INFO  01:32:41,125 - #44 a
INFO  01:32:41,125 - #15 ,
INFO  01:32:41,125 - #44 char
INFO  01:32:41,125 - #44 w
INFO  01:32:41,125 - #15 ,
INFO  01:32:41,125 - #44 bool
INFO  01:32:41,125 - #44 c
INFO  01:32:41,125 - #8 )
INFO  01:32:41,125 - #44 char
INFO  01:32:41,125 - #44 ww
INFO  01:32:41,125 - #6 ;
INFO  01:32:41,126 - #4 {
INFO  01:32:41,126 - #12 return
INFO  01:32:41,126 - #43 1
INFO  01:32:41,126 - #6 ;
INFO  01:32:41,127 - #5 }
INFO  01:32:41,127 - #17 void
INFO  01:32:41,127 - #44 main
INFO  01:32:41,127 - #7 (
INFO  01:32:41,127 - #8 )
INFO  01:32:41,128 - #44 int
INFO  01:32:41,128 - #44 y
INFO  01:32:41,128 - #6 ;
INFO  01:32:41,128 - #44 bool
INFO  01:32:41,128 - #44 u
INFO  01:32:41,128 - #6 ;
INFO  01:32:41,128 - #44 char
INFO  01:32:41,128 - #44 cu
INFO  01:32:41,128 - #6 ;
INFO  01:32:41,128 - #44 char
INFO  01:32:41,128 - #44 x
INFO  01:32:41,128 - #10 [
INFO  01:32:41,128 - #9 ]
INFO  01:32:41,128 - #6 ;
INFO  01:32:41,128 - #4 {
INFO  01:32:41,128 - #44 y
INFO  01:32:41,129 - #11 =
INFO  01:32:41,129 - #44 func
INFO  01:32:41,129 - #7 (
INFO  01:32:41,129 - #43 1
INFO  01:32:41,129 - #15 ,
INFO  01:32:41,130 - #46 c
INFO  01:32:41,130 - #15 ,
INFO  01:32:41,130 - #45 true
INFO  01:32:41,130 - #8 )
INFO  01:32:41,130 - #6 ;
INFO  01:32:41,131 - #44 y
INFO  01:32:41,131 - #11 =
INFO  01:32:41,131 - #44 func
INFO  01:32:41,131 - #7 (
INFO  01:32:41,131 - #43 1
INFO  01:32:41,131 - #15 ,
INFO  01:32:41,131 - #46 c
INFO  01:32:41,131 - #15 ,
INFO  01:32:41,131 - #45 true
INFO  01:32:41,131 - #8 )
INFO  01:32:41,132 - #6 ;
INFO  01:32:41,132 - #44 u
INFO  01:32:41,132 - #11 =
INFO  01:32:41,132 - #44 x
INFO  01:32:41,132 - #18 .
INFO  01:32:41,132 - #41 findAny
INFO  01:32:41,132 - #7 (
INFO  01:32:41,132 - #43 3
INFO  01:32:41,132 - #8 )
INFO  01:32:41,132 - #6 ;
INFO  01:32:41,133 - #44 x
INFO  01:32:41,133 - #11 =
INFO  01:32:41,133 - #44 x
INFO  01:32:41,133 - #18 .
INFO  01:32:41,133 - #42 findAndReplace
INFO  01:32:41,133 - #7 (
INFO  01:32:41,133 - #43 3
INFO  01:32:41,133 - #15 ,
INFO  01:32:41,133 - #44 cu
INFO  01:32:41,133 - #20 =>
INFO  01:32:41,133 - #43 4
INFO  01:32:41,133 - #8 )
INFO  01:32:41,134 - #6 ;
INFO  01:32:41,134 - #36 read
INFO  01:32:41,134 - #7 (
INFO  01:32:41,134 - #44 x
INFO  01:32:41,134 - #10 [
INFO  01:32:41,134 - #43 1
INFO  01:32:41,134 - #9 ]
INFO  01:32:41,134 - #8 )
INFO  01:32:41,134 - #6 ;
INFO  01:32:41,135 - #16 print
INFO  01:32:41,135 - #7 (
INFO  01:32:41,135 - #44 x
INFO  01:32:41,135 - #10 [
INFO  01:32:41,135 - #43 1
INFO  01:32:41,135 - #9 ]
INFO  01:32:41,135 - #8 )
ERROR 01:32:41,135 - 
Sintaksna greska na liniji 27
ERROR 01:32:41,135 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 27
INFO  01:36:53,255 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  01:36:53,280 - #2 program
INFO  01:36:53,280 - #44 MJProgram
INFO  01:36:53,280 - #3 const
INFO  01:36:53,280 - #44 bool
INFO  01:36:53,280 - #44 b
INFO  01:36:53,281 - #11 =
INFO  01:36:53,281 - #45 true
INFO  01:36:53,281 - #6 ;
INFO  01:36:53,281 - #4 {
INFO  01:36:53,282 - #44 int
INFO  01:36:53,282 - #44 func
INFO  01:36:53,282 - #7 (
INFO  01:36:53,282 - #44 int
INFO  01:36:53,282 - #44 a
INFO  01:36:53,282 - #15 ,
INFO  01:36:53,282 - #44 char
INFO  01:36:53,283 - #44 w
INFO  01:36:53,283 - #15 ,
INFO  01:36:53,283 - #44 bool
INFO  01:36:53,283 - #44 c
INFO  01:36:53,283 - #8 )
INFO  01:36:53,283 - #44 char
INFO  01:36:53,283 - #44 ww
INFO  01:36:53,283 - #6 ;
INFO  01:36:53,283 - #4 {
INFO  01:36:53,284 - #12 return
INFO  01:36:53,284 - #43 1
INFO  01:36:53,284 - #6 ;
INFO  01:36:53,284 - #5 }
INFO  01:36:53,284 - #17 void
INFO  01:36:53,285 - #44 main
INFO  01:36:53,285 - #7 (
INFO  01:36:53,285 - #8 )
INFO  01:36:53,285 - #44 int
INFO  01:36:53,285 - #44 y
INFO  01:36:53,285 - #6 ;
INFO  01:36:53,285 - #44 bool
INFO  01:36:53,285 - #44 u
INFO  01:36:53,285 - #6 ;
INFO  01:36:53,285 - #44 char
INFO  01:36:53,285 - #44 cu
INFO  01:36:53,286 - #6 ;
INFO  01:36:53,286 - #44 char
INFO  01:36:53,286 - #44 x
INFO  01:36:53,286 - #10 [
INFO  01:36:53,286 - #9 ]
INFO  01:36:53,286 - #6 ;
INFO  01:36:53,286 - #4 {
INFO  01:36:53,286 - #44 y
INFO  01:36:53,286 - #11 =
INFO  01:36:53,287 - #44 func
INFO  01:36:53,287 - #7 (
INFO  01:36:53,287 - #43 1
INFO  01:36:53,287 - #15 ,
INFO  01:36:53,288 - #46 c
INFO  01:36:53,288 - #15 ,
INFO  01:36:53,288 - #45 true
INFO  01:36:53,288 - #8 )
INFO  01:36:53,288 - #6 ;
INFO  01:36:53,289 - #44 y
INFO  01:36:53,289 - #11 =
INFO  01:36:53,289 - #44 func
INFO  01:36:53,289 - #7 (
INFO  01:36:53,289 - #43 1
INFO  01:36:53,289 - #15 ,
INFO  01:36:53,289 - #46 c
INFO  01:36:53,289 - #15 ,
INFO  01:36:53,289 - #45 true
INFO  01:36:53,289 - #8 )
INFO  01:36:53,289 - #6 ;
INFO  01:36:53,289 - #44 u
INFO  01:36:53,289 - #11 =
INFO  01:36:53,289 - #44 x
INFO  01:36:53,290 - #18 .
INFO  01:36:53,290 - #41 findAny
INFO  01:36:53,290 - #7 (
INFO  01:36:53,290 - #43 3
INFO  01:36:53,290 - #8 )
INFO  01:36:53,290 - #6 ;
INFO  01:36:53,290 - #44 x
INFO  01:36:53,290 - #11 =
INFO  01:36:53,290 - #44 x
INFO  01:36:53,291 - #18 .
INFO  01:36:53,291 - #42 findAndReplace
INFO  01:36:53,291 - #7 (
INFO  01:36:53,291 - #43 3
INFO  01:36:53,291 - #15 ,
INFO  01:36:53,291 - #44 cu
INFO  01:36:53,291 - #20 =>
INFO  01:36:53,291 - #43 4
INFO  01:36:53,291 - #8 )
INFO  01:36:53,291 - #6 ;
INFO  01:36:53,291 - #36 read
INFO  01:36:53,291 - #7 (
INFO  01:36:53,291 - #44 x
INFO  01:36:53,291 - #10 [
INFO  01:36:53,292 - #43 1
INFO  01:36:53,292 - #9 ]
INFO  01:36:53,292 - #8 )
INFO  01:36:53,292 - #6 ;
INFO  01:36:53,292 - #16 print
INFO  01:36:53,292 - #7 (
INFO  01:36:53,292 - #44 x
INFO  01:36:53,292 - #10 [
INFO  01:36:53,292 - #43 1
INFO  01:36:53,292 - #9 ]
INFO  01:36:53,292 - #8 )
INFO  01:36:53,293 - #6 ;
INFO  01:36:53,293 - #5 }
INFO  01:36:53,293 - #5 }
INFO  01:36:53,300 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              NoDeclarationList(
              ) [NoDeclarationList]
              OneDeclDerived1(
                VarDecl(
                  Type(
                   int
                  ) [Type]
                  OneIdent(
                    IdentOptionsElem(
                     y
                    ) [IdentOptionsElem]
                  ) [OneIdent]
                ) [VarDecl]
              ) [OneDeclDerived1]
            ) [DeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 bool
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   u
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 cu
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       y
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorDesActPar(
                              Designator(
                               func
                                NoAddOns(
                                ) [NoAddOns]
                              ) [Designator]
                              OptActPars(
                                ActParsHas(
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorNumber(
                                         1
                                        ) [FactorNumber]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                  ActParsAddOnMany(
                                    ActParsAddOnMany(
                                      ActParsAddOnNone(
                                      ) [ActParsAddOnNone]
                                      ExprNormal(
                                        ExprOne(
                                          TermOne(
                                            FactorChar(
                                             c
                                            ) [FactorChar]
                                          ) [TermOne]
                                        ) [ExprOne]
                                      ) [ExprNormal]
                                    ) [ActParsAddOnMany]
                                    ExprNormal(
                                      ExprOne(
                                        TermOne(
                                          FactorBool(
                                           true
                                          ) [FactorBool]
                                        ) [TermOne]
                                      ) [ExprOne]
                                    ) [ExprNormal]
                                  ) [ActParsAddOnMany]
                                ) [ActParsHas]
                              ) [OptActPars]
                            ) [FactorDesActPar]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     y
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             func
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActPars(
                              ActParsHas(
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorNumber(
                                       1
                                      ) [FactorNumber]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                                ActParsAddOnMany(
                                  ActParsAddOnMany(
                                    ActParsAddOnNone(
                                    ) [ActParsAddOnNone]
                                    ExprNormal(
                                      ExprOne(
                                        TermOne(
                                          FactorChar(
                                           c
                                          ) [FactorChar]
                                        ) [TermOne]
                                      ) [ExprOne]
                                    ) [ExprNormal]
                                  ) [ActParsAddOnMany]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorBool(
                                         true
                                        ) [FactorBool]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                              ) [ActParsHas]
                            ) [OptActPars]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
              StatementDesignator(
                DesignatorStatementFindAny(
                  Designator(
                   u
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  FindAnyBegin(
                  ) [FindAnyBegin]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         3
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementFindAny]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementFindAndReplace(
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                FindAndReplaceBegin(
                ) [FindAndReplaceBegin]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       3
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
               cu
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       4
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementFindAndReplace]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementRead(
            Designator(
             x
              AddOns(
                NoAddOns(
                ) [NoAddOns]
                DesignatorAddOn(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         1
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorAddOn]
              ) [AddOns]
            ) [Designator]
          ) [StatementRead]
        ) [StatementsMany]
        StatementPrint(
          ExprNormal(
            ExprOne(
              TermOne(
                FactorDesignator(
                  Designator(
                   x
                    AddOns(
                      NoAddOns(
                      ) [NoAddOns]
                      DesignatorAddOn(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorAddOn]
                    ) [AddOns]
                  ) [Designator]
                ) [FactorDesignator]
              ) [TermOne]
            ) [ExprOne]
          ) [ExprNormal]
          NumConstOptNone(
          ) [NumConstOptNone]
        ) [StatementPrint]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  01:36:53,301 - ===================================
INFO  01:36:53,303 - Obradjuje se funckijafunc na liniji 6
INFO  01:36:53,304 - Hello Var a na liniji 6
INFO  01:36:53,304 - Hello Var w na liniji 6
INFO  01:36:53,304 - Hello Var c na liniji 6
INFO  01:36:53,304 - Hello Var ww na liniji 7
INFO  01:36:53,304 - Obradjuje se funckijamain na liniji 12
INFO  01:36:53,304 - Hello Var y na liniji 13
INFO  01:36:53,304 - Hello Var u na liniji 14
INFO  01:36:53,304 - Hello Var cu na liniji 15
INFO  01:36:53,304 - Hello Var x na liniji 16
INFO  01:36:53,304 - usao actParsAddOnMany na liniji 11
INFO  01:36:53,305 - 2 na liniji 11
INFO  01:36:53,305 - usao actParsAddOnMany na liniji 11
INFO  01:36:53,305 - 5 na liniji 11
INFO  01:36:53,305 - usao ActParsHas na liniji 19
INFO  01:36:53,305 - 1 na liniji 19
INFO  01:36:53,305 - usao actParsAddOnMany na liniji 11
INFO  01:36:53,305 - 2 na liniji 11
INFO  01:36:53,305 - usao actParsAddOnMany na liniji 11
INFO  01:36:53,305 - 5 na liniji 11
INFO  01:36:53,307 - usao ActParsHas na liniji 20
INFO  01:36:53,307 - 1 na liniji 20
INFO  01:36:53,307 - ASDBJKHLDSKABLHJSDAKBHJDSABKHJLDSABHJSDAHBJKL
INFO  01:38:03,532 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  01:38:03,556 - #2 program
INFO  01:38:03,556 - #44 MJProgram
INFO  01:38:03,556 - #3 const
INFO  01:38:03,557 - #44 bool
INFO  01:38:03,557 - #44 b
INFO  01:38:03,557 - #11 =
INFO  01:38:03,557 - #45 true
INFO  01:38:03,557 - #6 ;
INFO  01:38:03,558 - #4 {
INFO  01:38:03,558 - #44 int
INFO  01:38:03,558 - #44 func
INFO  01:38:03,558 - #7 (
INFO  01:38:03,558 - #44 int
INFO  01:38:03,558 - #44 a
INFO  01:38:03,558 - #15 ,
INFO  01:38:03,559 - #44 char
INFO  01:38:03,559 - #44 w
INFO  01:38:03,559 - #15 ,
INFO  01:38:03,559 - #44 bool
INFO  01:38:03,559 - #44 c
INFO  01:38:03,559 - #8 )
INFO  01:38:03,559 - #44 char
INFO  01:38:03,559 - #44 ww
INFO  01:38:03,559 - #6 ;
INFO  01:38:03,559 - #4 {
INFO  01:38:03,560 - #12 return
INFO  01:38:03,560 - #43 1
INFO  01:38:03,560 - #6 ;
INFO  01:38:03,560 - #5 }
INFO  01:38:03,560 - #17 void
INFO  01:38:03,561 - #44 main
INFO  01:38:03,561 - #7 (
INFO  01:38:03,561 - #8 )
INFO  01:38:03,561 - #44 int
INFO  01:38:03,561 - #44 y
INFO  01:38:03,561 - #6 ;
INFO  01:38:03,561 - #44 bool
INFO  01:38:03,561 - #44 u
INFO  01:38:03,562 - #6 ;
INFO  01:38:03,562 - #44 char
INFO  01:38:03,562 - #44 cu
INFO  01:38:03,562 - #6 ;
INFO  01:38:03,562 - #44 char
INFO  01:38:03,562 - #44 x
INFO  01:38:03,562 - #10 [
INFO  01:38:03,562 - #9 ]
INFO  01:38:03,562 - #6 ;
INFO  01:38:03,562 - #4 {
INFO  01:38:03,562 - #44 y
INFO  01:38:03,562 - #11 =
INFO  01:38:03,563 - #44 func
INFO  01:38:03,563 - #7 (
INFO  01:38:03,563 - #43 1
INFO  01:38:03,563 - #15 ,
INFO  01:38:03,564 - #46 c
INFO  01:38:03,564 - #15 ,
INFO  01:38:03,564 - #45 true
INFO  01:38:03,564 - #8 )
INFO  01:38:03,564 - #6 ;
INFO  01:38:03,565 - #44 y
INFO  01:38:03,565 - #11 =
INFO  01:38:03,565 - #44 func
INFO  01:38:03,565 - #7 (
INFO  01:38:03,565 - #43 1
INFO  01:38:03,565 - #15 ,
INFO  01:38:03,565 - #46 c
INFO  01:38:03,565 - #15 ,
INFO  01:38:03,565 - #45 true
INFO  01:38:03,565 - #8 )
INFO  01:38:03,565 - #6 ;
INFO  01:38:03,565 - #44 u
INFO  01:38:03,565 - #11 =
INFO  01:38:03,565 - #44 x
INFO  01:38:03,565 - #18 .
INFO  01:38:03,566 - #41 findAny
INFO  01:38:03,566 - #7 (
INFO  01:38:03,566 - #43 3
INFO  01:38:03,566 - #8 )
INFO  01:38:03,566 - #6 ;
INFO  01:38:03,566 - #44 x
INFO  01:38:03,566 - #11 =
INFO  01:38:03,566 - #44 x
INFO  01:38:03,566 - #18 .
INFO  01:38:03,566 - #42 findAndReplace
INFO  01:38:03,567 - #7 (
INFO  01:38:03,567 - #43 3
INFO  01:38:03,567 - #15 ,
INFO  01:38:03,567 - #44 cu
INFO  01:38:03,567 - #20 =>
INFO  01:38:03,567 - #43 4
INFO  01:38:03,567 - #8 )
INFO  01:38:03,567 - #6 ;
INFO  01:38:03,567 - #36 read
INFO  01:38:03,567 - #7 (
INFO  01:38:03,567 - #44 x
INFO  01:38:03,567 - #10 [
INFO  01:38:03,567 - #43 1
INFO  01:38:03,567 - #9 ]
INFO  01:38:03,567 - #8 )
INFO  01:38:03,568 - #6 ;
INFO  01:38:03,568 - #16 print
INFO  01:38:03,568 - #7 (
INFO  01:38:03,568 - #44 x
INFO  01:38:03,568 - #10 [
INFO  01:38:03,568 - #43 1
INFO  01:38:03,568 - #9 ]
INFO  01:38:03,568 - #8 )
INFO  01:38:03,569 - #6 ;
INFO  01:38:03,569 - #5 }
INFO  01:38:03,569 - #5 }
INFO  01:38:03,576 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              NoDeclarationList(
              ) [NoDeclarationList]
              OneDeclDerived1(
                VarDecl(
                  Type(
                   int
                  ) [Type]
                  OneIdent(
                    IdentOptionsElem(
                     y
                    ) [IdentOptionsElem]
                  ) [OneIdent]
                ) [VarDecl]
              ) [OneDeclDerived1]
            ) [DeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 bool
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   u
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 cu
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       y
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorDesActPar(
                              Designator(
                               func
                                NoAddOns(
                                ) [NoAddOns]
                              ) [Designator]
                              OptActPars(
                                ActParsHas(
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorNumber(
                                         1
                                        ) [FactorNumber]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                  ActParsAddOnMany(
                                    ActParsAddOnMany(
                                      ActParsAddOnNone(
                                      ) [ActParsAddOnNone]
                                      ExprNormal(
                                        ExprOne(
                                          TermOne(
                                            FactorChar(
                                             c
                                            ) [FactorChar]
                                          ) [TermOne]
                                        ) [ExprOne]
                                      ) [ExprNormal]
                                    ) [ActParsAddOnMany]
                                    ExprNormal(
                                      ExprOne(
                                        TermOne(
                                          FactorBool(
                                           true
                                          ) [FactorBool]
                                        ) [TermOne]
                                      ) [ExprOne]
                                    ) [ExprNormal]
                                  ) [ActParsAddOnMany]
                                ) [ActParsHas]
                              ) [OptActPars]
                            ) [FactorDesActPar]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     y
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             func
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActPars(
                              ActParsHas(
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorNumber(
                                       1
                                      ) [FactorNumber]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                                ActParsAddOnMany(
                                  ActParsAddOnMany(
                                    ActParsAddOnNone(
                                    ) [ActParsAddOnNone]
                                    ExprNormal(
                                      ExprOne(
                                        TermOne(
                                          FactorChar(
                                           c
                                          ) [FactorChar]
                                        ) [TermOne]
                                      ) [ExprOne]
                                    ) [ExprNormal]
                                  ) [ActParsAddOnMany]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorBool(
                                         true
                                        ) [FactorBool]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                              ) [ActParsHas]
                            ) [OptActPars]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
              StatementDesignator(
                DesignatorStatementFindAny(
                  Designator(
                   u
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  FindAnyBegin(
                  ) [FindAnyBegin]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         3
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementFindAny]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementFindAndReplace(
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                FindAndReplaceBegin(
                ) [FindAndReplaceBegin]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       3
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
               cu
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       4
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementFindAndReplace]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementRead(
            Designator(
             x
              AddOns(
                NoAddOns(
                ) [NoAddOns]
                DesignatorAddOn(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         1
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorAddOn]
              ) [AddOns]
            ) [Designator]
          ) [StatementRead]
        ) [StatementsMany]
        StatementPrint(
          ExprNormal(
            ExprOne(
              TermOne(
                FactorDesignator(
                  Designator(
                   x
                    AddOns(
                      NoAddOns(
                      ) [NoAddOns]
                      DesignatorAddOn(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorAddOn]
                    ) [AddOns]
                  ) [Designator]
                ) [FactorDesignator]
              ) [TermOne]
            ) [ExprOne]
          ) [ExprNormal]
          NumConstOptNone(
          ) [NumConstOptNone]
        ) [StatementPrint]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  01:38:03,576 - ===================================
INFO  01:38:03,579 - Obradjuje se funckijafunc na liniji 6
INFO  01:38:03,579 - Hello Var a na liniji 6
INFO  01:38:03,579 - Hello Var w na liniji 6
INFO  01:38:03,580 - Hello Var c na liniji 6
INFO  01:38:03,580 - Hello Var ww na liniji 7
INFO  01:38:03,580 - Obradjuje se funckijamain na liniji 12
INFO  01:38:03,580 - Hello Var y na liniji 13
INFO  01:38:03,580 - Hello Var u na liniji 14
INFO  01:38:03,580 - Hello Var cu na liniji 15
INFO  01:38:03,580 - Hello Var x na liniji 16
INFO  01:38:03,580 - usao actParsAddOnMany na liniji 11
INFO  01:38:03,580 - 2 na liniji 11
INFO  01:38:03,580 - usao actParsAddOnMany na liniji 11
INFO  01:38:03,580 - 5 na liniji 11
INFO  01:38:03,580 - usao ActParsHas na liniji 19
INFO  01:38:03,580 - 1 na liniji 19
INFO  01:38:03,580 - usao actParsAddOnMany na liniji 11
INFO  01:38:03,580 - 2 na liniji 11
INFO  01:38:03,580 - usao actParsAddOnMany na liniji 11
INFO  01:38:03,580 - 5 na liniji 11
INFO  01:38:03,581 - usao ActParsHas na liniji 20
INFO  01:38:03,581 - 1 na liniji 20
INFO  01:38:03,582 - ASDBJKHLDSKABLHJSDAKBHJDSABKHJLDSABHJSDAHBJKL
INFO  01:38:24,269 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  01:38:24,296 - #2 program
INFO  01:38:24,296 - #44 MJProgram
INFO  01:38:24,296 - #3 const
INFO  01:38:24,297 - #44 bool
INFO  01:38:24,297 - #44 b
INFO  01:38:24,297 - #11 =
INFO  01:38:24,297 - #45 true
INFO  01:38:24,297 - #6 ;
INFO  01:38:24,298 - #4 {
INFO  01:38:24,298 - #44 int
INFO  01:38:24,298 - #44 func
INFO  01:38:24,298 - #7 (
INFO  01:38:24,299 - #44 int
INFO  01:38:24,299 - #44 a
INFO  01:38:24,299 - #15 ,
INFO  01:38:24,299 - #44 char
INFO  01:38:24,299 - #44 w
INFO  01:38:24,299 - #15 ,
INFO  01:38:24,299 - #44 bool
INFO  01:38:24,299 - #44 c
INFO  01:38:24,300 - #8 )
INFO  01:38:24,300 - #44 char
INFO  01:38:24,300 - #44 ww
INFO  01:38:24,300 - #6 ;
INFO  01:38:24,300 - #4 {
INFO  01:38:24,301 - #12 return
INFO  01:38:24,301 - #43 1
INFO  01:38:24,301 - #6 ;
INFO  01:38:24,301 - #5 }
INFO  01:38:24,302 - #17 void
INFO  01:38:24,302 - #44 main
INFO  01:38:24,302 - #7 (
INFO  01:38:24,302 - #8 )
INFO  01:38:24,303 - #44 int
INFO  01:38:24,303 - #44 y
INFO  01:38:24,303 - #6 ;
INFO  01:38:24,303 - #44 bool
INFO  01:38:24,303 - #44 u
INFO  01:38:24,303 - #6 ;
INFO  01:38:24,303 - #44 char
INFO  01:38:24,303 - #44 cu
INFO  01:38:24,303 - #6 ;
INFO  01:38:24,303 - #44 char
INFO  01:38:24,304 - #44 x
INFO  01:38:24,304 - #10 [
INFO  01:38:24,304 - #9 ]
INFO  01:38:24,304 - #6 ;
INFO  01:38:24,304 - #4 {
INFO  01:38:24,304 - #44 y
INFO  01:38:24,304 - #11 =
INFO  01:38:24,305 - #44 func
INFO  01:38:24,305 - #7 (
INFO  01:38:24,305 - #43 1
INFO  01:38:24,305 - #15 ,
INFO  01:38:24,306 - #46 c
INFO  01:38:24,306 - #15 ,
INFO  01:38:24,306 - #45 true
INFO  01:38:24,306 - #8 )
INFO  01:38:24,307 - #6 ;
INFO  01:38:24,307 - #44 y
INFO  01:38:24,308 - #11 =
INFO  01:38:24,308 - #44 func
INFO  01:38:24,308 - #7 (
INFO  01:38:24,308 - #43 1
INFO  01:38:24,308 - #15 ,
INFO  01:38:24,308 - #46 c
INFO  01:38:24,308 - #15 ,
INFO  01:38:24,308 - #45 true
INFO  01:38:24,308 - #8 )
INFO  01:38:24,308 - #6 ;
INFO  01:38:24,308 - #44 u
INFO  01:38:24,308 - #11 =
INFO  01:38:24,309 - #44 x
INFO  01:38:24,309 - #18 .
INFO  01:38:24,309 - #41 findAny
INFO  01:38:24,309 - #7 (
INFO  01:38:24,309 - #44 y
INFO  01:38:24,309 - #8 )
INFO  01:38:24,309 - #6 ;
INFO  01:38:24,309 - #44 x
INFO  01:38:24,310 - #11 =
INFO  01:38:24,310 - #44 x
INFO  01:38:24,310 - #18 .
INFO  01:38:24,310 - #42 findAndReplace
INFO  01:38:24,310 - #7 (
INFO  01:38:24,310 - #43 3
INFO  01:38:24,310 - #15 ,
INFO  01:38:24,310 - #44 cu
INFO  01:38:24,310 - #20 =>
INFO  01:38:24,310 - #43 4
INFO  01:38:24,310 - #8 )
INFO  01:38:24,310 - #6 ;
INFO  01:38:24,311 - #36 read
INFO  01:38:24,311 - #7 (
INFO  01:38:24,311 - #44 x
INFO  01:38:24,311 - #10 [
INFO  01:38:24,311 - #43 1
INFO  01:38:24,311 - #9 ]
INFO  01:38:24,311 - #8 )
INFO  01:38:24,311 - #6 ;
INFO  01:38:24,312 - #16 print
INFO  01:38:24,312 - #7 (
INFO  01:38:24,312 - #44 x
INFO  01:38:24,312 - #10 [
INFO  01:38:24,312 - #43 1
INFO  01:38:24,312 - #9 ]
INFO  01:38:24,312 - #8 )
INFO  01:38:24,313 - #6 ;
INFO  01:38:24,313 - #5 }
INFO  01:38:24,313 - #5 }
INFO  01:38:24,320 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              NoDeclarationList(
              ) [NoDeclarationList]
              OneDeclDerived1(
                VarDecl(
                  Type(
                   int
                  ) [Type]
                  OneIdent(
                    IdentOptionsElem(
                     y
                    ) [IdentOptionsElem]
                  ) [OneIdent]
                ) [VarDecl]
              ) [OneDeclDerived1]
            ) [DeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 bool
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   u
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 cu
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       y
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorDesActPar(
                              Designator(
                               func
                                NoAddOns(
                                ) [NoAddOns]
                              ) [Designator]
                              OptActPars(
                                ActParsHas(
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorNumber(
                                         1
                                        ) [FactorNumber]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                  ActParsAddOnMany(
                                    ActParsAddOnMany(
                                      ActParsAddOnNone(
                                      ) [ActParsAddOnNone]
                                      ExprNormal(
                                        ExprOne(
                                          TermOne(
                                            FactorChar(
                                             c
                                            ) [FactorChar]
                                          ) [TermOne]
                                        ) [ExprOne]
                                      ) [ExprNormal]
                                    ) [ActParsAddOnMany]
                                    ExprNormal(
                                      ExprOne(
                                        TermOne(
                                          FactorBool(
                                           true
                                          ) [FactorBool]
                                        ) [TermOne]
                                      ) [ExprOne]
                                    ) [ExprNormal]
                                  ) [ActParsAddOnMany]
                                ) [ActParsHas]
                              ) [OptActPars]
                            ) [FactorDesActPar]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     y
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             func
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActPars(
                              ActParsHas(
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorNumber(
                                       1
                                      ) [FactorNumber]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                                ActParsAddOnMany(
                                  ActParsAddOnMany(
                                    ActParsAddOnNone(
                                    ) [ActParsAddOnNone]
                                    ExprNormal(
                                      ExprOne(
                                        TermOne(
                                          FactorChar(
                                           c
                                          ) [FactorChar]
                                        ) [TermOne]
                                      ) [ExprOne]
                                    ) [ExprNormal]
                                  ) [ActParsAddOnMany]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorBool(
                                         true
                                        ) [FactorBool]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                              ) [ActParsHas]
                            ) [OptActPars]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
              StatementDesignator(
                DesignatorStatementFindAny(
                  Designator(
                   u
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  FindAnyBegin(
                  ) [FindAnyBegin]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorDesignator(
                          Designator(
                           y
                            NoAddOns(
                            ) [NoAddOns]
                          ) [Designator]
                        ) [FactorDesignator]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementFindAny]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementFindAndReplace(
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                FindAndReplaceBegin(
                ) [FindAndReplaceBegin]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       3
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
               cu
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       4
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementFindAndReplace]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementRead(
            Designator(
             x
              AddOns(
                NoAddOns(
                ) [NoAddOns]
                DesignatorAddOn(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         1
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorAddOn]
              ) [AddOns]
            ) [Designator]
          ) [StatementRead]
        ) [StatementsMany]
        StatementPrint(
          ExprNormal(
            ExprOne(
              TermOne(
                FactorDesignator(
                  Designator(
                   x
                    AddOns(
                      NoAddOns(
                      ) [NoAddOns]
                      DesignatorAddOn(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorAddOn]
                    ) [AddOns]
                  ) [Designator]
                ) [FactorDesignator]
              ) [TermOne]
            ) [ExprOne]
          ) [ExprNormal]
          NumConstOptNone(
          ) [NumConstOptNone]
        ) [StatementPrint]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  01:38:24,321 - ===================================
INFO  01:38:24,324 - Obradjuje se funckijafunc na liniji 6
INFO  01:38:24,324 - Hello Var a na liniji 6
INFO  01:38:24,324 - Hello Var w na liniji 6
INFO  01:38:24,324 - Hello Var c na liniji 6
INFO  01:38:24,325 - Hello Var ww na liniji 7
INFO  01:38:24,325 - Obradjuje se funckijamain na liniji 12
INFO  01:38:24,325 - Hello Var y na liniji 13
INFO  01:38:24,325 - Hello Var u na liniji 14
INFO  01:38:24,325 - Hello Var cu na liniji 15
INFO  01:38:24,325 - Hello Var x na liniji 16
INFO  01:38:24,325 - usao actParsAddOnMany na liniji 11
INFO  01:38:24,325 - 2 na liniji 11
INFO  01:38:24,325 - usao actParsAddOnMany na liniji 11
INFO  01:38:24,325 - 5 na liniji 11
INFO  01:38:24,325 - usao ActParsHas na liniji 19
INFO  01:38:24,325 - 1 na liniji 19
INFO  01:38:24,326 - usao actParsAddOnMany na liniji 11
INFO  01:38:24,326 - 2 na liniji 11
INFO  01:38:24,326 - usao actParsAddOnMany na liniji 11
INFO  01:38:24,326 - 5 na liniji 11
INFO  01:38:24,327 - usao ActParsHas na liniji 20
INFO  01:38:24,327 - 1 na liniji 20
INFO  01:38:24,327 - ASDBJKHLDSKABLHJSDAKBHJDSABKHJLDSABHJSDAHBJKL
INFO  01:38:24,328 - ASDBJKHLDSKABLHJSDAKBHJDSABKHJLDSABHJSDAHBJKL
INFO  01:38:42,147 - Compiling source file: F:\Desktop\PP1Project\MJCompiler\test\program2.mj
INFO  01:38:42,171 - #2 program
INFO  01:38:42,171 - #44 MJProgram
INFO  01:38:42,171 - #3 const
INFO  01:38:42,172 - #44 bool
INFO  01:38:42,172 - #44 b
INFO  01:38:42,172 - #11 =
INFO  01:38:42,172 - #45 true
INFO  01:38:42,172 - #6 ;
INFO  01:38:42,173 - #4 {
INFO  01:38:42,173 - #44 int
INFO  01:38:42,173 - #44 func
INFO  01:38:42,174 - #7 (
INFO  01:38:42,174 - #44 int
INFO  01:38:42,174 - #44 a
INFO  01:38:42,174 - #15 ,
INFO  01:38:42,174 - #44 char
INFO  01:38:42,174 - #44 w
INFO  01:38:42,174 - #15 ,
INFO  01:38:42,174 - #44 bool
INFO  01:38:42,174 - #44 c
INFO  01:38:42,174 - #8 )
INFO  01:38:42,174 - #44 char
INFO  01:38:42,174 - #44 ww
INFO  01:38:42,174 - #6 ;
INFO  01:38:42,175 - #4 {
INFO  01:38:42,175 - #12 return
INFO  01:38:42,175 - #43 1
INFO  01:38:42,175 - #6 ;
INFO  01:38:42,176 - #5 }
INFO  01:38:42,176 - #17 void
INFO  01:38:42,176 - #44 main
INFO  01:38:42,176 - #7 (
INFO  01:38:42,176 - #8 )
INFO  01:38:42,177 - #44 int
INFO  01:38:42,177 - #44 y
INFO  01:38:42,177 - #6 ;
INFO  01:38:42,177 - #44 bool
INFO  01:38:42,177 - #44 u
INFO  01:38:42,177 - #6 ;
INFO  01:38:42,177 - #44 char
INFO  01:38:42,177 - #44 cu
INFO  01:38:42,177 - #6 ;
INFO  01:38:42,177 - #44 char
INFO  01:38:42,177 - #44 x
INFO  01:38:42,177 - #10 [
INFO  01:38:42,177 - #9 ]
INFO  01:38:42,177 - #6 ;
INFO  01:38:42,177 - #4 {
INFO  01:38:42,177 - #44 y
INFO  01:38:42,178 - #11 =
INFO  01:38:42,178 - #44 func
INFO  01:38:42,178 - #7 (
INFO  01:38:42,178 - #43 1
INFO  01:38:42,178 - #15 ,
INFO  01:38:42,179 - #46 c
INFO  01:38:42,179 - #15 ,
INFO  01:38:42,179 - #45 true
INFO  01:38:42,179 - #8 )
INFO  01:38:42,179 - #6 ;
INFO  01:38:42,180 - #44 y
INFO  01:38:42,180 - #11 =
INFO  01:38:42,180 - #44 func
INFO  01:38:42,180 - #7 (
INFO  01:38:42,180 - #43 1
INFO  01:38:42,180 - #15 ,
INFO  01:38:42,180 - #46 c
INFO  01:38:42,180 - #8 )
INFO  01:38:42,180 - #6 ;
INFO  01:38:42,181 - #44 u
INFO  01:38:42,181 - #11 =
INFO  01:38:42,181 - #44 x
INFO  01:38:42,181 - #18 .
INFO  01:38:42,181 - #41 findAny
INFO  01:38:42,181 - #7 (
INFO  01:38:42,181 - #43 3
INFO  01:38:42,182 - #8 )
INFO  01:38:42,182 - #6 ;
INFO  01:38:42,182 - #44 x
INFO  01:38:42,182 - #11 =
INFO  01:38:42,182 - #44 x
INFO  01:38:42,182 - #18 .
INFO  01:38:42,182 - #42 findAndReplace
INFO  01:38:42,182 - #7 (
INFO  01:38:42,182 - #43 3
INFO  01:38:42,183 - #15 ,
INFO  01:38:42,183 - #44 cu
INFO  01:38:42,183 - #20 =>
INFO  01:38:42,183 - #43 4
INFO  01:38:42,183 - #8 )
INFO  01:38:42,183 - #6 ;
INFO  01:38:42,183 - #36 read
INFO  01:38:42,183 - #7 (
INFO  01:38:42,183 - #44 x
INFO  01:38:42,183 - #10 [
INFO  01:38:42,183 - #43 1
INFO  01:38:42,183 - #9 ]
INFO  01:38:42,183 - #8 )
INFO  01:38:42,184 - #6 ;
INFO  01:38:42,184 - #16 print
INFO  01:38:42,184 - #7 (
INFO  01:38:42,184 - #44 x
INFO  01:38:42,184 - #10 [
INFO  01:38:42,184 - #43 1
INFO  01:38:42,184 - #9 ]
INFO  01:38:42,184 - #8 )
INFO  01:38:42,184 - #6 ;
INFO  01:38:42,184 - #5 }
INFO  01:38:42,185 - #5 }
INFO  01:38:42,192 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    NoDeclarationList(
    ) [NoDeclarationList]
    OneDeclDerived2(
      ConstDecl(
        Type(
         bool
        ) [Type]
        ConstIdentOne(
          ConstIdent(
           b
            ConstValueBool(
             true
            ) [ConstValueBool]
          ) [ConstIdent]
        ) [ConstIdentOne]
      ) [ConstDecl]
    ) [OneDeclDerived2]
  ) [DeclarationList]
  MethodDeclListMany(
    MethodDeclListOne(
      MethodDecl(
        MethodTypeNameType(
          Type(
           int
          ) [Type]
         func
        ) [MethodTypeNameType]
        FormParamsMany(
          FormParamsMany(
            FormParamsOne(
              FormParElem(
                Type(
                 int
                ) [Type]
               a
              ) [FormParElem]
            ) [FormParamsOne]
            FormParElem(
              Type(
               char
              ) [Type]
             w
            ) [FormParElem]
          ) [FormParamsMany]
          FormParElem(
            Type(
             bool
            ) [Type]
           c
          ) [FormParElem]
        ) [FormParamsMany]
        DeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 ww
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        StatementOne(
          StatementReturnExpr(
            ExprNormal(
              ExprOne(
                TermOne(
                  FactorNumber(
                   1
                  ) [FactorNumber]
                ) [TermOne]
              ) [ExprOne]
            ) [ExprNormal]
          ) [StatementReturnExpr]
        ) [StatementOne]
      ) [MethodDecl]
    ) [MethodDeclListOne]
    MethodDecl(
      MethodTypeNameVoid(
       main
      ) [MethodTypeNameVoid]
      FormParamsNone(
      ) [FormParamsNone]
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              NoDeclarationList(
              ) [NoDeclarationList]
              OneDeclDerived1(
                VarDecl(
                  Type(
                   int
                  ) [Type]
                  OneIdent(
                    IdentOptionsElem(
                     y
                    ) [IdentOptionsElem]
                  ) [OneIdent]
                ) [VarDecl]
              ) [OneDeclDerived1]
            ) [DeclarationList]
            OneDeclDerived1(
              VarDecl(
                Type(
                 bool
                ) [Type]
                OneIdent(
                  IdentOptionsElem(
                   u
                  ) [IdentOptionsElem]
                ) [OneIdent]
              ) [VarDecl]
            ) [OneDeclDerived1]
          ) [DeclarationList]
          OneDeclDerived1(
            VarDecl(
              Type(
               char
              ) [Type]
              OneIdent(
                IdentOptionsElem(
                 cu
                ) [IdentOptionsElem]
              ) [OneIdent]
            ) [VarDecl]
          ) [OneDeclDerived1]
        ) [DeclarationList]
        OneDeclDerived1(
          VarDecl(
            Type(
             char
            ) [Type]
            OneIdent(
              IdentOptionsArray(
               x
              ) [IdentOptionsArray]
            ) [OneIdent]
          ) [VarDecl]
        ) [OneDeclDerived1]
      ) [DeclarationList]
      StatementsMany(
        StatementsMany(
          StatementsMany(
            StatementsMany(
              StatementsMany(
                StatementOne(
                  StatementDesignator(
                    DesignatorStatementIs(
                      Designator(
                       y
                        NoAddOns(
                        ) [NoAddOns]
                      ) [Designator]
                      ExprNormal(
                        ExprOne(
                          TermOne(
                            FactorDesActPar(
                              Designator(
                               func
                                NoAddOns(
                                ) [NoAddOns]
                              ) [Designator]
                              OptActPars(
                                ActParsHas(
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorNumber(
                                         1
                                        ) [FactorNumber]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                  ActParsAddOnMany(
                                    ActParsAddOnMany(
                                      ActParsAddOnNone(
                                      ) [ActParsAddOnNone]
                                      ExprNormal(
                                        ExprOne(
                                          TermOne(
                                            FactorChar(
                                             c
                                            ) [FactorChar]
                                          ) [TermOne]
                                        ) [ExprOne]
                                      ) [ExprNormal]
                                    ) [ActParsAddOnMany]
                                    ExprNormal(
                                      ExprOne(
                                        TermOne(
                                          FactorBool(
                                           true
                                          ) [FactorBool]
                                        ) [TermOne]
                                      ) [ExprOne]
                                    ) [ExprNormal]
                                  ) [ActParsAddOnMany]
                                ) [ActParsHas]
                              ) [OptActPars]
                            ) [FactorDesActPar]
                          ) [TermOne]
                        ) [ExprOne]
                      ) [ExprNormal]
                    ) [DesignatorStatementIs]
                  ) [StatementDesignator]
                ) [StatementOne]
                StatementDesignator(
                  DesignatorStatementIs(
                    Designator(
                     y
                      NoAddOns(
                      ) [NoAddOns]
                    ) [Designator]
                    ExprNormal(
                      ExprOne(
                        TermOne(
                          FactorDesActPar(
                            Designator(
                             func
                              NoAddOns(
                              ) [NoAddOns]
                            ) [Designator]
                            OptActPars(
                              ActParsHas(
                                ExprNormal(
                                  ExprOne(
                                    TermOne(
                                      FactorNumber(
                                       1
                                      ) [FactorNumber]
                                    ) [TermOne]
                                  ) [ExprOne]
                                ) [ExprNormal]
                                ActParsAddOnMany(
                                  ActParsAddOnNone(
                                  ) [ActParsAddOnNone]
                                  ExprNormal(
                                    ExprOne(
                                      TermOne(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                      ) [TermOne]
                                    ) [ExprOne]
                                  ) [ExprNormal]
                                ) [ActParsAddOnMany]
                              ) [ActParsHas]
                            ) [OptActPars]
                          ) [FactorDesActPar]
                        ) [TermOne]
                      ) [ExprOne]
                    ) [ExprNormal]
                  ) [DesignatorStatementIs]
                ) [StatementDesignator]
              ) [StatementsMany]
              StatementDesignator(
                DesignatorStatementFindAny(
                  Designator(
                   u
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  Designator(
                   x
                    NoAddOns(
                    ) [NoAddOns]
                  ) [Designator]
                  FindAnyBegin(
                  ) [FindAnyBegin]
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         3
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorStatementFindAny]
              ) [StatementDesignator]
            ) [StatementsMany]
            StatementDesignator(
              DesignatorStatementFindAndReplace(
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                Designator(
                 x
                  NoAddOns(
                  ) [NoAddOns]
                ) [Designator]
                FindAndReplaceBegin(
                ) [FindAndReplaceBegin]
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       3
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
               cu
                ExprNormal(
                  ExprOne(
                    TermOne(
                      FactorNumber(
                       4
                      ) [FactorNumber]
                    ) [TermOne]
                  ) [ExprOne]
                ) [ExprNormal]
              ) [DesignatorStatementFindAndReplace]
            ) [StatementDesignator]
          ) [StatementsMany]
          StatementRead(
            Designator(
             x
              AddOns(
                NoAddOns(
                ) [NoAddOns]
                DesignatorAddOn(
                  ExprNormal(
                    ExprOne(
                      TermOne(
                        FactorNumber(
                         1
                        ) [FactorNumber]
                      ) [TermOne]
                    ) [ExprOne]
                  ) [ExprNormal]
                ) [DesignatorAddOn]
              ) [AddOns]
            ) [Designator]
          ) [StatementRead]
        ) [StatementsMany]
        StatementPrint(
          ExprNormal(
            ExprOne(
              TermOne(
                FactorDesignator(
                  Designator(
                   x
                    AddOns(
                      NoAddOns(
                      ) [NoAddOns]
                      DesignatorAddOn(
                        ExprNormal(
                          ExprOne(
                            TermOne(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [TermOne]
                          ) [ExprOne]
                        ) [ExprNormal]
                      ) [DesignatorAddOn]
                    ) [AddOns]
                  ) [Designator]
                ) [FactorDesignator]
              ) [TermOne]
            ) [ExprOne]
          ) [ExprNormal]
          NumConstOptNone(
          ) [NumConstOptNone]
        ) [StatementPrint]
      ) [StatementsMany]
    ) [MethodDecl]
  ) [MethodDeclListMany]
) [Program]
INFO  01:38:42,193 - ===================================
INFO  01:38:42,196 - Obradjuje se funckijafunc na liniji 6
INFO  01:38:42,196 - Hello Var a na liniji 6
INFO  01:38:42,196 - Hello Var w na liniji 6
INFO  01:38:42,196 - Hello Var c na liniji 6
INFO  01:38:42,196 - Hello Var ww na liniji 7
INFO  01:38:42,196 - Obradjuje se funckijamain na liniji 12
INFO  01:38:42,196 - Hello Var y na liniji 13
INFO  01:38:42,196 - Hello Var u na liniji 14
INFO  01:38:42,196 - Hello Var cu na liniji 15
INFO  01:38:42,196 - Hello Var x na liniji 16
INFO  01:38:42,197 - usao actParsAddOnMany na liniji 11
INFO  01:38:42,197 - 2 na liniji 11
INFO  01:38:42,197 - usao actParsAddOnMany na liniji 11
INFO  01:38:42,197 - 5 na liniji 11
INFO  01:38:42,197 - usao ActParsHas na liniji 19
INFO  01:38:42,197 - 1 na liniji 19
INFO  01:38:42,197 - usao actParsAddOnMany na liniji 11
INFO  01:38:42,197 - 2 na liniji 11
INFO  01:38:42,197 - usao ActParsHas na liniji 20
INFO  01:38:42,197 - 1 na liniji 20
ERROR 01:38:42,197 - Greska: Lose prosledjeni parametri! dsAct na liniji 20
INFO  01:38:42,197 - ASDBJKHLDSKABLHJSDAKBHJDSABKHJLDSABHJSDAHBJKL
